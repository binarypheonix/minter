{"version":3,"sources":["components/common/assets/link-icon.svg","components/common/assets/splash-logo.svg","components/common/assets/wallet.svg","components/common/assets/header-logo.svg","components/common/index.tsx","lib/nfts/decoders.ts","lib/nfts/queries.ts","reducer/async/errors.ts","reducer/async/queries.ts","reducer/slices/collections.ts","lib/util/ipfs.ts","lib/nfts/actions.ts","reducer/validators/createNft.ts","lib/util/taquito-custom-ipfs-http-handler.ts","lib/service/bcd.ts","lib/util/tezosToolkit.ts","lib/service/tzkt.ts","lib/system.ts","reducer/async/wallet.ts","reducer/slices/notificationsActions.ts","reducer/async/actions.ts","reducer/slices/createNft.ts","reducer/slices/createNftCsvImport.ts","reducer/slices/system.ts","reducer/slices/status.ts","reducer/slices/notifications.ts","reducer/slices/marketplace.ts","reducer/index.ts","components/common/modals/FormModal.tsx","components/common/modals/CreateCollection.tsx","components/CreateNonFungiblePage/CollectionSelect.tsx","components/CreateNonFungiblePage/Form.tsx","components/CreateNonFungiblePage/FileUpload.tsx","components/CreateNonFungiblePage/Confirmation.tsx","components/CreateNonFungiblePage/index.tsx","components/Collections/Catalog/CollectionTab.tsx","components/Collections/Catalog/Sidebar.tsx","components/Collections/Catalog/CollectionsDropdown.tsx","components/common/TokenMedia.tsx","components/common/TokenCard.tsx","components/Collections/Catalog/CollectionDisplay.tsx","components/Collections/Catalog/index.tsx","components/common/modals/TransferToken.tsx","components/common/modals/SellToken.tsx","components/common/modals/CancelTokenSale.tsx","components/common/modals/BuyToken.tsx","components/Collections/TokenDetail/index.tsx","components/Marketplace/Catalog/FeaturedToken.tsx","components/common/VisibilityTrigger.tsx","components/Marketplace/Catalog/index.tsx","components/common/Header.tsx","components/common/Notifications.tsx","components/Creator/CreatorDisplay.tsx","components/Creator/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","components/common/assets/tezos-sym.svg"],"names":["module","exports","MinterButton","props","size","variant","rest","styles","useStyleConfig","sx","MinterMenuButton","MinterMenuItem","ContractRow","storage","t","type","kind","tzips","address","balance","creator","numContracts","numDelegations","numOriginations","numTransactions","numReveals","numMigrations","firstActivity","firstActivityTime","lastActivity","lastActivityTime","BigMapRow","id","active","hash","key","value","firstLevel","lastLevel","updates","BigMapUpdateRow","content","level","timestamp","bigmap","contract","alias","path","action","LedgerBigMap","TokenMetadataBigMap","token_id","token_info","sequenceCodecs","inputCodec","transform","outputCodec","name","is","input","context","e","decoded","validate","encode","legacySaleV1","sale_seller","sale_token","token_for_sale_address","token_for_sale_token_id","legacySaleV2","seller","saleV3","sale_data","amount","price","fa2_address","sale","isLegacy","FixedPriceSaleBigMapKey","FixedPriceSaleBigMapRowV1","FixedPriceSaleBigMapRowV2","FixedPriceSaleBigMap","row","merge","toString","FixedPriceSaleStorage","sales","NftMetadataFormat","uri","mimeType","fileSize","fileName","duration","dimensions","unit","dataRate","NftMetadataAttribute","NftMetadata","minter","symbol","decimals","rightUri","artifactUri","displayUri","thumbnailUri","externalUri","description","creators","contributors","publishers","date","blocklevel","tags","genres","language","identifier","rights","isTransferable","isBooleanAmount","shouldPreferSymbol","formats","attributes","NftSale","mutez","saleToken","tokenId","saleId","AssetContractMetadata","title","owner","metadata","fromHexString","test","Buffer","from","getAssetMetadataBigMap","tzkt","a","getContractBigMapKeys","data","D","decode","isLeft","Error","right","getLedgerBigMap","getTokenMetadataBigMap","getFixedPriceSalesBigMap","getContractStorage","fixedPriceStorage","fixedPriceBigMapId","getBigMapKeys","fixedPriceSales","getBigMapUpdates","params","bigMapUpdates","decoder","getContracts","contracts","contractsArray","decodedArray","map","compact","getRight","getContract","getContractNfts","system","ledger","tokens","mktAddress","config","marketplace","fixedPrice","tez","tokenSales","activeSales","filter","tokensSorted","sort","b","Number","parseInt","Promise","all","token","tokenInfo","decodedInfo","_","mapValues","resolveMetadata","resolvedInfo","saleData","find","v","getNftAssetContract","metaBigMap","metaUri","getWalletNftAssetContracts","getNftAssetContracts","tzPublicKey","includeStorage","addresses","uniq","c","includes","results","length","join","limit","assetBigMapRows","push","console","log","getMarketplaceNfts","s","Array","Set","tokenBigMapRows","salesToView","reverse","salesWithTokenMetadata","x","tokenSale","tokenItem","item","loaded","tokenMetadata","ErrorKind","loadMarketplaceNft","tokenLoadData","result","saleAddress","tokenIdStr","error","err","getNftAssetContractQuery","createAsyncThunk","api","getState","rejectWithValue","GetNftAssetContractFailed","message","getContractNftsQuery","collections","GetContractNftsFailed","getWalletAssetContractsQuery","status","WalletNotConnected","GetWalletNftAssetContractsFailed","getAssetContractsQuery","GetNftAssetContractsFailed","getMarketplaceNftsQuery","slice","i","GetMarketplaceNftsFailed","loadMoreMarketplaceNftsQuery","iStart","findIndex","iEnd","tokensAfter","initialState","selectedCollection","globalCollection","nftFaucet","populateCollectionR","state","payload","updateCollectionsR","coll","updateCollectionR","createSlice","reducers","updateCollections","updateCollection","selectCollection","populateCollection","extraReducers","addCase","fulfilled","actions","uploadIPFSJSON","axios","post","uploadIPFSFile","file","formData","FormData","append","uploadIPFSImageWithThumbnail","isIpfsUri","ipfsUriToCid","baseRegex","RegExp","source","replace","toHexString","createAssetContract","metadataMap","MichelsonMap","ipfsApi","interfaces","tokenCategory","resp","set","ipfsUri","toolkit","wallet","originate","code","Fa2MultiNftAssetCode","assets","next_token_id","operators","token_metadata","admin","pending_admin","paused","send","mintToken","at","methods","mint","mintTokens","mints","entries","index","meta","transferToken","contractAddress","toAddress","transfer","from_","txs","to_","listTokenForSale","marketplaceContract","tokenContract","salePrice","saleQty","contractM","contractT","batch","withContractCall","update_operators","add_operator","operator","parameterSchema","ExtractSchema","hasOwnProperty","sell","cancelTokenSaleLegacy","cancel","remove_operator","cancelTokenSale","buyTokenLegacy","tokenSeller","buy","buyToken","fileUploadSchema","Joi","object","selectedFile","required","invalid","collectionSelectSchema","fields","string","min","allow","metadataRows","array","items","collectionAddress","isValid","schema","allowUnknown","validateCreateNftForm","CustomIpfsHttpHandler","ipfsGatheway","gatewayProtocol","_ipfsGateway","_gatewayProtocol","_httpBackend","HttpBackend","this","_contractAbstraction","_context","location","createRequest","url","substring","method","headers","json","offset","bcd","network","get","response","BetterCallDev","getWalletContracts","setConfirmationPollingInterval","tzToolkit","rpc","getConstants","constants","confirmationPollingIntervalSecond","time_between_blocks","setProvider","mkQueryParams","finalParams","URLSearchParams","Status","TzKt","createMetadataResolver","ipfsUrl","ipfsGateway","startsWith","ipfsHandler","DEFAULT_HANDLERS","provider","MetadataProvider","Context","defaultContract","contractCache","provideMetadata","networkType","NetworkType","MAINNET","DELPHINET","EDONET","CUSTOM","FLORENCENET","getWallet","eventHandlers","BeaconWallet","preferredNetwork","initWallet","forceConnect","client","getActiveAccount","requestPermissions","rpcUrl","clearActiveAccount","createSystemWithWallet","setWalletProvider","tzUtils","getPKH","WalletConnected","systemWithWallet","walletReconnectAttempted","disconnect","TezosToolkit","setPackerProvider","MichelCodecPacker","addExtension","Tzip12Module","ToolkitConnected","Minter","configure","compatibilityConfig","Configured","betterCallDev","reconnectWallet","connectToolkit","faucetAddress","connectWallet","disconnectWallet","_arg","PERMISSION_REQUEST_SENT","handler","PERMISSION_REQUEST_SUCCESS","PERMISSION_REQUEST_ERROR","OPERATION_REQUEST_SENT","OPERATION_REQUEST_SUCCESS","OPERATION_REQUEST_ERROR","ACKNOWLEDGE_RECEIVED","WalletPermissionRequestDenied","pushNotification","createAction","readNotification","deliverNotification","notifyPending","requestId","read","delivered","pendingNotification","notifyFulfilled","fulfilledNotification","readFileAsDataUrlAction","ns","readFile","resolve","reject","reader","FileReader","substr","onload","buffer","target","ArrayBuffer","blob","Blob","Uint8Array","objectUrl","window","URL","createObjectURL","readAsArrayBuffer","UnknownError","createAssetContractAction","dispatch","op","pendingMessage","confirmation","fulfilledMessage","CreateAssetContractFailed","appendAttributes","reduce","acc","Object","keys","k","_tag","attribute","appendStateMetadata","undefined","CreateStatus","mintTokenAction","createNft","CreateNftFormInvalid","fetch","fetched","File","ipfsMetadata","imageResponse","thumbnail","displayImageFile","IPFSUploadFailed","displayFile","fileResponse","MintTokenFailed","ParsedCsvRow","collection","ParsedCsv","n","mintCsvTokensAction","createNftCsvImport","selectedCsvFile","then","r","text","parsed","parse","columns","skipEmptyLines","attrRegex","attrRegexTest","metadataArray","p","split","transferTokenAction","args","to","TransferTokenFailed","listTokenAction","ListTokenFailed","cancelTokenSaleAction","saleType","CancelTokenSaleFailed","buyTokenAction","res","BuyTokenFailed","steps","step","uploadedArtifact","createStatus","Ready","incrementStep","stepIdx","indexOf","decrementStep","updateField","updateSelectedFile","clearSelectedfile","updateDisplayImageFile","clearDisplayImagFile","addMetadataRow","updateMetadataRowName","updateMetadataRowValue","deleteMetadataRow","splice","setCreateStatus","clearForm","updateSelectedCsvFile","clearSelectedCsvFile","defaultStatus","mintCsvTokens","listToken","getWalletAssetContracts","methodMap","setStatus","clearError","forEach","pending","rejected","rejectValue","serialized","populateMarketplaceR","populateMarketplace","reducer","combineReducers","collectionsSlice","marketplaceSlice","createNftSlice","createNftCsvImportSlice","systemSlice","statusSlice","notifications","notificationsSlice","store","configureStore","middleware","getDefaultMiddleware","immutableCheck","ignoredPaths","serializableCheck","ignoredActions","useDispatch","baseUseDispatch","useSelector","selector","equalityFn","baseUseSelector","Content","onClose","onRetry","onCancel","flexDir","align","px","py","color","mb","textAlign","errorMessage","justify","onClick","display","alignItems","ml","strokeWidth","fontSize","fontWeight","sync","pendingAsyncMessage","completeMessage","FormModal","dispatchOnOpen","onComplete","disclosure","isOpen","onOpen","useState","setRequestId","notification","onSubmit","dispatchThunk","requestStatus","call","hasError","useEffect","closeAndReset","withCallback","afterClose","closeIfReadyOrComplete","initialFocusRef","initialRef","closeOnEsc","closeOnOverlayClick","onEsc","onOverlayClick","mt","body","CreateCollectionModal","contractName","setContractName","React","useRef","fontFamily","autoFocus","ref","placeholder","onChange","CreateCollectionButton","useDisclosure","CollectionSelect","pb","as","Button","border","borderColor","height","backgroundColor","mr","defaultValue","selected","Form","paddingBottom","marginLeft","minHeight","opacity","marginY","paddingRight","flex","paddingLeft","cursor","_hover","pl","pr","pt","FilePreview","src","width","objectFit","canvasRef","createRef","controls","muted","onLoadedData","canvas","current","video","currentTarget","videoWidth","videoHeight","canvasContext","getContext","drawImage","toBlob","style","camera-controls","auto-rotate","data-js-focus-visible","class","FileUpload","onDrop","useCallback","files","useDropzone","maxFiles","maxSize","accept","getRootProps","getInputProps","base","md","borderStyle","borderWidth","borderRadius","maxWidth","maxHeight","overflow","bg","paddingX","CsvFileUpload","useLocation","setLocation","marginBottom","paddingY","marginTop","role","aria-label","Label","children","Confirmation","w","allowToggle","ProgressIndicator","justifyContent","mx","LeftContent","borderBottom","CreateNonFungiblePage","stepIsValid","validateCreateNftStep","h","borderBottomWidth","borderBottomColor","textDecoration","visibility","overflowY","CollectionTab","onSelect","_groupHover","Sidebar","idx","CollectionsDropdown","my","MediaNotFound","TokenMedia","cid","ipfsUriToGatewayUrl","errored","setErrored","obj","setObj","maxW","maxH","onError","preload","preventDefault","onMouseEnter","play","onMouseLeave","pause","onLoadedMetadata","currentTime","rotation-per-second","TokenCard","position","ratio","boxShadow","transition","borderTop","whiteSpace","textOverflow","toFixed","tz","alt","CollectionDisplay","ownedOnly","borderLeftWidth","borderLeftColor","history","back","overflowWrap","href","gui","isExternal","sm","lg","xl","gap","Catalog","logo","minW","process","REACT_APP_VERSION","textDecor","TransferTokenModal","setToAddress","SellTokenModal","setPrice","Math","floor","validPrice","isNaN","pointerEvents","SellTokenButton","disabled","CancelTokenSaleModal","CancelTokenSaleButton","BuyTokenModal","isFullWidth","BuyTokenButton","NotFound","TokenDetail","collectionUndefined","isOwner","flexGrow","scrollBehavior","flexDirection","flexWrap","zIndex","margin","top","borderLeft","borderRight","borderBottomEndRadius","borderTopStartRadius","borderTopEndRadius","pos","lk","marginRight","minWidth","FeaturedToken","isElementNearViewport","element","allowedDistanceToViewport","getBoundingClientRect","bottom","left","windowWidth","innerWidth","windowHeight","innerHeight","topCheck","leftCheck","bottomCheck","rightCheck","VisibilityTrigger","onVisible","divRef","elementRef","hasTriggered","intervalId","setInterval","clearInterval","useVisibilityTrigger","padding","MobileHeaderLink","DesktopHeaderLink","WalletInfo","WalletDisplay","placement","background","wallet_icon","alignSelf","NavItems","btnRef","finalFocusRef","Header","headerLogo","notificationStatus","Notifications","toast","useToast","isEqual","isClosable","onCloseComplete","CreatorDisplay404","CreatorDisplay","Creator","creatorsCollections","addr","App","Boolean","hostname","match","theme","extendTheme","global","colors","brand","black","darkGray","neutralGray","gray","lightGray","brightGray","blue","lightBlue","turquoise","red","components","variants","primaryAction","_active","primaryActionInactive","primaryActionLined","primaryActionInverted","secondaryAction","secondaryActionLined","cancelAction","tertiaryAction","Link","lineHeight","Input","outline","field","_focus","Textarea","MenuButton","primary","_expanded","MenuItem","fonts","heading","mono","fontWeights","normal","bold","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"wiBAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,wCCA3CD,EAAOC,QAAU,IAA0B,yC,ybCepC,SAASC,EACdC,GAEA,IAAQC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,QAAYC,EAA1B,YAAmCH,EAAnC,oBACMI,EAASC,yBAAe,SAAU,CAAEJ,OAAMC,YAChD,OAAO,kBAAC,IAAD,eAAQI,GAAIF,GAAYD,IAW1B,SAASI,EACdP,GAEA,IAAQE,EAAqBF,EAArBE,QAAYC,EAApB,YAA6BH,EAA7B,aACMI,EAASC,yBAAe,aAAc,CAAEH,YAC9C,OAAO,kBAAC,IAAD,eAAYI,GAAIF,GAAYD,IAG9B,SAASK,EAAeR,GAC7B,IAAQE,EAAqBF,EAArBE,QAAYC,EAApB,YAA6BH,EAA7B,aACMI,EAASC,yBAAe,WAAY,CAAEH,YAC5C,OAAO,kBAAC,IAAD,eAAUI,GAAIF,GAAYD,I,0OCnCtBM,EAAc,SAAoBC,GAApB,OACzBC,IAAO,CACLC,KAAMD,IACNE,KAAMF,IACNG,MAAOH,IAAQ,CAACA,IAAQA,KAAWA,MACnCI,QAASJ,IACTK,QAASL,IACTM,QAASN,IAAO,CACdI,QAASJ,MAEXO,aAAcP,IACdQ,eAAgBR,IAChBS,gBAAiBT,IACjBU,gBAAiBV,IACjBW,WAAYX,IACZY,cAAeZ,IACfa,cAAeb,IACfc,kBAAmBd,IACnBe,aAAcf,IACdgB,iBAAkBhB,IAClBD,QAASA,KAKAkB,EAAY,SAAuC5B,GAAvC,OAIvBW,IAAO,CACLkB,GAAIlB,IACJmB,OAAQnB,IACRoB,KAAMpB,IACNqB,IAAKhC,EAAMgC,IACXC,MAAOjC,EAAMiC,MACbC,WAAYvB,IACZwB,UAAWxB,IACXyB,QAASzB,OAGA0B,EAAkB,SAAuCC,GAAvC,OAI7B3B,IAAO,CACLkB,GAAIlB,IACJ4B,MAAO5B,IACP6B,UAAW7B,IACX8B,OAAQ9B,IACR+B,SAAU/B,IAAe,CACvBA,IAAU,CAAEgC,MAAOhC,MACnBA,IAAO,CAAEI,QAASJ,QAEpBiC,KAAMjC,IACNkC,OAAQlC,IACR2B,QAAS3B,IAAO,CAAEoB,KAAMpB,IAAUqB,IAAKM,EAAQN,IAAKC,MAAOK,EAAQL,WAW1Da,GALsBnC,IACjCiB,EAAU,CAAEI,IAAKrB,IAAUsB,MAAOtB,OAIRA,IAC1BiB,EAAU,CAAEI,IAAKrB,IAAUsB,MAAOtB,QAIvBoC,EAAsBpC,IACjCiB,EAAU,CACRI,IAAKrB,IACLsB,MAAOtB,IAAO,CACZqC,SAAUrC,IACVsC,WAAYtC,IAAO,CACjB,GAAIA,WAQZ,SAASuC,EACPC,EACAC,EACAC,GAEkB,IADlBC,EACiB,uDADFD,EAAYC,KAE3B,OAAO,IAAI3C,IACT2C,EACAD,EAAYE,IACZ,SAACC,EAAOC,GAAR,OACEC,KAAQ,SAACC,GACP,OAAON,EAAYO,SAASR,EAAUO,GAAUF,KADlDC,CAEGP,EAAWS,SAASJ,EAAOC,MAChCJ,EAAYQ,QAiBhB,IAAMC,GAAenD,IAAO,CACxBoD,YAAapD,IACbqD,WAAYrD,IAAO,CACjBsD,uBAAwBtD,IACxBuD,wBAAyBvD,QAGzBwD,GAAexD,IAAO,CACxByD,OAAQzD,IACRqD,WAAYrD,IAAO,CACjBsD,uBAAwBtD,IACxBuD,wBAAyBvD,QAGzB0D,GAAS1D,IAAO,CACpB2D,UAAW3D,IAAO,CAChB4D,OAAQ5D,IACR6D,MAAO7D,IACPqD,WAAYrD,IAAO,CACjB8D,YAAa9D,IACbqC,SAAUrC,QAGdyD,OAAQzD,MAEJ+D,GAAO/D,IAAe,CAC1B0D,GACA1D,IAAU,CAAEgE,SAAUhE,QAGXiE,GAA0B1B,EACrCvC,IAAQ,CAAEmD,GAAcK,GAAcE,MACtC,SAAAV,GAAO,kCACFA,GADE,IAELW,UAAWD,GAAOd,GAAGI,GAAWA,EAAQW,UAAY,CAClDC,OAAQ,IACRC,MAAO,IACPR,WAAY,CACVS,YAAad,EAAQK,WAAWC,uBAChCjB,SAAUW,EAAQK,WAAWE,0BAGjCE,OAASC,GAAOd,GAAGI,IAAYQ,GAAaZ,GAAGI,GAAYA,EAAQS,OAAST,EAAQI,gBAEtFW,IAGIG,GAA4BjD,EAAU,CAC1CI,IAAK4C,GACL3C,MAAOtB,MAGHmE,GAA4BlD,EAAU,CAC1CI,IAAKrB,IACLsB,MAAO2C,KAIIG,GAAuBpE,IAAQuC,EAC1CvC,IAAQ,CAAEkE,GAA2BC,MACrC,SAAAE,GAAG,OAAKH,GAA0BtB,GAAGyB,GAAOC,IACxCD,EACA,CAAEhD,IAAKgD,EAAInD,GAAGqD,WAAYjD,MAAO+C,EAAIhD,KACrC,CAAEC,MAAO,CAAE0C,UAAU,EAAML,UAAW,CAAEE,MAAOQ,EAAI/C,UACjDgD,IAAMD,EAAK,CAAE/C,MAAO,CAAE0C,UAAU,OAEtCG,KAeWK,GAAwBjC,EACnCvC,IAAQ,CAACA,IAAUA,IAAO,CAAEyE,MAAOzE,SACnC,SAAAyE,GAAK,OAAKzE,IAAS4C,GAAG6B,GAAS,CAAEA,SAAUA,IAC3CzE,IAAO,CAAEyE,MAAOzE,OAML0E,GAAoB1E,IAAU,CACzC2E,IAAK3E,IACLoB,KAAMpB,IACN4E,SAAU5E,IACV6E,SAAU7E,IACV8E,SAAU9E,IACV+E,SAAU/E,IACVgF,WAAYhF,IAAU,CACpBsB,MAAOtB,IACPiF,KAAMjF,MAERkF,SAAUlF,IAAU,CAClBsB,MAAOtB,IACPiF,KAAMjF,QAKGmF,GAAuBnF,IAAe,CACjDA,IAAO,CAAE2C,KAAM3C,IAAUsB,MAAOtB,MAChCA,IAAU,CAAEC,KAAMD,QAIPoF,GAAcpF,IAAU,CACnC,GAAIA,IACJ2C,KAAM3C,IACNqF,OAAQrF,IACRsF,OAAQtF,IACRuF,SAAUvF,IACVwF,SAAUxF,IACVyF,YAAazF,IACb0F,WAAY1F,IACZ2F,aAAc3F,IACd4F,YAAa5F,IACb6F,YAAa7F,IACb8F,SAAU9F,IAAQA,KAClB+F,aAAc/F,IAAQA,KACtBgG,WAAYhG,IAAQA,KACpBiG,KAAMjG,IACNkG,WAAYlG,IACZC,KAAMD,IACNmG,KAAMnG,IAAQA,KACdoG,OAAQpG,IAAQA,KAChBqG,SAAUrG,IACVsG,WAAYtG,IACZuG,OAAQvG,IACRwG,eAAgBxG,IAChByG,gBAAiBzG,IACjB0G,mBAAoB1G,IACpB2G,QAAS3G,IAAQ0E,IACjBkC,WAAY5G,IAAQmF,MAIT0B,GAAU7G,IAAO,CAC5BkB,GAAIlB,IACJyD,OAAQzD,IACR6D,MAAO7D,IACP8G,MAAO9G,IACPC,KAAMD,IACN+G,UAAW/G,IAAO,CAChBI,QAASJ,IACTgH,QAAShH,MAEXiH,OAAQjH,MAqBGkH,IAjBMlH,IAAe,CAChCA,IAAO,CACLkB,GAAIlB,IACJmH,MAAOnH,IACPoH,MAAOpH,IACP6F,YAAa7F,IACbyF,YAAazF,IACbqH,SAAUjC,KAEZpF,IAAU,CACR+D,KAAM8C,GACNzG,QAASJ,QAMwBA,IAAO,CAC1C2C,KAAM3C,OAIqBA,IAAe,CAC1CF,EAAYE,KACZA,IAAO,CACLqH,SAAUH,OCvSd,SAASI,GAAczE,GACrB,MAAI,sBAAsB0E,KAAK1E,GACtB2E,SAAOC,KAAK5E,EAAO,OAAO0B,WAE5B1B,E,SAKM6E,G,mFAAf,WACEC,EACAvH,GAFF,iBAAAwH,EAAA,4DAIe,WAJf,SAKqBD,EAAKE,sBAAsBzH,EADjC,YAJf,UAKQ0H,EALR,OAMQ9E,EAAU+E,EAAeC,OAAOF,IAClCG,iBAAOjF,GAPb,sBAQUkF,MAAM,gDARhB,gCAUSlF,EAAQmF,OAVjB,4C,+BAaeC,G,mFAAf,WACET,EACAvH,GAFF,iBAAAwH,EAAA,4DAIe,gBAJf,SAKqBD,EAAKE,sBAAsBzH,EADjC,iBAJf,UAKQ0H,EALR,OAMQ9E,EAAU+E,EAAeC,OAAOF,IAClCG,iBAAOjF,GAPb,sBAQUkF,MAAM,yCARhB,gCAUSlF,EAAQmF,OAVjB,4C,+BAaeE,G,mFAAf,WACEV,EACAvH,GAFF,iBAAAwH,EAAA,4DAIe,wBAJf,SAKqBD,EAAKE,sBAAsBzH,EADjC,yBAJf,UAKQ0H,EALR,OAMQ9E,EAAU+E,EAAsBC,OAAOF,IACzCG,iBAAOjF,GAPb,sBAQUkF,MAAM,gDARhB,gCAUSlF,EAAQmF,OAVjB,4C,+BAaeG,G,mFAAf,WACEX,EACAvH,GAFF,qBAAAwH,EAAA,kEAI4BG,GAJ5B,SAKUJ,EAAKY,mBAAmBnI,GALlC,sBAIQoI,EAJR,KAIoDR,OAJpD,iBAOMC,iBAAOO,GAPb,sBAQUN,MAAM,mDARhB,cAUQO,EAAqBD,EAAkBL,MAAM1D,MAVrD,UAWgCkD,EAAKe,cAAcD,GAXnD,WAWQE,EAXR,OAYQ3F,EAAU+E,GAAuBC,OAAOW,IAC1CV,iBAAOjF,GAbb,uBAcUkF,MAAM,kDAdhB,iCAgBSlF,EAAQmF,OAhBjB,6C,+BAmBeS,G,qFAAf,WACEjB,EACAkB,EACAlH,GAHF,mBAAAiG,EAAA,sEAK8BD,EAAKiB,iBAAiBC,GALpD,UAKQC,EALR,OAMQC,EAAU/I,IAAQ+H,EAAkBpG,IACpCqB,EAAU+F,EAAQf,OAAOc,IAC3Bb,iBAAOjF,GARb,sBASUkF,MAAM,gDAThB,gCAWSlF,EAAQmF,OAXjB,4C,+BAcea,G,qFAAf,WACErB,EACAkB,EACA9I,GAHF,mBAAA6H,EAAA,sEAK0BD,EAAKqB,aAAaH,GAL5C,UAKQI,EALR,OAMQC,EAAiBlJ,IAAQA,KAAWgI,OAAOiB,IAC7ChB,iBAAOiB,GAPb,sBAQUhB,MAAM,4CARhB,cAUQiB,EAAeD,EAAef,MAAMiB,IAAIrB,EAAchI,GAASiI,QAVvE,kBAWSqB,kBAAQF,EAAaC,IAAIE,cAXlC,4C,+BAceC,G,uFAAf,WACE5B,EACAvH,EACAyI,EACA9I,GAJF,iBAAA6H,EAAA,sEAMyBD,EAAK4B,YAAYnJ,EAASyI,GANnD,UAMQ9G,EANR,OAOQiB,EAAU+E,EAAchI,GAASiI,OAAOjG,IAC1CkG,iBAAOjF,GARb,sBASUkF,MAAM,4CAThB,gCAWSlF,EAAQmF,OAXjB,4C,sBAgBO,SAAeqB,GAAtB,qC,8CAAO,WACLC,EACArJ,GAFK,yBAAAwH,EAAA,sEAIgBQ,GAAgBqB,EAAO9B,KAAMvH,GAJ7C,cAICsJ,EAJD,gBAKgBrB,GAAuBoB,EAAO9B,KAAMvH,GALpD,cAKCuJ,EALD,OAMCC,EAAaH,EAAOI,OAAOZ,UAAUa,YAAYC,WAAWC,IAN7D,SAOoB1B,GAAyBmB,EAAO9B,KAAMiC,GAP1D,cAOCK,EAPD,OAQCC,EAAcD,EAAWE,QAAO,SAAApG,GAAI,OAAIA,EAAK5C,UAG7CiJ,EAAe,YAAIT,GAAQU,MAAK,SAACzC,EAAE0C,GAAH,QAAUC,OAAOC,SAAS5C,EAAEtG,MAAMe,SAAU,IAAMkI,OAAOC,SAASF,EAAEhJ,MAAMe,SAAU,QAXrH,kBAaEoI,QAAQC,IACbN,EAAahB,IAAb,uCACE,WAAOuB,GAAP,+BAAA/C,EAAA,+DACuD+C,EAAMrJ,MAAzC0F,EADpB,EACU3E,SAA+BuI,EADzC,EAC6BtI,WAGrBuI,EAAcC,IAAEC,UAAUH,EAAWtD,IAJ7C,SAK6BmC,EAAOuB,gBAChCH,EAAY,IACZzK,GAPJ,cAKQ6K,EALR,OASQ5D,EATR,2BASwBwD,GAAgBI,EAAa5D,UAE7C6D,EAAWhB,EAAYiB,MAC3B,SAAAC,GAAC,OACCA,EAAE9J,MAAMqC,UAAUN,WAAWS,cAAgB1D,GAC7CgL,EAAE9J,MAAMqC,UAAUN,WAAWhB,WAAa2E,KAGxCjD,EAAOmH,GAAY,CACvBhK,GAAIgK,EAAShK,GACbuC,OAAQyH,EAAS5J,MAAMmC,OACvBI,MAAO0G,OAAOC,SAASU,EAAS5J,MAAMqC,UAAUE,MAAO,IAAM,IAC7DiD,MAAOyD,OAAOC,SAASU,EAAS5J,MAAMqC,UAAUE,MAAO,IACvDkD,UAAW,CACT3G,QAAS8K,EAAS5J,MAAMqC,UAAUN,WAAWS,YAC7CkD,QAASuD,OAAOC,SAASU,EAAS5J,MAAMqC,UAAUN,WAAWhB,WAE/D4E,OAAQiE,EAAS5J,MAAM0C,SAAW,EAAIuG,OAAOC,SAASU,EAAS7J,KAC/DpB,KAAMiL,EAAS5J,MAAM0C,SAAW,mBAAqB,cA3BzD,kBA8BS,CACL9C,GAAIsJ,SAASxD,EAAS,IACtBI,MAAK,UAAEsC,EAAOyB,MAAK,SAAApI,GAAC,OAAIA,EAAE1B,MAAQ2F,YAA7B,aAAE,EAAqC1F,MAC5C6F,MAAOE,EAAS1E,KAChBkD,YAAawB,EAASxB,YACtBJ,YAAa4B,EAAS5B,YACtB4B,SAAUA,EACVtD,SArCJ,2CADF,yDAdG,6C,sBA2DA,SAAesH,GAAtB,qC,8CAAO,WACL5B,EACArJ,GAFK,2BAAAwH,EAAA,sEAIkB2B,GAAYE,EAAO9B,KAAMvH,EAAS,GAAIJ,KAJxD,cAIC+B,EAJD,gBAKoB2F,GAAuB+B,EAAO9B,KAAMvH,GALxD,UAKCkL,EALD,OAMCC,EAND,UAMWD,EAAWH,MAAK,SAAAC,GAAC,MAAc,KAAVA,EAAE/J,cANlC,aAMW,EAAoCC,MAN/C,sBAQG4G,MAAM,uCAAD,OAAwC9H,EAAxC,aARR,wBAWsBqJ,EAAOuB,gBAChC1D,GAAciE,GACdnL,GAbG,oBAWGiH,EAXH,EAWGA,SAIFrE,EAAU+E,GAAwBC,OAAOX,IAE3CY,iBAAOjF,GAjBN,uBAkBGkF,MAAM,8BAlBT,4DAoBOnG,GApBP,IAoBiBsF,SAAUrE,EAAQmF,SApBnC,6C,sBAuBA,SAAeqD,GAAtB,mC,8CAAO,WACL/B,GADK,SAAA7B,EAAA,sEAGQ6D,GAAqBhC,EAAQA,EAAOiC,aAH5C,oF,sBAMA,SAAeD,GAAtB,qC,8CAAO,WACLhC,EACAiC,GAFK,2BAAA9D,EAAA,sEAImBoB,GACtBS,EAAO9B,KACP,CACErH,QAASoL,EACTC,eAAgB,QAElB3L,KAVG,UAICiJ,EAJD,OAaC2C,EAAYd,IAAEe,KAClB5C,EACGkB,QAAO,SAAA2B,GAAC,YAAe,UAAXA,EAAE5L,OAAF,UAAsB4L,EAAE3L,aAAxB,aAAsB,EAAS4L,SAAS,WACpD3C,KAAI,SAAA0C,GAAC,OAAIA,EAAE1L,YAGV4L,EAA6B,GAEV,IAArBJ,EAAUK,OArBT,yCAsBID,GAtBJ,uBA0BGpD,GACJa,EAAO9B,KACP,CACE1F,KAAM,WACNC,OAAQ,UACR,cAAe0J,EAAUM,KAAK,KAC9BC,MAAO,SAET,CACE9K,IAAKrB,IACLsB,MAAOtB,MApCR,OAyBCoM,EAzBD,OAuCHjC,QAAO,SAAAiB,GAAC,MAAsB,KAAlBA,EAAEzJ,QAAQN,OAvCnB,cAyCa+K,GAzCb,cAAAxE,EAAA,4CAAAA,EAAA,yDAyCMvD,EAzCN,QA0CGtC,EAAWkH,EAAUkC,MAAK,SAAAW,GAAC,OAAIA,EAAE1L,UAAYiE,EAAItC,SAAS3B,WA1C7D,4EA+CKmL,EAAUlH,EAAI1C,QAAQL,MA/C3B,SAgD0BmI,EAAOuB,gBAChC1D,GAAciE,GACdxJ,EAAS3B,SAlDV,gBAgDOiH,EAhDP,EAgDOA,SAIFrE,EAAU+E,GAAwBC,OAAOX,GAC1CY,iBAAOjF,IACVgJ,EAAQK,KAAR,2BAAkBtK,GAAlB,IAA4BsF,SAAUrE,EAAQmF,SAtD/C,kDAyDDmE,QAAQC,IAAR,MAzDC,qYA6DEP,GA7DF,kE,sBAwEA,SAAeQ,GAAtB,qC,8CAAO,WACL/C,EACArJ,GAFK,yBAAAwH,EAAA,sEAIoBU,GAAyBmB,EAAO9B,KAAMvH,GAJ1D,UAIC6J,EAJD,OAKCC,EAAcD,EAAWE,QAAO,SAAAiB,GAAC,OAAIA,EAAEjK,UACvCyK,EAAYd,IAAEe,KAClB3B,EAAYd,KAAI,SAAAqD,GAAC,OAAIA,EAAEnL,MAAMqC,UAAUN,WAAWS,gBAKrB,IAFP4I,MAAMjF,KAAK,IAAIkF,IAAIf,IAEvBK,OAZf,yCAaI,IAbJ,wBAgByBrD,GAC5Ba,EAAO9B,KACP,CACE1F,KAAM,wBACNC,OAAQ,UACR,cAAe0J,EAAUM,KAAK,KAC9BC,MAAO,SAET,CACE9K,IAAKrB,IACLsB,MAAOtB,IAAO,CACZqC,SAAUrC,IACVsC,WAAYtC,IAASA,IAAUA,SA5BhC,eAgBC4M,EAhBD,OAkCCC,EAAc,YAAI3C,GAAa4C,UAC/BC,EAAyBF,EAC5BzD,KAAI,SAAA4D,GAAC,MAAK,CACTC,UAAWD,EACXE,UAAWN,EAAgBzB,MACzB,SAAAgC,GAAI,OACFH,EAAE1L,MAAMqC,UAAUN,WAAWS,cAAgBqJ,EAAKpL,SAAS3B,SAC3D4M,EAAE1L,MAAMqC,UAAUN,WAAWhB,WAC3B8K,EAAKxL,QAAQL,MAAMe,SAAW,UAGrC+G,KAAI,SAAA4D,GAAC,gBAAK,CACTI,QAAQ,EACRzC,MAAO,KACPsC,UAAWD,EAAEC,UACbI,cAAa,UAAEL,EAAEE,iBAAJ,iBAAE,EAAavL,eAAf,iBAAE,EAAsBL,aAAxB,aAAE,EAA6BgB,WAAW,QAjDtD,kBAoDEyK,GApDF,6C,sBAuDA,ICjVKO,GDiVCC,GAAkB,uCAAG,WAChC9D,EACA+D,GAFgC,uCAAA5F,EAAA,yDAIxB+C,EAA4C6C,EAA5C7C,MAAOyC,EAAqCI,EAArCJ,OAAQH,EAA6BO,EAA7BP,UAAWI,EAAkBG,EAAlBH,cAC5BI,EAL0B,eAKZD,IAEhB7C,IAASyC,EAPmB,yCAQvBK,GARuB,UAUhCA,EAAOL,QAAS,EAVgB,WAgB1BH,EAAU3L,MAAMqC,UAAUN,WAFfqK,EAde,EAc5B5J,YACU6J,EAfkB,EAe5BtL,SAGI2E,EAAUwD,SAASmD,EAAY,IAC/B7G,EAAQyD,OAAOC,SAASyC,EAAU3L,MAAMqC,UAAUE,MAAO,IACzDE,EAAO,CACX7C,GAAI+L,EAAU/L,GACduC,OAAQwJ,EAAU3L,MAAMmC,OACxBI,MAAOiD,EAAQ,IACfA,MAAOA,EACPC,UAAW,CACT3G,QAAS6M,EAAU3L,MAAMqC,UAAUN,WAAWS,YAC9CkD,QAASuD,OAAOC,SAASyC,EAAU3L,MAAMqC,UAAUN,WAAWhB,WAEhE4E,OAAQgG,EAAU3L,MAAM0C,SAAW,EAAIuG,OAAOC,SAASyC,EAAU5L,KACjEpB,KAAMgN,EAAU3L,MAAM0C,SAAW,mBAAqB,cAGnDqJ,EAjCyB,wBAkC5BI,EAAOG,MAAQ,kCACftB,QAAQsB,MAAM,kCAAmC,CAAEX,cAnCvB,kBAoCrBQ,GApCqB,yBAuCFhE,EAAOuB,gBACjC1D,GAAc+F,GACdK,GAzC4B,wBAuCtBrG,EAvCsB,EAuCtBA,SAKRoG,EAAO9C,MAAQ,CACbvK,QAASsN,EACTxM,GAAI8F,EACJG,MAAOE,EAAS1E,MAAQ,GACxByE,MAAOrD,EAAKN,OACZoC,YAAawB,EAASxB,aAAe,GACrCJ,YAAa4B,EAAS5B,aAAe,GACrC4B,SAAUA,EACVtD,KAAMA,GApDsB,kBAuDvB0J,GAvDuB,yCAyD9BA,EAAOG,MAAQ,sBACftB,QAAQsB,MAAM,sBAAuB,CAAEX,YAAWY,IAAG,OA1DvB,kBA2DvBJ,GA3DuB,0DAAH,yD,SCjVnBH,O,+BAAAA,I,2CAAAA,I,yDAAAA,I,+CAAAA,I,qCAAAA,I,6CAAAA,I,qCAAAA,I,iDAAAA,I,mCAAAA,I,yDAAAA,I,kDAAAA,I,wEAAAA,I,4DAAAA,I,wDAAAA,I,wCAAAA,I,oDAAAA,I,mEAAAA,Q,KCgBL,IAAMQ,GAA2BC,YAItC,4BAJsD,uCAIzB,WAAO3N,EAAS4N,GAAhB,qBAAApG,EAAA,6DACrBqG,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,gBADW,EAEVD,IAAXxE,EAFqB,EAErBA,OAFqB,kBAId4B,GAAoB5B,EAAQrJ,GAJd,iGAMpB8N,EAAgB,CACrBhO,KAAMoN,GAAUa,0BAChBC,QAAQ,sCAAD,OAAwChO,MARtB,yDAJyB,yDAiB3CiO,GAAuBN,YAIlC,wBAJkD,uCAIzB,WAAO3N,EAAP,kCAAAwH,EAAA,6DAAkBqG,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,gBAA5B,EACOD,IAAxBxE,EADiB,EACjBA,OAAQ6E,EADS,EACTA,YADS,kBAGF9E,GAAgBC,EAAQrJ,GAHtB,cAGjBuJ,EAHiB,yBAIhB,CAAEvJ,UAASuJ,WAJK,yDAMhBuE,EAAgB,CACrBhO,KAAMoN,GAAUiB,sBAChBH,QAAQ,0CAAD,2BACLE,EAAYA,YAAYlO,UADnB,iBACL,EAAkCiH,gBAD7B,aACL,EAA4C1E,YADvC,QAC+CvC,MATjC,yDAJyB,yDAmBvCoO,GAA+BT,YAK1C,mCAL0D,uCAM1D,WAAOjD,EAAP,wBAAAlD,EAAA,yDAAYqG,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,gBAAtB,EACqBD,IACG,qBADdxE,EADV,EACUA,QACGgF,OAFb,yCAGWP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QACE,sEANR,gCAUiB5C,GAA2B/B,GAV5C,iFAYI6C,QAAQC,IAAR,MAZJ,kBAaW2B,EAAgB,CACrBhO,KAAMoN,GAAUqB,iCAChBP,QAAS,iDAff,0DAN0D,yDA2B/CQ,GAAyBb,YAKpC,6BALoD,uCAMpD,WAAO3N,EAAP,wBAAAwH,EAAA,yDAAkBqG,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,gBAA5B,EACqBD,IACG,qBADdxE,EADV,EACUA,QACGgF,OAFb,yCAGWP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QACE,sEANR,gCAUiB3C,GAAqBhC,EAAQrJ,GAV9C,iFAYIkM,QAAQC,IAAR,MAZJ,kBAaW2B,EAAgB,CACrBhO,KAAMoN,GAAUuB,2BAChBT,QAAS,wCAff,0DANoD,yDA2BzCU,GAA0Bf,YAKrC,2BALqD,uCAMrD,WAAO3N,EAAP,4BAAAwH,EAAA,6DAAkBqG,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,gBAA5B,EACqBD,IAAXxE,EADV,EACUA,OADV,kBAGyB+C,GAAmB/C,EAAQrJ,GAHpD,OAGUuJ,EAHV,cAAA/B,EAAA,KAMoB+B,EAAOoF,MAAM,EAAG,IANpC,qDAMeC,EANf,qBAOwBzB,GAAmB9D,EAAQE,EAAOqF,IAP1D,QAOMrF,EAAOqF,GAPb,uDAUW,CAAErF,WAVb,2DAYWuE,EAAgB,CACrBhO,KAAMoN,GAAU2B,yBAChBb,QAAQ,6CAAD,OAA+ChO,MAd5D,0DANqD,yDA0B1C8O,GAA+BnB,YAK1C,qCAL0D,uCAM1D,WAAOjD,EAAP,oCAAAlD,EAAA,6DAAYqG,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,gBAAtB,EACkCD,IAAxBxE,EADV,EACUA,OAAQK,EADlB,EACkBA,YADlB,SAGUH,EAHV,UAGmBG,EAAYA,YAAYH,cAH3C,QAGqD,GAG3CwF,EAASxF,EAAOyF,WAAU,SAAApC,GAAC,OAAKA,EAAEI,UAClCiC,EAAOF,EAAS,EAP1B,SAU8B1E,QAAQC,IAChCf,EAAOP,IAAP,uCAAW,WAAO4D,EAAGgC,GAAV,SAAApH,EAAA,2DACToH,GAAKG,GAAUH,EAAIK,GADV,gCACuB9B,GAAmB9D,EAAQuD,GADlD,8CACuDA,EADvD,iFAAX,0DAXN,cAUUsC,EAVV,yBAgBW,CAAE3F,OAAQ2F,IAhBrB,2DAkBWpB,EAAgB,CACrBhO,KAAMoN,GAAU2B,yBAChBb,QAAQ,qCApBd,0DAN0D,yD,UCrG/CmB,GAAiC,CAC5CC,mBAAoB,KACpBC,iBAAkB5F,GAAOZ,UAAUyG,UACnCpB,YAAa,IAOTqB,GAA0C,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACpDD,EAAMtB,YAAYuB,EAAQzP,WAC5BwP,EAAMtB,YAAYuB,EAAQzP,SAASuJ,OAASkG,EAAQlG,OACpDiG,EAAMtB,YAAYuB,EAAQzP,SAASgN,QAAS,IAI1C0C,GAA+C,SAACF,EAAO1N,GAAY,IAAD,gBACrDA,EAAO2N,SAD8C,IACtE,2BAAiC,CAAC,IAAzBE,EAAwB,QAC/BH,EAAMtB,YAAYyB,EAAK3P,SAAvB,2BACK2P,GADL,IAEEpG,OAAQ,KACRyD,QAAQ,KAL0D,gCAUlE4C,GAA4C,SAACJ,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACrDD,EAAMtB,YAAYuB,EAAQzP,WAC7BwP,EAAMtB,YAAYuB,EAAQzP,SAA1B,2BACKyP,GADL,IAEElG,OAAQ,KACRyD,QAAQ,MASR2B,GAAQkB,YAAY,CACxBtN,KAAM,cACN4M,gBACAW,SAAU,CACRC,kBAAmBL,GACnBM,iBAAkBJ,GAClBK,iBAVuC,SAACT,EAAO1N,GACjD0N,EAAMJ,mBAAqBtN,EAAO2N,SAUhCS,mBAAoBX,IAEtBY,cAAe,YAAkB,IAAfC,EAAc,EAAdA,QAChBA,EAAQnC,GAAqBoC,UAAWd,IACxCa,EAAQ1C,GAAyB2C,UAAWT,IAC5CQ,EAAQhC,GAA6BiC,UAAWX,IAChDU,EAAQ5B,GAAuB6B,UAAWX,OAIvC,GAKHf,GAAM2B,QAFRL,IAHK,GACLF,kBADK,GAELC,iBAFK,GAGLC,kBAIatB,IAPR,GAILuB,mBAGavB,I,+CClFR,SAAe4B,GAAtB,qC,8CAAO,WAA8B3C,EAAalG,GAA3C,SAAAF,EAAA,+EACEgJ,KAAMC,KAAN,UAA4B7C,EAA5B,qBAAoDlG,IADtD,4C,sBAIA,SAAegJ,GAAtB,qC,8CAAO,WAA8B9C,EAAa+C,GAA3C,eAAAnJ,EAAA,6DACCoJ,EAAW,IAAIC,UACZC,OAAO,OAAQH,GAFnB,kBAGEH,KAAMC,KAAN,UAA4B7C,EAA5B,qBAAoDgD,IAHtD,4C,sBAMA,SAAeG,GAAtB,qC,8CAAO,WAA4CnD,EAAa+C,GAAzD,eAAAnJ,EAAA,6DACCoJ,EAAW,IAAIC,UACZC,OAAO,OAAQH,GAFnB,kBAGEH,KAAMC,KAAN,UACF7C,EADE,qCAELgD,IALG,4C,sBAWA,SAASI,GAAUzM,GACxB,MAAO,eAAe4C,KAAK5C,GAGtB,SAAS0M,GAAa1M,GAC3B,IAAM2M,EAAY,aAElB,OADkB,IAAIC,OAAOD,EAAUE,OAAS,MAClCjK,KAAK5C,GACVA,EAAI8M,QAAQH,EAAW,IAEzB,KCnCT,SAASI,GAAY7O,GACnB,OAAO2E,SAAOC,KAAK5E,GAAO0B,SAAS,OA+B9B,SAAeoN,GAAtB,qC,8CAAO,WACLlI,EACApC,GAFK,iBAAAO,EAAA,6DAICgK,EAAc,IAAIC,KAJnB,SAKclB,GAAelH,EAAOI,OAAOiI,QAAf,aAC/BjM,YAAa,iCACbkM,WAAY,CAAC,WAAY,WAAY,YACrCC,cAAe,gBACZ3K,IATA,cAKC4K,EALD,OAWLL,EAAYM,IAAI,GAAIR,GAAYO,EAAKnK,KAAKqK,UAXrC,SAYQ1I,EAAO2I,QAAQC,OACzBC,UAAU,CACTC,KAAMC,wBAAqBD,KAC3BxS,QAAS,CACP0S,OAAQ,CACN/I,OAAQ,IAAImI,KACZa,cAAe,EACfC,UAAW,IAAId,KACfe,eAAgB,IAAIf,MAEtBgB,MAAO,CACLA,MAAOpJ,EAAOiC,YACdoH,cAAe,KACfC,QAAQ,GAEV1L,SAAUuK,KAGboB,OA9BE,oF,sBAiCA,SAAeC,GAAtB,uC,8CAAO,WACLxJ,EACArJ,EACAiH,GAHK,uBAAAO,EAAA,sEAKkB6B,EAAO2I,QAAQC,OAAOa,GAAG9S,GAL3C,cAKC2B,EALD,gBAMiBA,EAAShC,UAN1B,cAMCA,EAND,OAQCsC,EAAWtC,EAAQ0S,OAAOC,cAC1BpQ,EAAa,IAAIuP,KATlB,UAUclB,GAAelH,EAAOI,OAAOiI,QAAf,YAAC,eAC7BzK,GAD4B,IAE/B9B,SAAU,EACVkB,iBAAiB,KAbd,eAUCwL,EAVD,OAeL3P,EAAW4P,IAAI,GAAIR,GAAYO,EAAKnK,KAAKqK,UAfpC,kBAiBEpQ,EAASoR,QACbC,KAAK,CACJ,CACEhM,MAAOqC,EAAOiC,YACdkH,eAAgB,CACdvQ,WACAC,iBAIL0Q,QA3BE,6C,sBAsCA,SAAeK,GAAtB,uC,8CAAO,WACL5J,EACArJ,EACAiH,GAHK,mCAAAO,EAAA,sEAKkB6B,EAAO2I,QAAQC,OAAOa,GAAG9S,GAL3C,cAKC2B,EALD,gBAMiBA,EAAShC,UAN1B,OAMCA,EAND,OAQCsC,EAAWtC,EAAQ0S,OAAOC,cAC1BY,EAAoB,GATrB,cAUuBjM,EAASkM,WAVhC,0FAUOC,EAVP,KAUcC,EAVd,KAWGnR,EAAa,IAAIuP,KAXpB,UAYgBlB,GAAelH,EAAOI,OAAOiI,QAAf,YAAC,eAC7B2B,GAD4B,IAE/BlO,SAAU,EACVkB,iBAAiB,KAfhB,QAYGwL,EAZH,OAiBH3P,EAAW4P,IAAI,GAAIR,GAAYO,EAAKnK,KAAKqK,UACzCmB,EAAMjH,KAAK,CACTjF,MAAOqC,EAAOiC,YACdkH,eAAgB,CACdvQ,SAAUA,EAAWmR,EACrBlR,gBAtBD,yKA2BEP,EAASoR,QAAQC,KAAKE,GAAON,QA3B/B,iE,sBA8BA,SAAeU,GAAtB,yC,8CAAO,WACLjK,EACAkK,EACA3M,EACA4M,GAJK,eAAAhM,EAAA,sEAMkB6B,EAAO2I,QAAQC,OAAOa,GAAGS,GAN3C,cAMC5R,EAND,yBAOEA,EAASoR,QACbU,SAAS,CACR,CACEC,MAAOrK,EAAOiC,YACdqI,IAAK,CAAC,CAAEC,IAAKJ,EAAWvR,SAAU2E,EAASpD,OAAQ,OAGtDoP,QAdE,4C,sBAiBA,SAAeiB,GAAtB,6C,8CAAO,WACLxK,EACAyK,EACAC,EACAnN,EACAoN,EACAC,GANK,mBAAAzM,EAAA,sEAQmB6B,EAAO2I,QAAQC,OAAOa,GAAGgB,GAR5C,cAQCI,EARD,gBASmB7K,EAAO2I,QAAQC,OAAOa,GAAGiB,GAT5C,cASCI,EATD,OAUCC,EAAQ/K,EAAO2I,QAAQC,OAC1BmC,MAAM,IACNC,iBACCF,EAAUpB,QAAQuB,iBAAiB,CACjC,CACEC,aAAc,CACZvN,MAAOqC,EAAOiC,YACdkJ,SAAUV,EACV7R,SAAU2E,OAMDsN,EAAUO,gBAAgBC,gBAA1B,KACJC,eAAe,wBAC5BP,EAAMC,iBACJH,EAAUnB,QAAQ6B,KAAKZ,EAAWD,EAAenN,IAGnDwN,EAAMC,iBACJH,EAAUnB,QAAQ6B,KAAKb,EAAenN,EAASoN,EAAWC,IA/BzD,kBAmCEG,EAAMxB,QAnCR,6C,sBAsCA,SAAeiC,GAAtB,yC,8CAAO,WACLxL,EACAyK,EACAC,EACAnN,GAJK,mBAAAY,EAAA,sEAMmB6B,EAAO2I,QAAQC,OAAOa,GAAGgB,GAN5C,cAMCI,EAND,gBAOmB7K,EAAO2I,QAAQC,OAAOa,GAAGiB,GAP5C,cAOCI,EAPD,OAQCC,EAAQ/K,EAAO2I,QAAQC,OAC1BmC,MAAM,IACNC,iBACCH,EAAUnB,QAAQ+B,OAAOzL,EAAOiC,YAAayI,EAAenN,IAE7DyN,iBACCF,EAAUpB,QAAQuB,iBAAiB,CACjC,CACES,gBAAiB,CACf/N,MAAOqC,EAAOiC,YACdkJ,SAAUV,EACV7R,SAAU2E,OAnBf,kBAwBEwN,EAAMxB,QAxBR,4C,sBA2BA,SAAeoC,GAAtB,2C,8CAAO,WACL3L,EACAyK,EACAC,EACAnN,EACAC,GALK,mBAAAW,EAAA,sEAOmB6B,EAAO2I,QAAQC,OAAOa,GAAGgB,GAP5C,cAOCI,EAPD,gBAQmB7K,EAAO2I,QAAQC,OAAOa,GAAGiB,GAR5C,cAQCI,EARD,OASCC,EAAQ/K,EAAO2I,QAAQC,OAC1BmC,MAAM,IACNC,iBACCH,EAAUnB,QAAQ+B,OAAOjO,IAE1BwN,iBACCF,EAAUpB,QAAQuB,iBAAiB,CACjC,CACES,gBAAiB,CACf/N,MAAOqC,EAAOiC,YACdkJ,SAAUV,EACV7R,SAAU2E,OApBf,kBAyBEwN,EAAMxB,QAzBR,4C,sBAoEA,SAAeqC,GAAtB,6C,8CAAO,WACL5L,EACAyK,EACAC,EACAnN,EACAsO,EACAlB,GANK,eAAAxM,EAAA,sEAQkB6B,EAAO2I,QAAQC,OAAOa,GAAGgB,GAR3C,cAQCnS,EARD,yBASEA,EAASoR,QACboC,IAAID,EAAanB,EAAenN,GAChCgM,KAAK,CAAEpP,OAAQwQ,KAXb,4C,sBAcA,SAAeoB,GAAtB,yC,8CAAO,WACL/L,EACAyK,EACAjN,EACAmN,GAJK,eAAAxM,EAAA,sEAMkB6B,EAAO2I,QAAQC,OAAOa,GAAGgB,GAN3C,cAMCnS,EAND,yBAOEA,EAASoR,QACboC,IAAItO,GACJ+L,KAAK,CAAEpP,OAAQwQ,KATb,4C,8CChTMqB,GAAmBC,KAAIC,OAAO,CACzCC,aAAcF,KAAIG,WAAWC,QAAQ,QAgB1BC,GAbqBN,GAAiBvE,OAAO,CACxD8E,OAAQN,KAAIC,OAAO,CACjBhT,KAAM+S,KAAIO,SAASC,IAAI,GAAGL,WAC1BhQ,YAAa6P,KAAIO,SAASE,MAAM,MAAMA,MAAM,MAE9CC,aAAcV,KAAIW,QAAQC,MACxBZ,KAAIC,OAAO,CACThT,KAAM+S,KAAIO,SAASC,IAAI,GAAGL,WAC1BvU,MAAOoU,KAAIO,SAASC,IAAI,GAAGL,gBAKwB3E,OAAO,CAC9DqF,kBAAmBb,KAAIO,SAASJ,aAGlC,SAASW,GAAQC,EAA0Bd,GACzC,OAAQc,EAAOxT,SAAS0S,EAAQ,CAAEe,cAAc,IAAQ9I,MAkBnD,SAAS+I,GAAsB/G,GACpC,OAAO4G,GAAQT,GAAwBnG,G,0DCnCpBgH,G,WAKnB,WAAYC,EAAuBC,GAA2B,0BAJtDC,kBAIqD,OAHrDC,sBAGqD,OAFrDC,aAAe,IAAIC,KAGzBC,KAAKJ,aAAeF,GAA8B,UAClDM,KAAKH,iBAAmBF,GAAoC,Q,uFAG9D,WACEM,EADF,EAGEC,GAHF,eAAAzP,EAAA,6DAEI0P,EAFJ,EAEIA,SAFJ,kBAKSH,KAAKF,aAAaM,cAAsB,CAC7CC,IAAI,GAAD,OAAKL,KAAKH,iBAAV,cACDG,KAAKJ,aADJ,iBAEMO,EAASG,UAAU,GAFzB,KAGHC,OAAQ,MACRC,QAAS,CAAE,eAAgB,cAC3B/S,SAAU,sBACVgT,MAAM,KAZV,gD,gHChBK,WAA6B/N,EAAgB3I,GAA7C,qBAAA0G,EAAA,sDAED6F,EAAS,GACToK,EAAS,EACPlT,EAJD,UAIUkF,EAAOiO,IAAI9J,IAJrB,sBAIsCnE,EAAOkO,QAJ7C,YAIwD7W,EAJxD,gCAMc0P,KAAMoH,IAAIrT,EAAK,CAC9BkE,OAAQ,CACNgP,YARD,OAMHI,EANG,OAWHxK,EAAOpB,KAAP,MAAAoB,EAAM,YAASwK,EAASnQ,OACxB+P,GAAU,GAZP,UAa6B,KAAzBI,EAASnQ,KAAKmE,OAblB,gDAcEwB,GAdF,6C,oEAiBA,WAA2B5D,EAAgBzJ,GAA3C,iBAAAwH,EAAA,6DACCjD,EADD,UACUkF,EAAOiO,IAAI9J,IADrB,wBACwCnE,EAAOkO,QAD/C,YAC0D3X,GAD1D,SAEkBwQ,KAAMoH,IAAIrT,GAF5B,cAECsT,EAFD,yBAGEA,EAASnQ,MAHX,4C,oEAMA,WAAkC+B,EAAgBzJ,GAAlD,iBAAAwH,EAAA,6DACCjD,EADD,UACUkF,EAAOiO,IAAI9J,IADrB,wBACwCnE,EAAOkO,QAD/C,YAC0D3X,EAD1D,qBAEkBwQ,KAAMoH,IAAIrT,GAF5B,cAECsT,EAFD,yBAGEA,EAASnQ,MAHX,4C,oEAMA,WAAkC+B,EAAgBzJ,GAAlD,iBAAAwH,EAAA,6DACCjD,EADD,UACUkF,EAAOiO,IAAI9J,IADrB,wBACwC5N,EADxC,yBACgEyJ,EAAOkO,QADvE,qBAEkBnH,KAAMoH,IAAIrT,GAF5B,cAECsT,EAFD,yBAGEA,EAASnQ,MAHX,4C,sBAMA,IAAMoQ,GAAb,WAGE,WAAYrO,GAAiB,0BAF7BA,YAE4B,EAC1BsN,KAAKtN,OAASA,EAJlB,kDAOE,SAAc3I,GACZ,O,8CAAOwH,CAAcyO,KAAKtN,OAAQ3I,KARtC,yBAWE,SAAYd,GACV,O,8CAAOmJ,CAAY4N,KAAKtN,OAAQzJ,KAZpC,gCAeE,SAAmBA,GACjB,O,8CAAOmI,CAAmB4O,KAAKtN,OAAQzJ,KAhB3C,gCAmBE,SAAmBA,GACjB,O,8CAAO+X,CAAmBhB,KAAKtN,OAAQzJ,OApB3C,KCpCagY,GAA8B,uCAAG,WAC5CC,GAD4C,iBAAAzQ,EAAA,sEAGpByQ,EAAUC,IAAIC,eAHM,OAGtCC,EAHsC,OAQtCC,EACJlO,OAAOiO,EAAUE,oBAAoB,IAAM,EAC7CL,EAAUM,YAAY,CAAE9O,OAAQ,CAAE4O,uCAVU,2CAAH,sD,SCG3C,SAASG,GAAc/P,GACrB,IAAMgQ,EAAW,aAAK1M,MAAO,SAAYtD,GACzC,OAAO,IAAIiQ,gBAAgBD,GAAatU,W,8CAGnC,WACLsF,EACA3I,EACA2H,GAHK,iBAAAjB,EAAA,6DAKCjD,EALD,UAKUkF,EAAOlC,KAAKqG,IALtB,uBAKwC9M,EALxC,iBAKmD0X,GACtD/P,IANG,SAQkB+H,KAAMoH,IAAIrT,GAR5B,cAQCsT,EARD,yBASEA,EAASnQ,MATX,4C,oEAYA,WAAgC+B,EAAgBhB,GAAhD,iBAAAjB,EAAA,6DACCjD,EADD,UACUkF,EAAOlC,KAAKqG,IADtB,+BACgD4K,GAAc/P,IAD9D,SAEkB+H,KAAMoH,IAAIrT,GAF5B,cAECsT,EAFD,yBAGEA,EAASnQ,MAHX,4C,oEAMA,WAA4B+B,EAAgBhB,GAA5C,iBAAAjB,EAAA,6DACCjD,EADD,UACUkF,EAAOlC,KAAKqG,IADtB,yBAC0C4K,GAAc/P,IADxD,SAEkB+H,KAAMoH,IAAIrT,GAF5B,cAECsT,EAFD,yBAGEA,EAASnQ,MAHX,4C,oEAMA,WACL+B,EACAzJ,EACAyI,GAHK,iBAAAjB,EAAA,6DAKCjD,EALD,UAKUkF,EAAOlC,KAAKqG,IALtB,yBAK0C5N,EAL1C,YAKqDwY,GACxD/P,IANG,SAQkB+H,KAAMoH,IAAIrT,GAR5B,cAQCsT,EARD,yBASEA,EAASnQ,MATX,4C,oEAYA,WACL+B,EACAzJ,EACAuC,EACAkG,GAJK,iBAAAjB,EAAA,6DAMCjD,EAND,UAOHkF,EAAOlC,KAAKqG,IAPT,yBAQY5N,EARZ,oBAQ+BuC,EAR/B,iBAQ4CiW,GAAc/P,IAR1D,SASkB+H,KAAMoH,IAAIrT,GAT5B,cASCsT,EATD,yBAUEA,EAASnQ,MAVX,4C,oEAaA,WACL+B,EACAzJ,EACAyI,GAHK,iBAAAjB,EAAA,6DAKCjD,EALD,UAMHkF,EAAOlC,KAAKqG,IANT,yBAOY5N,EAPZ,oBAO+BwY,GAAc/P,IAP7C,SAQkB+H,KAAMoH,IAAIrT,GAR5B,cAQCsT,EARD,yBASEA,EAASnQ,MATX,4C,sBAYA,IChCKiR,GDgCCC,GAAb,WAGE,WAAYnP,GAAiB,0BAF7BA,YAE4B,EAC1BsN,KAAKtN,OAASA,EAJlB,kDAOE,SAAc3I,EAAY2H,GACxB,O,gDAAOH,CAAcyO,KAAKtN,OAAQ3I,EAAI2H,KAR1C,8BAWE,SAAiBA,GACf,O,8CAAOD,CAAiBuO,KAAKtN,OAAQhB,KAZzC,0BAeE,SAAaA,GACX,O,8CAAOG,CAAamO,KAAKtN,OAAQhB,KAhBrC,yBAmBE,SAAYzI,EAAiByI,GAC3B,O,gDAAOU,CAAY4N,KAAKtN,OAAQzJ,EAASyI,KApB7C,mCAuBE,SAAsBzI,EAAiBuC,EAAckG,GACnD,O,kDAAOhB,CAAsBsP,KAAKtN,OAAQzJ,EAASuC,EAAMkG,KAxB7D,gCA2BE,SAAmBzI,EAAiByI,GAClC,O,gDAAON,CAAmB4O,KAAKtN,OAAQzJ,EAASyI,OA5BpD,KCqCA,SAASoQ,GACPxP,EACA2I,EACAuB,GAEA,IAAMuF,EAAUzP,EAAOI,OAAOsP,YACxBA,EAAcD,EAAQzH,QAAQ,eAAgB,IAC9CqF,EAAkBoC,EAAQE,WAAW,SAAW,QAAU,OAE1DC,EAAc,IAAIzC,GAAsBuC,EAAarC,GAC3DwC,KAAiBpH,IAAI,OAAQmH,GAC7B,IAAME,EAAW,IAAIC,KAAiBF,MAChCxW,EAAU,IAAI2W,KAAQrH,EAAQkG,KAE9BoB,EAAkBtH,EAAQrQ,SAASmR,GAAGS,GAEtCgG,EAA0C,GAEhD,8CAAO,WAAOhV,EAAKvE,GAAZ,eAAAwH,EAAA,0DACDwJ,GAAUzM,GADT,gCAEoB+U,EAFpB,cAEG3X,EAFH,yBAGIwX,EAASK,gBAAgB7X,EAAU4C,EAAK7B,IAH5C,UAKA6W,EAAcvZ,GALd,gCAM4BgS,EAAQrQ,SAASmR,GAAG9S,GANhD,OAMHuZ,EAAcvZ,GANX,uCAQEmZ,EAASK,gBAAgBD,EAAcvZ,GAAUuE,EAAK7B,IARxD,4CAAP,wDA0BF,SAAS+W,GAAYhQ,GACnB,MAAuB,YAAnBA,EAAOkO,QACF+B,KAAYC,QAEE,cAAnBlQ,EAAOkO,QACF+B,KAAYE,UAIE,WAAnBnQ,EAAOkO,QACF+B,KAAYG,OAEE,YAAnBpQ,EAAOkO,QACF+B,KAAYI,OAEE,gBAAnBrQ,EAAOkO,QACF+B,KAAYK,YAEdL,KAAYI,Q,SAnITnB,K,wBAAAA,E,oCAAAA,E,mCAAAA,Q,KAsIZ,IAAI1G,GAA8B,KAElC,SAAS+H,GACP3Q,EACA4Q,GASA,OAPe,OAAXhI,KACFA,GAAS,IAAIiI,KAAa,CACxB3X,KAAM,kBACN4X,iBAAkBV,GAAYpQ,EAAOI,QACrCwQ,mBAGGhI,G,SAGMmI,G,qFAAf,WACE/Q,EACAgR,EACAJ,GAHF,iBAAAzS,EAAA,6DAKQmQ,EAAU8B,GAAYpQ,EAAOI,QAC7BwI,EAAS+H,GAAU3Q,EAAQ4Q,GANnC,SAQ8BhI,EAAOqI,OAAOC,mBAR5C,sCAWQF,EAXR,2CAacpI,EAAOuI,mBAAmB,CAC9B7C,QAAS,CACP9X,KAC4B,YAA1BwJ,EAAOI,OAAOkO,QACTtO,EAAOI,OAAOkO,QACfA,EACN8C,OAAQpR,EAAOI,OAAOyO,OAnBlC,gEAwBQjG,EAAOyI,qBAxBf,+DA4Ba,GA5Bb,kCAgCS,GAhCT,2D,+BAmCeC,G,iFAAf,WACEtR,GADF,iBAAA7B,EAAA,6DAGQyK,EAAS+H,GAAU3Q,GAEzBA,EAAO2I,QAAQ4I,kBAAkB3I,GACjC4I,GAAuCxR,EAAO2I,SANhD,SAQ4BC,EAAO6I,SARnC,cAQQxP,EARR,oDAWOjC,GAXP,IAYIgF,OAAQsK,GAAOoC,gBACf9I,OAAQA,EACR3G,YAAaA,KAdjB,4C,oEAkBO,WACLjC,EACA4Q,GAFK,eAAAzS,EAAA,sEAImB4S,GAAW/Q,GAAQ,EAAO4Q,GAJ7C,mDAM4BU,GAAuBtR,GANnD,cAMG2R,EANH,oDAOSA,GAPT,IAO2BC,0BAA0B,KAPrD,4DASS5R,GATT,IASiB4R,0BAA0B,KAT3C,6C,oEAaA,WACL5R,EACA4Q,GAFK,SAAAzS,EAAA,sEAIC4S,GAAW/Q,GAAQ,EAAM4Q,GAJ1B,uBAKQU,GAAuBtR,GAL/B,oF,oEAQA,WACLA,GADK,eAAA7B,EAAA,sEAGC6B,EAAO4I,OAAOiJ,aAHf,cAIClJ,EAAU,IAAImJ,KAAa9R,EAAOI,OAAOyO,MACvCkD,kBAAkB,IAAIC,MAC9BrJ,EAAQsJ,aAAa,IAAIC,MACzBtJ,GAAS,KAPJ,6CASA5I,GATA,IAUHgF,OAAQsK,GAAO6C,iBACfxJ,QAASA,EACTC,OAAQ,KACR3G,YAAa,QAbV,4C,sBAiBA,IAAMmQ,GAAS,CACpBC,UAlMK,SAAmBjS,GAKxB,IAAMkS,EAAmB,2BACpBlS,GADoB,IAEvBkO,QAA4B,WAAnBlO,EAAOkO,QAAuB,UAAYlO,EAAOkO,UAE5D,MAAO,CACLtJ,OAAQsK,GAAOiD,WACfnS,OAAQkS,EACRE,cAAe,IAAI/D,GAAc6D,GACjCpU,KAAM,IAAIqR,GAAK+C,GACf3J,QAAS,KACTC,OAAQ,KACRgJ,0BAA0B,EAC1B3P,YAAa,OAkLfwQ,gBAxCK,SAAP,sCAyCEC,eAjJK,SAAwB1S,GAC7B,IAAM2I,EAAU,IAAImJ,KAAa9R,EAAOI,OAAOyO,KAC/ClG,EAAQsJ,aAAa,IAAIC,MACzBvJ,EAAQoJ,kBAAkB,IAAIC,MAC9B,IAAMW,EAAgB3S,EAAOI,OAAOZ,UAAUyG,UAC9C,OAAO,2BACFjG,GADL,IAEEgF,OAAQsK,GAAO6C,iBACfxJ,QAASA,EACTpH,gBAAiBiO,GAAuBxP,EAAQ2I,EAASgK,GACzDf,0BAA0B,KAwI5BgB,cA7BK,SAAP,sCA8BEC,iBAtBK,SAAP,qCC7PaD,GAAgBtO,YAK3B,iBAL2C,uCAM3C,WAAOwO,EAAP,wBAAA3U,EAAA,yDAAeqG,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,gBAAzB,EACqBD,IACG,sBADdxE,EADV,EACUA,QACGgF,OAFb,uBAOsE,CAChE+N,wBAAyB,CACvBC,QADuB,SACf3U,GACNwE,QAAQC,IAAIzE,KAGhB4U,2BAA4B,CAC1BD,QAD0B,SAClB3U,GACNwE,QAAQC,IAAIzE,KAGhB6U,yBAA0B,CACxBF,QADwB,SAChB3U,GACNwE,QAAQC,IAAIzE,KAGhB8U,uBAAwB,CACtBH,QADsB,SACd3U,GACNwE,QAAQC,IAAIzE,KAGhB+U,0BAA2B,CACzBJ,QADyB,SACjB3U,GACNwE,QAAQC,IAAIzE,KAGhBgV,wBAAyB,CACvBL,QADuB,SACf3U,GACNwE,QAAQC,IAAIzE,KAGhBiV,qBAAsB,CACpBN,QADoB,SACZ3U,GACNwE,QAAQC,IAAIzE,MAxCtB,kBA6CmB+T,GAAOQ,cAAc5S,GA7CxC,mGA+CayE,EAAgB,CACrBhO,KAAMoN,GAAU0P,8BAChB5O,QAAS,sCAjDjB,iCAqDSF,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,8BAvDb,0DAN2C,yDAkEhC8N,GAAkBnO,YAI7B,mBAJ6C,uCAIzB,WAAOwO,EAAP,wBAAA3U,EAAA,yDAAeqG,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,gBAAzB,EACDD,IACG,sBADdxE,EADY,EACZA,QACGgF,OAFS,gCAGLoN,GAAOK,gBAAgBzS,GAHlB,wEAKbyE,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,8BAPS,2CAJyB,yDAelCkO,GAAmBvO,YAI9B,oBAJ8C,uCAIzB,WAAOwO,EAAP,wBAAA3U,EAAA,yDAAeqG,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,gBAAzB,EACFD,IACG,qBADdxE,EADa,EACbA,QACGgF,OAFU,gCAGNoN,GAAOS,iBAAiB7S,GAHlB,wEAKdyE,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,mCAPU,2CAJyB,yDCxFnC6O,GAAmBC,YAC9B,iCAGWC,GAAmBD,YAC9B,iCAGWE,GAAsBF,YACjC,oCAiCK,SAASG,GAAcC,EAAmBlP,GAC/C,OAAO6O,GA/BF,SACLK,EACAzX,GAEA,MAAO,CACLyX,YACAC,MAAM,EACNC,WAAW,EACX/O,OAAQ,UACRtH,MAAO,UACPtB,cACA3F,KAAM,MAoBgBud,CAAoBH,EAAWlP,IAGlD,SAASsP,GAAgBJ,EAAmBlP,GACjD,OAAO6O,GApBF,SACLK,EACAzX,GAEA,MAAO,CACLyX,YACAC,MAAM,EACNC,WAAW,EACX/O,OAAQ,UACRtH,MAAO,WACPtB,cACA3F,KAAM,MASgByd,CAAsBL,EAAWlP,I,yBChB9CwP,GAA0B7P,YAIrC,2BAJqD,uCAIzB,qCAAAnG,EAAA,6DAASiW,EAAT,EAASA,GAAI9M,EAAb,EAAaA,KAAU7C,EAAvB,EAAuBA,gBAC7C4P,EAAW,IAAIrT,SACnB,SAACsT,EAASC,GACR,IAAMrb,EAAqBoO,EAArBpO,KAAM1C,EAAe8Q,EAAf9Q,KAAMX,EAASyR,EAATzR,KACZ2e,EAAS,IAAIC,WAEdje,IACqB,SAApB0C,EAAKwb,QAAQ,KACfle,EAAO,qBAEe,UAApB0C,EAAKwb,QAAQ,KACfle,EAAO,oBAIXge,EAAOG,OAAS,SAAArb,GAAM,IAAD,EACbsb,EAAM,UAAGtb,EAAEub,cAAL,aAAG,EAAU7Q,OACzB,IAAK4Q,KAAYA,aAAkBE,aACjC,OAAOP,IAET,IAAMQ,EAAO,IAAIC,KAAK,CAAC,IAAIC,WAAWL,IAAU,CAAEpe,SAC5C0e,EAAYC,OAAOC,IAAIC,gBAAgBN,GAC7C,OAAOT,EAAQ,CAAEF,KAAIpQ,OAAQ,CAAEkR,YAAWhc,OAAM1C,OAAMX,WAExD2e,EAAOc,kBAAkBhO,MAxBD,kBA4Bb+M,EA5Ba,iGA8BnB5P,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,yBAhCe,yDAJyB,yDAyC1C6Q,GAA4BlR,YAKvC,6BALuD,uCAMvD,WAAOpL,EAAP,sCAAAiF,EAAA,yDAAeqG,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,gBAAiBgR,EAA1C,EAA0CA,SAAU5B,EAApD,EAAoDA,UAApD,EACqBrP,IACG,qBADdxE,EADV,EACUA,QACGgF,OAFb,yCAGWP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,oDALf,gCASqBuD,GAAoBlI,EAAQ,CAAE9G,SATnD,cASUwc,EATV,OAUUC,EAVV,kCAUsDzc,GAClDuc,EAAS7B,GAAcC,EAAW8B,IAXtC,UAYUD,EAAGE,eAZb,yBAc8BF,EAAGpd,WAdjC,wBAcY3B,EAdZ,EAcYA,QACFkf,EAfV,iCAeuD3c,EAfvD,aAegEvC,EAfhE,KAgBI8e,EAASxB,GAAgBJ,EAAWgC,IAEpCJ,EAAS1Q,MAlBb,kBAmBW,CAAE7L,OAAMvC,YAnBnB,2DAqBW8N,EAAgB,CACrBhO,KAAMoN,GAAUiS,0BAChBnR,QAAS,gCAvBf,0DANuD,yDAqCzD,SAASoR,GAAiBnY,EAAuBT,GAC/C,OAAOA,EAAW6Y,QAChB,SAACC,EAAKrb,GAAS,IAAD,EAENhD,EADOse,OAAOC,KAAKxa,GAAY/F,OACpB8L,MAAK,SAAA0U,GAAC,OAAIA,IAAMxb,EAAI1B,QACrC,GAAItB,GAAyD,UAAlD+D,GAAY/F,MAAMgC,GAAK2G,OAAO3D,EAAI/C,OAAOwe,KAClD,OAAO,2BAAKJ,GAAZ,mBAAkBre,EAAMgD,EAAI/C,QAE9B,IAAMye,EAAY,CAAEpd,KAAM0B,EAAI1B,KAAMrB,MAAO+C,EAAI/C,OAC/C,OAAO,2BAAKoe,GAAZ,IAAiB9Y,WAAW,GAAD,6BAAM8Y,EAAI9Y,kBAAV,QAAwB,IAAxB,CAA4BmZ,QAEzD1Y,GAIJ,SAAS2Y,GACPpQ,EACAvI,EACAoC,GASA,OAAO+V,GAP4B,2BAC9BnY,GAD8B,IAEjC1E,KAAMiN,EAAMoG,OAAOrT,KACnB0C,OAAQoE,EAAOiC,kBAAeuU,EAC9Bpa,YAAa+J,EAAMoG,OAAOnQ,kBAAeoa,EACzCrZ,WAAY,KAE4BgJ,EAAMhJ,YAG3C,IC/HKsZ,GD+HCC,GAAkBpS,YAK7B,mBAL6C,uCAM7C,WAAOjD,EAAP,8EAAAlD,EAAA,yDAAYqG,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,gBAAiBgR,EAAvC,EAAuCA,SAAU5B,EAAjD,EAAiDA,UAAjD,EACuCrP,IAA7BxE,EADV,EACUA,OACmB,QADAmG,EAD7B,EACkBwQ,WACNxK,aAFZ,yCAGW1H,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,4CALf,UAO+B,oBAAlB3E,EAAOgF,OAPpB,0CAQWP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,+CAVf,WAYcuI,GAAsB/G,GAZpC,0CAaW1B,EAAgB,CACrBhO,KAAMoN,GAAU+S,qBAChBjS,QAAS,kDAff,2BAqBsCwB,EAAMgG,aAAhC+I,EArBZ,EAqBYA,UAAWhc,EArBvB,EAqBuBA,KAAM1C,EArB7B,EAqB6BA,KArB7B,UAsB0BqgB,MAAM3B,GAtBhC,eAsBU4B,EAtBV,iBAuBuBA,EAAQ/B,OAvB/B,QAuBUA,EAvBV,OAwBIzN,EAAO,IAAIyP,KAAK,CAAChC,GAAO7b,EAAM,CAAE1C,SAxBpC,4EA0BWiO,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,mDA5Bf,WAgCMqS,EAA4B,GAhClC,WAkCQ,aAAalZ,KAAKwJ,EAAK9Q,MAlC/B,kCAmCkCkR,GAC1B1H,EAAOI,OAAOiI,QACdf,GArCR,QAmCY2P,EAnCZ,OAuCMD,EAAahb,YAAcib,EAAc5Y,KAAKqK,QAC9CsO,EAAa/a,WAAagb,EAAc5Y,KAAKqK,QAC7CsO,EAAa9a,aAAe+a,EAAc5Y,KAAK6Y,UAAUxO,QACzDsO,EAAa9Z,QAAU,CACrB,CACE9B,SAAU6b,EAAc/I,QAAQ,kBAChC/S,SAAU8b,EAAc/I,QAAQ,kBA7C1C,4BAgDe,aAAapQ,KAAKwJ,EAAK9Q,MAhDtC,oBAiDqC,OAA3B2P,EAAMgR,iBAjDhB,0CAkDe1S,EAAgB,CACrBhO,KAAMoN,GAAUuT,iBAChBzS,QAAS,sDApDnB,2BAyD0CwB,EAAMgR,iBAAhCjC,EAzDhB,EAyDgBA,UAAWhc,EAzD3B,EAyD2BA,KAAM1C,EAzDjC,EAyDiCA,KAzDjC,UA0D8BqgB,MAAM3B,GA1DpC,eA0Dc4B,EA1Dd,iBA2D2BA,EAAQ/B,OA3DnC,QA2DcA,EA3Dd,OA4DQsC,EAAc,IAAIN,KAAK,CAAChC,GAAO7b,EAAM,CAAE1C,SA5D/C,4EA8DeiO,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,wDAhEnB,yBAmEiC0C,GAAerH,EAAOI,OAAOiI,QAASf,GAnEvE,eAmEYgQ,EAnEZ,iBAoEkC5P,GAC1B1H,EAAOI,OAAOiI,QACdgP,GAtER,QAoEYJ,EApEZ,OAwEMD,EAAahb,YAAcsb,EAAajZ,KAAKqK,QAC7CsO,EAAa/a,WAAagb,EAAc5Y,KAAKqK,QAC7CsO,EAAa9a,aAAe+a,EAAc5Y,KAAK6Y,UAAUxO,QACzDsO,EAAa9Z,QAAU,CACrB,CACE9B,SAAUkc,EAAapJ,QAAQ,kBAC/B/S,SAAUmc,EAAapJ,QAAQ,kBA9EzC,yCAkFiC7G,GAAerH,EAAOI,OAAOiI,QAASf,GAlFvE,QAkFYgQ,EAlFZ,OAmFMN,EAAahb,YAAcsb,EAAajZ,KAAKqK,QAC7CsO,EAAa9Z,QAAU,CACrB,CACE9B,SAAUkc,EAAajZ,KAAKxI,KAC5BsF,SAAUmM,EAAK9Q,OAvFzB,oFA4FWiO,EAAgB,CACrBhO,KAAMoN,GAAUuT,iBAChBzS,QAAS,wBA9Ff,eAkGQhO,EAAUwP,EAAM2G,kBAChBlP,EAAW2Y,GAAoBpQ,EAAO6Q,EAAchX,GAnG5D,oBAsGqBwJ,GAAUxJ,EAAQrJ,EAASiH,GAtGhD,eAsGU8X,EAtGV,OAuGUC,EAvGV,6BAuGiD/X,EAAS1E,MACtDuc,EAAS7B,GAAcC,EAAW8B,IAxGtC,UAyGUD,EAAGE,aAAa,GAzG1B,eA2GUC,EA3GV,6BA2GmDjY,EAAS1E,KA3G5D,eA2GuEvC,GACnE8e,EAASxB,GAAgBJ,EAAWgC,IACpCJ,EAAS7Q,GAAqBjO,IA7GlC,kBA8GW,CAAE2B,SAAU3B,EAASiH,aA9GhC,4DAgHW6G,EAAgB,CACrBhO,KAAMoN,GAAU0T,gBAChB5S,QAAS,uBAlHf,mFAN6C,yDAmIzC6S,GAAejhB,IAAe,CAClCA,IAAO,CACL2C,KAAM3C,IACN6F,YAAa7F,IACbyF,YAAazF,IACbkhB,WAAYlhB,MAEdA,IAAU,CACR0F,WAAY1F,MAEdA,IAASA,IAAUA,OAGfmhB,GAAYnhB,IAChBA,IAAQihB,KACR,SAACG,GAAD,OAAgEA,EAAEnV,OAAS,IAC3E,iBAGWoV,GAAsBtT,YACjC,uBADiD,uCAEjD,WAAOjD,EAAP,8CAAAlD,EAAA,yDAAYqG,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,gBAAiBgR,EAAvC,EAAuCA,SAAU5B,EAAjD,EAAiDA,UAAjD,EACgDrP,IAAtCxE,EADV,EACUA,OAA4BmG,EADtC,EACkB0R,mBACM,oBAAlB7X,EAAOgF,OAFb,yCAGWP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,0BALf,UAQgC,OAA1BwB,EAAM2R,gBARZ,yCASWrT,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,0BAXf,gCAiBiBkS,MAAM1Q,EAAM2R,gBAAgB5C,WAAW6C,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAjBpE,OAiBIA,EAjBJ,kFAmBWxT,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,wDArBf,WAwBQuT,EAASC,KAAMF,EAAM,CAAEG,SAAS,EAAMC,gBAAgB,IACvDX,GAAUve,GAAG+e,GAzBpB,wBA0BIrV,QAAQC,IAAI,SAAUoV,GA1B1B,kBA2BWzT,EAAgB,CACrBhO,KAAMoN,GAAU0R,aAChB5Q,QAAS,MA7Bf,eAgCQ2T,EAAY,eACZC,EAAgB,IAAIzQ,OAAOwQ,EAAUvQ,OAAS,MAC9CyQ,EAAgBN,EAAOvY,KAAI,SAAA8Y,GAC/B,IAAMtb,EAAa+Y,OAAOC,KAAKsC,GAC5B/X,QAAO,SAAA0V,GAAC,OAAImC,EAAcza,KAAKsY,MAC/BzW,KAAI,SAAAyW,GAAC,MAAK,CACTld,KAAMkd,EAAEsC,MAAMJ,GAAW,GACzBzgB,MAAO4gB,EAAErC,OAUb,OAAOL,GARuB,CAC5B7c,KAAMuf,EAAEvf,KACR0C,OAAQoE,EAAOiC,YACf7F,YAAaqc,EAAErc,YACfJ,YAAayc,EAAEzc,YACfC,WAAYwc,EAAExc,WACdkB,WAAY,IAEoBA,MAjDtC,UAqDUxG,EAAUuhB,EAAO,GAAGT,WArD9B,UAsDqB7N,GAAW5J,EAAQrJ,EAAS6hB,GAtDjD,eAsDU9C,EAtDV,qCAwDID,EAAS7B,GAAcC,EAxD3B,0CAyDU6B,EAAGE,aAAa,GAzD1B,QA2DUC,EA3DV,yCA2D+Dlf,GAC3D8e,EAASxB,GAAgBJ,EAAWgC,IACpCJ,EAAS7Q,GAAqBjO,IA7DlC,4EA+DW8N,EAAgB,CACrBhO,KAAMoN,GAAU0T,gBAChB5S,QAAS,iCAjEf,iCAqES,MArET,kEAFiD,yDA2EtCgU,GAAsBrU,YAIjC,uBAJiD,uCAIzB,WAAOsU,EAAMrU,GAAb,iCAAApG,EAAA,yDAChBqG,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,gBAAiBgR,EAAwBlR,EAAxBkR,SAAU5B,EAActP,EAAdsP,UACrCvb,EAA0BsgB,EAA1BtgB,SAAUiF,EAAgBqb,EAAhBrb,QAASsb,EAAOD,EAAPC,GAFH,EAGLrU,IACG,qBADdxE,EAHgB,EAGhBA,QACGgF,OAJa,yCAKfP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,mDAPW,gCAWLsF,GAAcjK,EAAQ1H,EAAUiF,EAASsb,GAXpC,cAWhBnD,EAXgB,OAYtBD,EAAS7B,GAAcC,EAAD,gCAAqCgF,KAZrC,UAahBnD,EAAGE,aAAa,GAbA,eAetBH,EAASxB,GAAgBJ,EAAD,+BAAoCgF,KAC5DpD,EAAS7Q,GAAqBtM,IAhBR,kBAiBfsgB,GAjBe,2DAmBfnU,EAAgB,CACrBhO,KAAMoN,GAAUiV,oBAChBnU,QAAS,2BArBW,0DAJyB,yDA8BtCoU,GAAkBzU,YAI7B,mBAJ6C,uCAIzB,WAAOsU,EAAMrU,GAAb,uCAAApG,EAAA,yDACZqG,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,gBAAiBgR,EAAwBlR,EAAxBkR,SAAU5B,EAActP,EAAdsP,UACrCvb,EAAiCsgB,EAAjCtgB,SAAUiF,EAAuBqb,EAAvBrb,QAASoN,EAAciO,EAAdjO,UAFP,EAGDnG,IAAXxE,EAHY,EAGZA,OACFyK,EACJzK,EAAOI,OAAOZ,UAAUa,YAAYC,WAAWC,IAC3B,oBAAlBP,EAAOgF,OANS,yCAOXP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,+CATO,gCAaD6F,GACfxK,EACAyK,EACAnS,EACAiF,EACAoN,EACA,GAnBgB,cAaZ+K,EAbY,OAqBZC,EArBY,qCAqBmChL,EAAY,IArB/C,UAsBlB8K,EAAS7B,GAAcC,EAAW8B,IAtBhB,UAuBZD,EAAGE,aAAa,GAvBJ,eAyBZC,EAzBY,oCA0BhBlL,EAAY,IA1BI,UA4BlB8K,EAASxB,GAAgBJ,EAAWgC,IACpCJ,EAAS7Q,GAAqBtM,IA7BZ,kBA8BXsgB,GA9BW,yCAgChB/V,QAAQC,IAAR,MAhCgB,kBAiCX2B,EAAgB,CACrBhO,KAAMoN,GAAUmV,gBAChBrU,QAAS,uBAnCO,0DAJyB,yDA4ClCsU,GAAwB3U,YAInC,yBAJmD,uCAIzB,WAAOsU,EAAMrU,GAAb,qCAAApG,EAAA,yDAClBqG,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,gBAAiBgR,EAAwBlR,EAAxBkR,SAAU5B,EAActP,EAAdsP,UACrCvb,EAAwCsgB,EAAxCtgB,SAAUiF,EAA8Bqb,EAA9Brb,QAASC,EAAqBob,EAArBpb,OAAQ0b,EAAaN,EAAbM,SAFT,EAGP1U,IAAXxE,EAHkB,EAGlBA,OACFyK,EACJzK,EAAOI,OAAOZ,UAAUa,YAAYC,WAAWC,IAC3B,oBAAlBP,EAAOgF,OANe,yCAOjBP,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,+CATa,mBAcP,qBAAbuU,EAdoB,kCAeX1N,GACTxL,EACAyK,EACAnS,EACAiF,GAnBoB,QAetBmY,EAfsB,gDAsBX/J,GACT3L,EACAyK,EACAnS,EACAiF,EACAC,GA3BoB,QAsBtBkY,EAtBsB,sBA+BxBD,EAAS7B,GAAcC,EAAD,yBA/BE,UAgClB6B,EAAGE,aAAa,GAhCE,eAkCxBH,EAASxB,GAAgBJ,EAAD,wBACxB4B,EAAS7Q,GAAqBtM,IAnCN,kBAoCjB,CAAEA,SAAUA,EAAUiF,QAASA,EAASC,OAAQA,EAAQ0b,SAAUA,IApCjD,2DAsCjBzU,EAAgB,CACrBhO,KAAMoN,GAAUsV,sBAChBxU,QAAS,8BAxCa,0DAJyB,yDAiDxCyU,GAAiB9U,YAI5B,kBAJ4C,uCAIzB,WAAOsU,EAAMrU,GAAb,+CAAApG,EAAA,yDACXqG,EAAmDD,EAAnDC,SAAUC,EAAyCF,EAAzCE,gBAAiBgR,EAAwBlR,EAAxBkR,SAAU5B,EAActP,EAAdsP,UACrCvb,EAAgEsgB,EAAhEtgB,SAAUiF,EAAsDqb,EAAtDrb,QAASsO,EAA6C+M,EAA7C/M,YAAalB,EAAgCiO,EAAhCjO,UAAWnN,EAAqBob,EAArBpb,OAAQ0b,EAAaN,EAAbM,SAFxC,EAGF1U,IAAXxE,EAHa,EAGbA,OACAyK,EACJzK,EAAOI,OAAOZ,UAAUa,YAAYC,WAAWC,IAC3B,oBAAlBP,EAAOgF,OANQ,iCAOCyQ,EAAS7C,MAPV,WAOXyG,EAPW,QAQRjT,SAAa,WAAYiT,EAAIjT,QARrB,0CASR3B,EAAgB,CACrBhO,KAAMoN,GAAUoB,mBAChBN,QAAS,+CAXI,QAcjB3E,EAASqZ,EAAIjT,QAdI,qBAkBA,qBAAb8S,EAlBa,kCAmBJtN,GACT5L,EACAyK,EACAnS,EACAiF,EACAsO,EACAlB,GAzBa,QAmBf+K,EAnBe,gDA4BJ3J,GACT/L,EACAyK,EACAjN,EACAmN,GAhCa,QA4Bf+K,EA5Be,sBAmCXC,EAnCW,4BAmC2B9J,EAnC3B,gBAmC8ClB,GAC/D8K,EAAS7B,GAAcC,EAAW8B,IApCjB,UAqCXD,EAAGE,aAAa,GArCL,eAuCXC,EAvCW,4BAuC6BhK,EAvC7B,gBAuCgDlB,GACjE8K,EAASxB,GAAgBJ,EAAWgC,IACpCJ,EAAS7Q,GAAqBtM,IAzCb,kBA0CV,CAAEA,SAAUA,EAAUiF,QAASA,EAASC,OAAQA,EAAQ0b,SAAUA,IA1CxD,4DA4CVzU,EAAgB,CACrBhO,KAAMoN,GAAUyV,eAChB3U,QAAS,2BA9CM,2DAJyB,yDClejC4U,GAAgB,CAAC,cAAe,gBAAiB,Y,SAOlD9C,K,cAAAA,E,wBAAAA,E,qBAAAA,Q,KA6BL,IAAM3Q,GAA+B,CAC1C0T,KAAM,cACNrN,aAAc,KACdgL,iBAAkB,KAClBsC,iBAAkB,KAClBlN,OAAQ,CACNrT,KAAM,KACNkD,YAAa,MAEfe,WAAY,GACZ2P,kBAAmB,KACnB4M,aAAcjD,GAAakD,OAWvBrU,GAAQkB,YAAY,CACxBtN,KAAM,YACN4M,gBACAW,SAAU,CACRmT,cADQ,SACMzT,GACZ,IAAM0T,EAAUN,GAAMO,QAAQ3T,EAAMqT,MAChCK,EAAU,EAAIN,GAAM/W,SACtB2D,EAAMqT,KAAOD,GAAMM,EAAU,KAGjCE,cAPQ,SAOM5T,GACZ,IAAM0T,EAAUN,GAAMO,QAAQ3T,EAAMqT,MAChCK,EAAU,IACZ1T,EAAMqT,KAAOD,GAAMM,EAAU,KAGjCG,YAbQ,SAaI7T,EAAO1N,GACjB0N,EAAMoG,OAAO9T,EAAO2N,QAAQlN,MAAQT,EAAO2N,QAAQvO,OAErDoiB,mBAhBQ,SAgBW9T,EAAO1N,GACxB0N,EAAMgG,aAAe1T,EAAO2N,SAE9B8T,kBAnBQ,SAmBU/T,GAChBA,EAAMgG,aAAe,MAEvBgO,uBAtBQ,SAsBehU,EAAO1N,GAC5B0N,EAAMgR,iBAAmB1e,EAAO2N,SAElCgU,qBAzBQ,SAyBajU,GACnBA,EAAMgR,iBAAmB,MAE3BkD,eA5BQ,SA4BOlU,GACbA,EAAMhJ,WAAWyF,KAAK,CAAE1J,KAAM,GAAIrB,MAAO,MAE3CyiB,sBA/BQ,SA+BcnU,EAAO1N,GACvB0N,EAAMhJ,WAAW1E,EAAO2N,QAAQxO,OAClCuO,EAAMhJ,WAAW1E,EAAO2N,QAAQxO,KAAKsB,KAAOT,EAAO2N,QAAQlN,OAG/DqhB,uBApCQ,SAoCepU,EAAO1N,GACxB0N,EAAMhJ,WAAW1E,EAAO2N,QAAQxO,OAClCuO,EAAMhJ,WAAW1E,EAAO2N,QAAQxO,KAAKC,MAAQY,EAAO2N,QAAQvO,QAGhE2iB,kBAzCQ,SAyCUrU,EAAO1N,GACvB0N,EAAMhJ,WAAWsd,OAAOhiB,EAAO2N,QAAQxO,IAAK,IAE9CgP,iBA5CQ,SA4CST,EAAO1N,GACtB0N,EAAM2G,kBAAoBrU,EAAO2N,SAEnCsU,gBA/CQ,SA+CQvU,EAAO1N,GACrB0N,EAAMuT,aAAejhB,EAAO2N,SAE9BuU,UAlDQ,WAmDN,OAAO7U,KAGXgB,cAAe,aACbC,EAD8B,EAAdA,SACRoN,GAAwBnN,WAAW,SAACb,EAAO1N,GACvB,cAAtBA,EAAO2N,QAAQgO,KACjBjO,EAAMgG,aAAe1T,EAAO2N,QAAQpC,cAMrC,GAcHsB,GAAM2B,QAbR2S,GADK,GACLA,cACAG,GAFK,GAELA,cACAC,GAHK,GAGLA,YAGAG,IANK,GAILF,mBAJK,GAKLC,kBALK,GAMLC,wBACAE,GAPK,GAOLA,eACAC,GARK,GAQLA,sBACAC,GATK,GASLA,uBACAC,GAVK,GAULA,kBACA5T,GAXK,GAWLA,iBAEA+T,IAbK,GAYLD,gBAZK,GAaLC,WAGarV,MClITA,GAAQkB,YAAY,CACxBtN,KAAM,qBACN4M,aANmD,CACnDgS,gBAAiB,MAMjBrR,SAAU,CACRmU,sBADQ,SACczU,EAAO1N,GAC3B0N,EAAM2R,gBAAkBrf,EAAO2N,SAEjCyU,qBAJQ,SAIa1U,GACnBA,EAAM2R,gBAAkB,OAG5BhR,cAAe,aACbC,EAD8B,EAAdA,SACRoN,GAAwBnN,WAAW,SAACb,EAAO1N,GACvB,uBAAtBA,EAAO2N,QAAQgO,KACjBjO,EAAM2R,gBAAkBrf,EAAO2N,QAAQpC,cAMxC,GAAwDsB,GAAM2B,QAA/B4T,IAA/B,GAAQD,sBAAR,GAA+BC,sBAEvBvV,MC/BTQ,GAAesM,GAAOM,eAAeN,GAAOC,UAAUjS,KAe7CkF,GAXDkB,YAAY,CACxBtN,KAAM,SACN4M,gBACAW,SAAU,GACVK,cAAe,YAAkB,IAAfC,EAAc,EAAdA,QAChBA,EAAQ6L,GAAc5L,WAAW,SAAC3F,EAAD,YAAM+E,WACvCW,EAAQ8L,GAAiB7L,WAAW,SAAC3F,EAAD,YAAM+E,WAC1CW,EAAQ0L,GAAgBzL,WAAW,SAAC3F,EAAD,YAAM+E,cCsBvC0U,GAAwB,CAAE9V,OAAQ,QAASb,MAAO,MAElD2B,GAA4B,CAChCoC,oBAAqB4S,GACrBtR,UAAWsR,GACXC,cAAeD,GACf7Q,cAAe6Q,GACfE,UAAWF,GACXnP,gBAAiBmP,GACjB/O,SAAU+O,GACV/a,gBAAiB+a,GACjBlZ,oBAAqBkZ,GACrBG,wBAAyBH,IAM3B,SAASI,GAAajN,EAA2BxV,GAC/C,MAAO,CAAEwV,SAAQxV,UAGnB,IAAM6M,GAAQkB,YAAY,CACxBtN,KAAM,SACN4M,gBACAW,SAAU,CACR0U,UADQ,SACEhV,EADF,GACwC,IAA7BC,EAA4B,EAA5BA,QACjBD,EAAMC,EAAQ6H,QAAQjJ,OAASoB,EAAQpB,QAEzCoW,WAJQ,SAIGjV,EAJH,GAKNA,EAD+C,EAA7BC,QACJ6H,QAAQ9J,MAAQ,OAGlC2C,cAAe,YAAkB,IAAfC,EAAc,EAAdA,QAChB,CACEmU,GAAU,sBAAuB1F,IACjC0F,GAAU,YAAaxE,IACvBwE,GAAU,gBAAiBtD,IAC3BsD,GAAU,gBAAiBvC,IAC3BuC,GAAU,YAAanC,IACvBmC,GAAU,kBAAmBjC,IAC7BiC,GAAU,WAAY9B,IACtB8B,GAAU,kBAAmBtW,IAC7BsW,GAAU,sBAAuB7W,IACjC6W,GAAU,0BAA2BnW,KACrCsW,SAAQ,YAAyB,IAAtBpN,EAAqB,EAArBA,OAAQxV,EAAa,EAAbA,OACnBsO,EAAQtO,EAAO6iB,SAAS,SAAAnV,GACtBA,EAAM8H,GAAQjJ,OAAS,gBAEzB+B,EAAQtO,EAAOuO,WAAW,SAAAb,GACxBA,EAAM8H,GAAQjJ,OAAS,cAEzB+B,EAAQtO,EAAO8iB,UAAU,SAACpV,EAAO1N,GAC/B,IAAM+iB,EAAc/iB,EAAO2N,QACvB3N,EAAO2N,QACP,CACE3P,KAAMoN,GAAU0R,aAChB5Q,QAAS,iBAEfwB,EAAM8H,GAAQ9J,MAAQ,CACpBqX,cACAC,WAAYhjB,EAAO0L,gBAOtB,GAAkCmB,GAAM2B,QAAhCkU,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,WAEX9V,MCrBAA,GAvDDkB,YAAY,CACxBtN,KAAM,gBACN4M,aAJsC,GAKtCW,SAAU,GACVK,cAAe,YAAkB,IAAfC,EAAc,EAAdA,QAChBA,EAAQyM,IAAkB,SAACrN,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAClCD,EAAMvD,KAAKwD,MAGbW,EAAQ2M,IAAkB,SAACvN,EAAD,GAAoC,IAAjB0N,EAAgB,EAAzBzN,QAClC,OAAOD,EAAMxG,KAAI,SAAAgY,GACf,OAAOA,EAAE9D,YAAcA,EAAhB,2BAAiC8D,GAAjC,IAAoC7D,MAAM,IAAS6D,QAI9D5Q,EAAQ4M,IAAqB,SAACxN,EAAD,GAAoC,IAAjB0N,EAAgB,EAAzBzN,QACrC,OAAOD,EAAMxG,KAAI,SAAAgY,GACf,OAAOA,EAAE9D,YAAcA,EAAhB,2BAAiC8D,GAAjC,IAAoC5D,WAAW,IAAS4D,QAOnE,CACEnC,GACAkB,GACAiC,GACAI,GACAE,GACAG,GACAxU,GACAP,GACAU,GACA6N,GACAC,IACAwI,SAAQ,SAAA5iB,GACRsO,EAAQtO,EAAO8iB,UAAU,SAACpV,EAAD,GAA+B,IAArB6D,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,QAClCA,GAGLD,EAAMvD,KAAK,CACTiR,UAAW7J,EAAK6J,UAChBC,MAAM,EACNC,WAAW,EACX/O,OAAQ,QACRtH,MAAO,QACPtB,YAAagK,EAAQzB,QACrBlO,KAAM2P,EAAQ3P,gBCrDXqP,GAAiC,CAC5CzF,YAAa,CACX1J,QAJ6ByJ,GAAOZ,UAAUa,YAAYC,WAAWC,IAKrEL,OAAQ,KACRyD,QAAQ,IAQN+X,GAA4C,SAACvV,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC1DD,EAAM9F,YAAYH,OAASkG,EAAQlG,OACnCiG,EAAM9F,YAAYsD,QAAS,GAGvB2B,GAAQkB,YAAY,CACxBtN,KAAM,cACN4M,gBACAW,SAAU,CACRkV,oBAAqBD,IAEvB5U,cAAe,YAAkB,IAAfC,EAAc,EAAdA,QAChBA,EAAQ1B,GAAwB2B,UAAW0U,IAC3C3U,EAAQtB,GAA6BuB,UAAW0U,OAMrCpW,IAFwBA,GAAM2B,QAA9B0U,oBAEArW,ICjDFsW,GAAUC,YAAgB,CACrChX,YAAaiX,GAAiBF,QAC9Bvb,YAAa0b,GAAiBH,QAC9BjF,UAAWqF,GAAeJ,QAC1B/D,mBAAoBoE,GAAwBL,QAC5C5b,OAAQkc,GAAYN,QACpB5W,OAAQmX,GAAYP,QACpBQ,cAAeC,GAAmBT,UAGvBU,GAAQC,YAAe,CAClCX,WACAY,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,eAAgB,CACdC,aAAc,CAAC,WAEjBC,kBAAmB,CACjBD,aAAc,CAAC,UACfE,eAAgB,CACd,2BACA,6BACA,qCAQGC,GAAc,kBAAMC,eAE1B,SAASC,GACdC,EACAC,GAEA,OAAOC,YAAgCF,EAAUC,G,2CCdnD,SAASE,GAAQxnB,GACf,IAAQoP,EAAuCpP,EAAvCoP,OAAQqY,EAA+BznB,EAA/BynB,QAASC,EAAsB1nB,EAAtB0nB,QAASC,EAAa3nB,EAAb2nB,SAClC,OAAIvY,EAAOb,MAEP,kBAAC,IAAD,CAAMqZ,QAAQ,SAASC,MAAM,SAASC,GAAI,EAAGC,GAAI,IAC/C,kBAAC,IAAD,CAAKC,MAAM,aAAaC,GAAI,GAC1B,kBAAC,KAAD,CAAahoB,KAAK,UAEpB,kBAAC,IAAD,CAASA,KAAK,KAAKioB,UAAU,SAASF,MAAM,WAAWC,GAAI,GACxDjoB,EAAMmoB,cAAgB,oBAEzB,kBAAC,IAAD,CAAMP,QAAQ,MAAMQ,QAAQ,UAC1B,kBAACroB,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAAS,kBAAMX,MAArD,SAGA,kBAAC3nB,EAAD,CACEG,QAAQ,iBACRmoB,QAAS,kBAAMV,KACfW,QAAQ,OACRC,WAAW,SACXC,GAAI,GAEJ,kBAAC,IAAD,CAAKR,MAAM,gBACT,kBAAC,IAAD,CAAG/nB,KAAM,GAAIwoB,YAAY,OAE3B,kBAAC,IAAD,CAAMC,SAAU,GAAIF,GAAI,EAAGG,WAAW,OAAtC,YAQY,eAAlBvZ,EAAOA,OAEP,kBAAC,IAAD,CAAMwY,QAAQ,SAASC,MAAM,SAASC,GAAI,EAAGC,GAAI,IAC/C,kBAAC,KAAD,CAAS9nB,KAAK,KAAKgoB,GAAI,EAAGD,MAAM,aAChC,kBAAC,IAAD,CAAS/nB,KAAK,KAAKioB,UAAU,SAASF,MAAM,YACzChoB,EAAM4oB,KACH5oB,EAAM+f,gBAAkB,uBACxB/f,EAAM6oB,qBAAuB,sBAKnB,aAAlBzZ,EAAOA,OAEP,kBAAC,IAAD,CAAMwY,QAAQ,SAASC,MAAM,SAASC,GAAI,EAAGC,GAAI,IAC/C,kBAAC,IAAD,CAAKC,MAAM,aAAaC,GAAI,GAC1B,kBAAC,KAAD,CAAahoB,KAAK,UAEpB,kBAAC,IAAD,CAASA,KAAK,KAAKioB,UAAU,SAASF,MAAM,WAAWC,GAAI,GACxDjoB,EAAM8oB,iBAAmB,sBAE5B,kBAAC/oB,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAAS,kBAAMZ,MAArD,UAMC,KAwBM,SAASsB,GAAU/oB,GAChC,MAAqEA,EAA7D4oB,YAAR,WAAqE5oB,EAA/CgpB,sBAAtB,SAA8CC,EAAuBjpB,EAAvBipB,WAAY5Q,EAAWrY,EAAXqY,OAC1D,EAAoCrY,EAAMkpB,WAAlCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQ3B,EAAxB,EAAwBA,QACxB,EAAkC4B,mBAAwB,MAA1D,mBAAOpL,EAAP,KAAkBqL,EAAlB,KACMla,EAASgY,IAAY,SAAAha,GAAC,OAAIA,EAAEgC,OAAOpP,EAAMqY,WACzCwH,EAAWqH,KACXqC,EAAenC,IAAY,SAAAha,GAAC,OAChCA,EAAEoZ,cAAc1a,MACd,SAAAiW,GAAC,OAAIA,EAAE9D,YAAcA,GAA0B,YAAb8D,EAAE3S,SAAyB2S,EAAE5D,gBAK7DqL,EAAQ,uCAAG,4BAAAjhB,EAAA,6DACT6F,EAASpO,EAAMypB,gBACrBH,EAAalb,EAAO6P,WACpB4B,EAAS0F,GAAU,CAAElN,SAAQjJ,OAAQ,gBAHtB,SAIchB,EAJd,OAKO,cALP,OAIsBgG,KAAKsV,gBAExC7J,EAAS0F,GAAU,CAAElN,SAAQjJ,OAAQwZ,EAAO,WAAa,WAC/C,OAAVK,QAAU,IAAVA,KAAYU,KAAK,OAPJ,2CAAH,qDAWRC,EAA4B,OAAjBxa,EAAOb,MAExBsb,qBAAU,YACH5L,GAAakL,GAAUH,IAAmBY,GAC7CJ,MAED,CAACL,EAAQH,EAAgBY,EAAUJ,EAAUvL,IAEhD,IAAM6L,EAAgB,WAA0B,IAAzBC,IAAwB,yDAC7CtC,IACA6B,EAAa,MACbzJ,EAAS2F,GAAW,CAAEnN,OAAQrY,EAAMqY,UACpC0R,GAAgB/pB,EAAMgqB,YAAchqB,EAAMgqB,cAGtCC,EAAyB,YACP,eAAlB7a,EAAOA,QAA2Bwa,IACpCE,KAYJ,OARAD,qBAAU,WACR,OAAKjB,GAAQO,IAAWS,GAAYL,EAC3BO,KACGX,GAAUS,EACbR,SADF,KAMP,oCACE,kBAAC,KAAD,CACED,OAAQA,EACR1B,QAAS,kBAAMwC,KACfC,gBAAiBlqB,EAAMmqB,WACvBC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,kBAAML,KACbM,eAAgB,kBAAMN,MAEtB,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAcO,GAAI,IACG,UAAlBpb,EAAOA,OACNpP,EAAMyqB,KACJzqB,EAAMyqB,KAAKjB,GACT,KAEJ,kBAAChC,GAAD,CACEoB,KAAMA,EACNO,OAAQA,EACR/Z,OAAQA,EACRqY,QAAS,kBAAMwC,KACftC,SAAU,kBAAMmC,GAAc,IAC9BpC,QAAS,WACP7H,EAAS2F,GAAW,CAAEnN,OAAQrY,EAAMqY,UACpCmR,KAEFzJ,eAAgB/f,EAAM+f,eACtB8I,oBAAqB7oB,EAAM6oB,oBAC3BC,gBAAiB9oB,EAAM8oB,qBCrLrC,SAAS4B,GAAsB1qB,GAC7B,MAAwCqpB,mBAAS,IAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KACM/K,EAAWqH,KACXiD,EAAaU,IAAMC,OAAO,MAChC,OACE,kBAAC/B,GAAD,CACEG,WAAYlpB,EAAMkpB,WAClBN,KAAM5oB,EAAM4oB,KACZvQ,OAAO,sBACPoR,cAAe,kBAAM5J,EAASD,GAA0B+K,KACxD1B,WAAY,kBAAM2B,EAAgB,KAClCT,WAAYA,EACZpK,eAAe,yBACf+I,gBAAgB,qBAChB2B,KAAM,SAAAjB,GAAQ,OACZ,oCACE,kBAAC,KAAD,uBACA,kBAAC,KAAD,MACA,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWuB,WAAW,QAAtB,mBACA,kBAAC,IAAD,CACEC,WAAW,EACXC,IAAKd,EACLe,YAAY,6BACZjpB,MAAO0oB,EACPQ,SAAU,SAAAznB,GAAC,OAAIknB,EAAgBlnB,EAAEub,OAAOhd,YAI9C,kBAAC,KAAD,KACE,kBAAClC,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAAS,kBAAMmB,MAArD,0BAYL,SAAS4B,GAAuBprB,GACrC,IAAMkpB,EAAamC,cACnB,OACE,oCACE,kBAACtrB,EAAD,CAAcG,QAAQ,wBAAwBmoB,QAASa,EAAWE,QAChE,kBAAC,IAAD,CAAKpB,MAAM,gBACT,kBAAC,IAAD,CAAM/nB,KAAM,GAAIwoB,YAAY,OAE9B,kBAAC,IAAD,CAAMD,GAAI,GAAV,mBAEF,kBAACkC,GAAD,CAAuBxB,WAAYA,EAAYN,KAAM5oB,EAAM4oB,Q,cCxDlD,SAAS0C,KAAoB,IAAD,IACnCrc,EAAcmY,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,YAAYA,eAC7CsB,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,aAC3BlB,EAAWqH,KAMjB,OAJA2C,qBAAU,WACRhK,EAAS1Q,QACR,CAACF,EAAa4Q,IAGf,kBAAC,IAAD,CAAM0L,GAAI,EAAG3D,QAAQ,UACnB,kBAAC,IAAD,CAAM2D,GAAI,EAAG1D,MAAM,SAASO,QAAQ,iBAClC,kBAAC,IAAD,CAASnoB,KAAK,MAAd,uBACA,kBAACmrB,GAAD,CAAwBxC,MAAM,KAEhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4C,GAAIC,IACJC,OAAO,YACPC,YAAY,aACZjD,SAAS,KACTC,WAAW,SACXZ,GAAI,EACJ6D,OAAO,OACPC,gBAAgB,QAChB7D,MAAOzX,EAAM2G,kBAAoB,cAAgB,cAEjD,kBAAC,IAAD,CAAM2Q,MAAM,UACV,kBAAC,IAAD,CAAKiE,GAAI,GACP,kBAAC,KAAD,OAEAvb,EAAM2G,oBAAN,UACAjI,EAAYsB,EAAM2G,0BADlB,iBACA,EAAsClP,gBADtC,aACA,EAAgD1E,OAChD,2BAGN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1C,KAAK,QACLmrB,aAAcxb,EAAM2G,mBAAqB,IAExCoJ,OAAOC,KAAKtR,GAAalF,KAAI,SAAAhJ,GAAO,OACnC,kBAAC,IAAD,CACEiB,IAAKjB,EACLkB,MAAOlB,EACPirB,SAAUjrB,IAAYwP,EAAM2G,kBAC5BmR,QAAS,kBAAMxI,EAAS7O,GAAiBjQ,MAExCkO,EAAYlO,GAASiH,SAAS1E,aCtChC,SAAS2oB,KACtB,IAAM1b,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,aAC3BlB,EAAWqH,KACjB,EAA8B3W,EAAMoG,OAA5BrT,EAAR,EAAQA,KAAMkD,EAAd,EAAcA,YACd,OACE,oCACE,kBAAC8kB,GAAD,MACA,kBAAC,IAAD,CAASrrB,KAAK,KAAKisB,cAAe,GAAlC,sDAGA,kBAAC,IAAD,CAAaA,cAAe,GAC1B,kBAAC,IAAD,CAAWnB,WAAW,QAAtB,cACA,kBAAC,IAAD,CACEC,WAAW,EACXE,YAAY,wBACZjpB,MAAOqB,GAAQ,GACf6nB,SAAU,SAAAznB,GAAC,OACTmc,EAASuE,GAAY,CAAE9gB,KAAM,OAAQrB,MAAOyB,EAAEub,OAAOhd,aAI3D,kBAAC,IAAD,CAAaiqB,cAAe,GAC1B,kBAAC,IAAD,CAAWnB,WAAW,OAAOzC,QAAQ,QAArC,cAEE,kBAAC,IAAD,CAAM6D,WAAY,EAAGnE,MAAM,mBAA3B,eAIF,kBAAC,IAAD,CACEoE,UAAU,QACVrB,WAAW,OACXG,YAjCR,8HAkCQjpB,MAAOuE,GAAe,GACtB2kB,SAAU,SAAAznB,GAAC,OACTmc,EACEuE,GAAY,CAAE9gB,KAAM,cAAerB,MAAOyB,EAAEub,OAAOhd,aAK3D,kBAAC,IAAD,CAAS0pB,YAAY,kBAAkBU,QAAQ,IAAIC,QAAS,KAC5D,kBAAC,IAAD,CAASrsB,KAAK,KAAKisB,cAAe,GAAlC,gCAGC3b,EAAMhJ,WAAWwC,KAAI,WAAkB/H,GAAS,IAAxBsB,EAAuB,EAAvBA,KAAMrB,EAAiB,EAAjBA,MAC7B,OACE,kBAAC,IAAD,CAAMD,IAAKA,EAAK6lB,MAAM,SAASO,QAAQ,WACrC,kBAAC,IAAD,CAAa8D,cAAe,EAAGK,aAAc,EAAGC,KAAK,KACnD,kBAAC,IAAD,CAAWzB,WAAW,QAAtB,QACA,kBAAC,IAAD,CACEG,YAAY,eACZjpB,MAAOqB,GAAQ,GACf6nB,SAAU,SAAAznB,GAAC,OACTmc,EAAS6E,GAAsB,CAAE1iB,MAAKsB,KAAMI,EAAEub,OAAOhd,aAI3D,kBAAC,IAAD,CAAaiqB,cAAe,EAAGO,YAAa,EAAGD,KAAK,KAClD,kBAAC,IAAD,CAAWzB,WAAW,QAAtB,SACA,kBAAC,IAAD,CACEG,YAAY,aACZjpB,MAAOA,GAAS,GAChBkpB,SAAU,SAAAznB,GAAC,OACTmc,EACE8E,GAAuB,CAAE3iB,MAAKC,MAAOyB,EAAEub,OAAOhd,aAKtD,kBAAC,IAAD,CACE+lB,MAAM,WACNQ,GAAI,EACJgC,GAAI,EACJkC,OAAO,UACPrE,QAAS,kBAAMxI,EAAS+E,GAAkB,CAAE5iB,UAC5C2qB,OAAQ,CACN3E,MAAO,cAGT,kBAAC,IAAD,CAAG/nB,KAAM,UAKjB,kBAACF,EAAD,CACEG,QAAQ,wBACRmoB,QAAS,kBAAMxI,EAAS4E,OACxBmI,GAAI,EACJC,GAAI,EACJC,GAAI,EACJvB,GAAI,GAEJ,kBAAC,IAAD,CAAKvD,MAAM,gBACT,kBAAC,IAAD,CAAM/nB,KAAM,GAAIwoB,YAAY,OAE9B,kBAAC,IAAD,CAAMD,GAAI,GAAV,e,wBCnGD,SAASuE,GAAT,GAAwD,IAAjCrb,EAAgC,EAAhCA,KACtBmO,EAAWqH,KACjB,GAAI,aAAahf,KAAKwJ,EAAK9Q,MACzB,OACE,kBAAC,KAAD,CACEosB,IAAKtb,EAAK4N,UACV2N,MAAM,OACNrB,OAAO,OACPsB,UAAU,eAIhB,GAAI,aAAahlB,KAAKwJ,EAAK9Q,MAAO,CAChC,IAAMusB,EAAYC,sBAClB,OACE,oCACE,2BACEC,UAAQ,EACRC,OAAK,EACLC,aAAc,SAAA7pB,GACZ,IAAM8pB,EAASL,EAAUM,QACzB,IAAKD,EACH,OAAOvgB,QAAQsB,MAAM,uCAEvB,IAAMmf,EAAQhqB,EAAEiqB,cAChBH,EAAOP,MAAQS,EAAME,WACrBJ,EAAO5B,OAAS8B,EAAMG,YACtB,IAAIC,EAAgBN,EAAOO,WAAW,MACtC,IAAKD,EACH,OAAO7gB,QAAQsB,MAAM,qCAEvBuf,EAAcE,UAAUN,EAAO,EAAG,GAElCF,EAAOS,QAAO,SAAA9O,GACZ,IAAKA,EACH,OAAOlS,QAAQsB,MAAM,oCAEvBsR,EACE0E,GAAuB,CACrBjF,UAAWE,IAAIC,gBAAgBN,GAC/B7b,KAAM,MACNrD,KAAMkf,EAAKlf,KACXW,KAAMue,EAAKve,UAVJ,eAgBf,4BAAQosB,IAAKtb,EAAK4N,UAAW1e,KAAM8Q,EAAK9Q,QAE1C,4BAAQqqB,IAAKkC,EAAWe,MAAO,CAAE5F,QAAS,WAIhD,MAAkB,oBAAd5W,EAAK9Q,MAA4C,sBAAd8Q,EAAK9Q,KAExC,oCACE,kCACEutB,mBAAA,EACAC,eAAA,EACAC,yBAAA,EACArB,IAAKtb,EAAK4N,UACVgP,MAAM,oBAKP,KAGM,SAASC,KAAc,IAAD,EAC7Bhe,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,aAC3BlB,EAAWqH,KAEXsH,EAASC,uBACb,SAACC,GACC7O,EAAStB,GAAwB,CAAEC,GAAI,YAAa9M,KAAMgd,EAAM,QAElE,CAAC7O,IAGH,EAAwC8O,aAAY,CAClDH,SACAI,SAAU,EACVC,QAAS,SACTC,OAAQ,CACN,UACA,UACA,oBACA,kBACA,QACA,UAVIC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cActB,OACE,kBAAC,IAAD,CACEnH,MAAM,SACND,QAAQ,SACRqF,MAAM,OACNT,KAAK,IACLM,GAAI,CACFmC,KAAM,EACNC,GAAI,KAGN,kBAAC,IAAD,CAASjvB,KAAK,KAAKisB,cAAe,EAAGhE,UAAU,UAA/C,oBAGA,kBAAC,IAAD,CACEQ,SAAS,KACTV,MAAM,aACN+C,WAAW,OACX7C,UAAU,SACVqD,GAAI,GALN,sEASA,kBAAC,IAAD,eACE4D,YAAY,SACZC,YAAY,MACZzD,YAAY,kBACZ0D,aAAa,MACbpC,MAAM,OACN7E,QAAQ,SACRP,MAAM,UACFkH,KAEJ,kBAAC,IAAD,eAAKvD,GAAG,SAAYwD,OACnB,UAAAze,EAAMgG,oBAAN,eAAoB+I,WACnB,kBAAC,IAAD,CAAKuD,EAAG,GACN,kBAAC,IAAD,CACEuF,QAAQ,SACRP,MAAM,SACNyH,SAAS,QACTC,UAAU,QACVC,SAAS,UAET,kBAACzC,GAAD,CAAarb,KAAMnB,EAAMgG,iBAI7B,kBAAC,IAAD,CACEoV,YAAY,QACZyD,YAAY,MACZxH,QAAQ,SACRC,MAAM,SACNE,GAAI,GACJ0H,GAAG,mBACHjD,KAAK,KAEL,kBAAC,IAAD,CAAM9D,SAAU,GAAIR,UAAU,SAASwH,SAAU,GAAjD,6CAGA,kBAAC,IAAD,CAAMhH,SAAU,GAAIV,MAAM,cAA1B,8BAUL,SAAS2H,KACd,IAAMpf,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE6U,sBAC3BpC,EAAWqH,KACXgC,EAAamC,cACnB,EAAwBuE,cAAfC,EAAT,oBAEMrB,EAASC,uBACb,SAACC,GACC7O,EACEtB,GAAwB,CAAEC,GAAI,qBAAsB9M,KAAMgd,EAAM,QAGpE,CAAC7O,IAGH,EAAwC8O,aAAY,CAClDH,SACAI,SAAU,EACVC,QAAS,WAHHE,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAQtB,OACE,kBAAC,IAAD,CAAMpH,QAAQ,SAASC,MAAM,UAC3B,kBAAC,IAAD,eACE4H,GAAG,mBACH/D,OAAO,YACPC,YAAY,kBACZ0D,aAAa,MACb/G,QAAQ,cACRwH,aAAa,IACbJ,SAAU,GACVK,SAAU,IACNhB,KAEJ,0BAAWC,KACX,kBAAC,IAAD,CAAMrG,WAAW,MAAMD,SAAU,IAC9BnY,EAAM2R,gBAAN,yBACqB3R,EAAM2R,gBAAgB5e,MACxC,kDAGR,kBAAC,IAAD,CAAM8kB,QAAQ,UACZ,kBAACroB,EAAD,CACEG,QAC4B,OAA1BqQ,EAAM2R,gBACF,wBACA,gBAENmG,QAAS,kBAAM9X,EAAM2R,iBAAmBgH,EAAWE,WANrD,kBAWF,kBAACL,GAAD,CACEG,WAAYA,EACZ7Q,OAAO,gBACPoR,cAAe,kBAAM5J,EAASmC,OAC9BiH,WAAY,kBAAMpJ,EAASoF,OAC3B+E,WAAY,kBAAM6F,EAAY,iBAC9B7G,gBAAgB,EAChBH,oBACE,wDAEE,6BACA,kBAAC,IAAD,CACEH,SAAS,OACTC,WAAW,SACXqH,UAAW,EACX9H,UAAU,SACVF,MAAM,YAEN,0BAAMiI,KAAK,MAAMC,aAAW,aAA5B,gBAEQ,IATV,mF,cC/OZ,SAASC,GAAMnwB,GACb,OACE,kBAAC,IAAD,CAAM0oB,SAAS,KAAKqC,WAAW,OAAO/C,MAAM,kBACzChoB,EAAMowB,UAKE,SAASC,KAAgB,IAAD,IAC/B9Z,EAAe6Q,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,UAAUxK,gBAC5CtH,EAAcmY,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,YAAYA,eAC7C0H,EAASyQ,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,UAAUpK,UACtCpP,EAAa6f,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,UAAUxZ,cAC1C2P,EAAoBkQ,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,UAAU7J,qBAEvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASjX,KAAK,KAAKgoB,GAAI,GAAvB,mBAGA,kBAAC,IAAD,CAAMqI,EAAE,OAAOlI,QAAQ,SAASH,GAAI,GAClC,kBAAC8E,GAAD,CAAarb,KAAM6E,KAErB,kBAAC4Z,GAAD,mBACA,kBAAC,IAAD,CAAMzH,SAAS,KAAKT,GAAI,CAAC,EAAG,IAA5B,UACGhZ,EAAYiI,UADf,iBACG,EAAiClP,gBADpC,aACG,EAA2C1E,MAE9C,kBAAC6sB,GAAD,aACA,kBAAC,IAAD,CAAMzH,SAAS,KAAKT,GAAI,CAAC,EAAG,IACzBtR,EAAOrT,MAEV,kBAAC6sB,GAAD,oBACA,kBAAC,IAAD,CAAMzH,SAAS,KAAKT,GAAI,CAAC,EAAG,IACzBtR,EAAOnQ,aAAe,2BAEzB,kBAAC,KAAD,CAAW+pB,aAAW,GACpB,kBAAC,KAAD,CAAe7E,OAAO,QACpB,kBAAC,KAAD,CAAiBlB,GAAI,CAAC,EAAG,GAAI3H,EAAG,GAC9B,kBAAC,IAAD,CAAMmF,MAAM,qBAAZ,YACA,kBAAC,KAAD,OAEF,kBAAC,KAAD,CAAgBuD,GAAI,GAApB,OACGhkB,QADH,IACGA,OADH,EACGA,EAAYwC,KAAI,gBAAGzG,EAAH,EAAGA,KAAMrB,EAAT,EAASA,MAAT,OACf,kBAAC,IAAD,CAAMuoB,GAAI,CAAC,EAAG,IACZ,kBAAC,IAAD,CAAMxC,MAAM,qBAAqB1kB,EAAjC,KACA,kBAAC,IAAD,CAAM0kB,MAAM,iBAAiBW,WAAW,OAAOH,GAAI,CAAC,IACjDvmB,W,cCtCnB,SAASuuB,GAAT,GAAkE,IAArCjgB,EAAoC,EAApCA,MACrB0T,EAAUN,GAAMO,QAAQ3T,EAAMqT,MACpC,OACE,kBAAC,IAAD,CACEiE,MAAM,SACND,QAAQ,SACR4E,KAAK,IACLlE,QAAS,CACP2G,KAAM,OACNC,GAAI,SAGN,kBAAC,IAAD,CAAMjC,MAAM,QAAQwD,eAAe,UAAUlF,GAAI,GAC9C5H,GAAM5Z,KAAI,SAAC6Z,EAAMjU,GAChB,IAAMqY,EAAQ/D,GAAWtU,EAAI,aAAe,kBAC5C,OACE,kBAAC,IAAD,CACE3N,IAAK4hB,EACL6L,GAAIzH,EACJqH,aAAa,MACbzD,OAAO,MACP8E,GAAI,EACJlE,KAAK,UAKb,kBAAC,IAAD,CAAM9D,SAAS,KAAKV,MAAM,cAA1B,QACQ/D,EAAU,EADlB,OACyBN,GAAM/W,SAMrC,SAAS+jB,KAEP,OADavJ,IAAY,SAAAha,GAAC,OAAIA,EAAE2T,UAAU6C,SAExC,IAAK,cACH,OACE,kBAAC,IAAD,CAAK0M,EAAE,OAAOhB,SAAS,UACrB,kBAACf,GAAD,MACA,kBAAC,IAAD,CAAM1G,MAAM,SAASyE,QAAS,IAC5B,kBAAC,IAAD,CACEE,KAAK,IACLoE,aAAa,YACbjF,YAAY,oBAEd,kBAAC,IAAD,CAAM3D,MAAM,aAAaW,WAAW,MAAM+G,SAAU,GAApD,MAGA,kBAAC,IAAD,CACElD,KAAK,IACLoE,aAAa,YACbjF,YAAY,qBAGhB,kBAACgE,GAAD,OAGN,IAAK,gBACH,OACE,kBAAC,IAAD,CAAKW,EAAE,OAAOhB,SAAS,SACrB,kBAACrD,GAAD,OAGN,IAAK,oBACH,OACE,kBAAC,IAAD,CAAKqE,EAAE,OAAOhB,SAAS,SACrB,kBAAChE,GAAD,OAGN,IAAK,UACH,OACE,kBAAC,IAAD,CAAKgF,EAAE,OAAOhB,SAAS,SACrB,kBAACe,GAAD,OAGN,QACE,OAAO,MAIE,SAASQ,KACtB,MAAqCzJ,IAAY,SAAAha,GAAC,OAAIA,KAA9ChD,EAAR,EAAQA,OAAmBmG,EAA3B,EAAgBwQ,UACVlB,EAAWqH,KACjB,EAAwB0I,cAAfC,EAAT,oBACM3G,EAAamC,cACXjC,EAAWF,EAAXE,OAERS,qBAAU,WACc,oBAAlBzf,EAAOgF,QACTygB,EAAY,QAIhB,IAAMiB,EtB1FD,SAA+BvgB,GACpC,OAAQA,EAAMqT,MACZ,IAAK,cACH,OAAOzM,GAAQf,GAAkB7F,GACnC,IAAK,gBAEL,IAAK,oBAEL,IAAK,UACH,OAAO4G,GAAQT,GAAwBnG,GACzC,QACE,OAAO,GsB+ESwgB,CAAsBxgB,GAE1C,OACE,kBAAC,IAAD,CAAMic,KAAK,IAAIS,MAAM,OAAOb,UAAU,KACpC,kBAAC,IAAD,CAAMkE,EAAE,OAAOU,EAAE,OAAOpJ,QAAQ,SAASC,MAAM,UAC7C,kBAAC,IAAD,CACEyI,EAAE,OACFxI,GAAI,EACJC,GAAI,EACJK,QAAQ,gBACRP,MAAM,SACNoJ,kBAAkB,MAClBC,kBAAkB,oBAElB,kBAAC,IAAD,CAAM1E,KAAK,KACT,kBAACzsB,EAAD,CACEG,QAAQ,eACRmoB,QAAS,WACPxI,EAASkF,MACT8K,EAAY,iBAEdvH,QAAQ,OACRC,WAAW,SACXP,MAAM,YACN0D,OAAO,OACPiB,OAAQ,CACN3E,MAAO,QACPmJ,eAAgB,YAChBxF,YAAa,cAGf,kBAAC,IAAD,CAAK3D,MAAM,gBACT,kBAAC,IAAD,CAAG/nB,KAAM,GAAIwoB,YAAY,OAE3B,kBAAC,IAAD,CAAMC,SAAU,GAAIF,GAAI,EAAGG,WAAW,OAAtC,YAKJ,kBAAC6H,GAAD,CAAmBjgB,MAAOA,IAC1B,kBAAC,IAAD,CAAMic,KAAK,IAAIpE,QAAQ,YACrB,kBAACroB,EAAD,CACEqxB,WAA2B,gBAAf7gB,EAAMqT,KAAyB,UAAY,SACvD1jB,QAAQ,wBACRmoB,QAAS,kBAAMxI,EAASsE,QAExB,kBAAC,IAAD,CAAK6D,MAAM,gBACT,kBAAC,KAAD,CAAa/nB,KAAM,GAAIwoB,YAAY,OAErC,kBAAC,IAAD,CAAMD,GAAI,GAAV,SAEF,kBAACzoB,EAAD,CACEG,QAAS4wB,EAAc,gBAAkB,wBACzCzI,QAAS,WACP,GAAKyI,EACL,OAAQvgB,EAAMqT,MACZ,IAAK,cAGL,IAAK,gBACH,OAAO/D,EAASmE,MAElB,IAAK,UACH,OAAOoF,MAIbZ,GAAI,GAEY,YAAfjY,EAAMqT,KAAqB,SAAW,QAEzC,kBAACmF,GAAD,CACEG,WAAYA,EACZ7Q,OAAO,YACPoR,cAAe,kBAAM5J,EAASiB,OAC9BmI,WAAY,kBAAMpJ,EAASkF,OAC3BiF,WAAY,kBAAM6F,EAAY,iBAC9B7G,gBAAgB,EAChBH,oBACE,wDAEE,6BACA,kBAAC,IAAD,CACEH,SAAS,OACTC,WAAW,SACXqH,UAAW,EACX9H,UAAU,SACVF,MAAM,YAEN,0BAAMiI,KAAK,MAAMC,aAAW,aAA5B,gBAEQ,IATV,oFAkBV,kBAAC,IAAD,CACEjD,MAAM,OACNH,GAAI,GACJhF,GAAI,CACFmH,KAAM,EACNC,GAAI,IAENmC,UAAU,OACVjF,UAAU,MACVI,KAAK,IACL5E,QAAQ,SACRC,MAAM,UAEN,kBAAC8I,GAAD,MACA,kBAAC,IAAD,CAAKpF,GAAI,GAAI+E,EAAE,YC7NV,SAASgB,GAAT,GAKS,IAJpBvwB,EAImB,EAJnBA,QACAiH,EAGmB,EAHnBA,SACAgkB,EAEmB,EAFnBA,SACAuF,EACmB,EADnBA,SAEA,OACI,kBAAC,IAAD,CACI1J,MAAM,SACNE,GAAI,EACJD,GAAI,EACJ2H,GAAIzD,EAAW,WAAa,QAC5BhE,MAAOgE,EAAW,QAAU,WAC5BW,OAAQ,CACJD,OAAQ,UACR1E,MAAOgE,EAAW,QAAU,YAEhC3D,QAAS,kBAAMkJ,EAASxwB,IACxBkvB,KAAK,SAEL,kBAAC,IAAD,CACIpI,MAAM,SACNO,QAAQ,SACRkI,EAAG,EACHU,EAAG,EACHvB,GAAIzD,EAAW,aAAe,WAC9BhE,MAAOgE,EAAW,QAAU,WAC5BqD,aAAa,OACb1G,WAAW,MACX6I,YAAa,CACT/B,GAAIzD,EAAW,aAAe,aAGlC,kBAAC,IAAD,MAAe,OAARhkB,QAAQ,IAARA,OAAA,EAAAA,EAAU1E,MAAO0E,EAAS1E,KAAK,GAAK,MAE/C,kBAAC,IAAD,CAAMspB,GAAI,EAAGjE,WAAuB,QACvB,OAAR3gB,QAAQ,IAARA,OAAA,EAAAA,EAAU1E,OAAQvC,ICtCpB,SAAS0wB,KACtB,IAAMplB,EAAc+a,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,OAAOiC,eACxCkE,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,eAC3B4Q,EAAWqH,KACjB,OACE,oCACE,kBAAC,IAAD,CAASY,GAAI,EAAGgF,GAAI,EAAGvB,GAAI,EAAGtrB,KAAK,KAAK+nB,MAAM,kBAA9C,eAGA,kBAAC,IAAD,CACE+C,WAAW,OACXjD,GAAI,EACJyD,GAAI,EACJ7C,SAAS,KACTV,MAAM,kBALR,YASCzX,EAAMtB,YAAYsB,EAAMH,kBACvB,kBAACkhB,GAAD,eACEtvB,IAAKuO,EAAMH,iBACX4b,SAAUzb,EAAMH,mBAAqBG,EAAMJ,mBAC3CohB,SAAU,SAAAxwB,GAAO,OAAI8e,EAAS7O,GAAiBjQ,MAC3CwP,EAAMtB,YAAYsB,EAAMH,oBAE5B,KACJ,kBAAC,IAAD,CACE2a,WAAW,OACXjD,GAAI,EACJgF,GAAI,EACJvB,GAAI,EACJ7C,SAAS,KACTV,MAAM,kBANR,oBAUC1H,OAAOC,KAAKhQ,EAAMtB,aAChBnE,QACC,SAAA/J,GAAO,eACLA,IAAYwP,EAAMH,mBAClB,UAAAG,EAAMtB,YAAYlO,UAAlB,mBAA4BE,eAA5B,eAAqCF,WAAYsL,KACnDoB,UACD1D,KAAI,SAAChJ,EAAS2wB,GAAV,OACH,kBAACJ,GAAD,eACEtvB,IAAKjB,EAAU2wB,EACf1F,SAAUjrB,IAAYwP,EAAMJ,mBAC5BohB,SAAU,SAAAxwB,GAAO,OAAI8e,EAAS7O,GAAiBjQ,MAC3CwP,EAAMtB,YAAYlO,QAG5B,kBAAC,IAAD,CAAM+mB,GAAI,EAAGgF,GAAI,EAAG1E,QAAQ,SAASmD,GAAI,GACvC,kBAACH,GAAD,Q,kCC5CO,SAASuG,KACtB,IAAMphB,EAAQ6W,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,eAC3B4Q,EAAWqH,KAEjB,OACE,kBAAC,IAAD,CAAM+F,MAAM,OAAOpF,MAAM,UACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE2D,GAAIC,IACJC,OAAO,YACPC,YAAY,aACZa,KAAK,KAEL,kBAAC,IAAD,CAAM3E,MAAM,UACV,kBAAC,IAAD,CAAKiE,GAAI,GACP,kBAAC,KAAD,OAEDvb,EAAMJ,mBACHI,EAAMtB,YAAYsB,EAAMJ,oBAAoBnI,SAAS1E,KACrD,MAGR,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1C,KAAK,QACLmrB,aAAcxb,EAAMJ,oBAAsB,IAE1C,kBAAC,IAAD,CAAMqY,GAAI,EAAGoJ,GAAI,EAAGjJ,WAAW,OAA/B,YAGA,kBAAC,IAAD,CACE3mB,IAAKuO,EAAMH,iBACX4b,SAAUzb,EAAMH,mBAAqBG,EAAMJ,mBAC3ClO,MAAOsO,EAAMH,iBACbmhB,SAAU,kBACR1R,EAAS7O,GAAiBT,EAAMH,qBAGjCG,EAAMtB,YAAYsB,EAAMH,kBAAkBpI,SAAS1E,MAEtD,kBAAC,IAAD,CAAMklB,GAAI,EAAGoJ,GAAI,EAAGjJ,WAAW,OAA/B,oBAGCrI,OAAOC,KAAKhQ,EAAMtB,aAChBnE,QAAO,SAAA/J,GAAO,OAAIA,IAAYwP,EAAMH,oBACpCrG,KAAI,SAAChJ,EAAS2wB,GAAV,OACH,kBAAC,IAAD,CACE1vB,IAAKjB,EAAU2wB,EACfzvB,MAAOlB,EACPirB,SAAUjrB,IAAYwP,EAAMJ,mBAC5BkY,QAAS,kBAAMxI,EAAS7O,GAAiBjQ,MAExCwP,EAAMtB,YAAYlO,GAASiH,SAAS1E,a,wBCpDvD,SAASuuB,KACP,OACE,kBAAC,IAAD,CACEjK,QAAQ,SACRC,MAAM,SACNO,QAAQ,SACRoE,KAAK,IACLiD,GAAG,WACHzH,MAAM,WACN4D,OAAO,QAEP,kBAAC,KAAD,CAAc3rB,KAAK,UAKlB,SAAS6xB,GAAW9xB,GAAyB,IAAD,EAyBhB,IAcA,IAtC3BgtB,E5BgBD,SAA6BxiB,EAA2BlF,GAC7D,IAAMysB,EAAM/f,GAAa1M,GACzB,OAAOysB,EAAG,UAAMvnB,EAAOsP,YAAb,iBAAiCiY,GAAQzsB,E4BlBvC0sB,CAAoBhyB,EAAMwK,OAAQxK,EAAMoG,aACpD,EAA8BijB,oBAAS,GAAvC,mBAAO4I,EAAP,KAAgBC,EAAhB,KACA,EAAsB7I,mBAA+C,MAArE,mBAAO8I,EAAP,KAAYC,EAAZ,KAgBA,OAfAvI,qBAAU,WACR,sBAAC,4BAAAthB,EAAA,+EAGgB0Y,MAAM+L,GAAK7K,MAAK,SAAAC,GAAC,OAAIA,EAAEjD,UAHvC,OAGGA,EAHH,+EAKU+S,GAAW,IALrB,OAOCE,EAAO,CACLja,IAAKqH,IAAIC,gBAAgBN,GACzBve,KAAMue,EAAKve,OATd,wDAAD,KAYC,CAACosB,IAEAiF,EACK,kBAACJ,GAAD,MAGJM,EAED,aAAajqB,KAAKiqB,EAAIvxB,MAEtB,kBAAC,KAAD,CACEosB,IAAKA,EACLR,KAAK,IACL8C,SAAUtvB,EAAMqyB,KAChB9C,UAAWvvB,EAAMsyB,KACjBpE,MAAO,CAAEhB,UAAS,UAAEltB,EAAMktB,iBAAR,QAAqB,QAASoC,SAAUtvB,EAAMqyB,KAAM9C,UAAS,UAAEvvB,EAAMsyB,YAAR,QAAgB,OAAQ5F,OAAQ1sB,EAAM0sB,QACrHrE,QAASroB,EAAMqoB,QACfkK,QAAS,kBAAML,GAAW,MAK5B,aAAahqB,KAAKiqB,EAAIvxB,MAEtB,2BACA4xB,QAAQ,WACNnK,QAAS,SAAA3kB,GAAC,OAAIA,EAAE+uB,kBAChBC,aAAc,SAAAhvB,GAAC,OAAIA,EAAEiqB,cAAcgF,QACnCC,aAAc,SAAAlvB,GAAC,OAAIA,EAAEiqB,cAAckF,SACnC3E,MAAO,CAAEhB,UAAS,UAAEltB,EAAMktB,iBAAR,QAAqB,QAASoC,SAAUtvB,EAAMqyB,KAAM9C,UAAS,UAAEvvB,EAAMsyB,YAAR,QAAgB,OAAQ5F,OAAQ1sB,EAAM0sB,QACrHoG,iBAAkB,SAAApvB,GAAOA,EAAEub,OAA4B8T,YAAc,KACrEzF,OAAK,EACLD,UAAQ,GAER,4BAAQL,IAAKmF,EAAIha,IAAKvX,KAAMuxB,EAAIvxB,UAKtC,UAAIZ,EAAMgI,SAASV,eAAnB,aAAI,EAAwBsF,SAEe,sBAAvC5M,EAAMgI,SAASV,QAAQ,GAAG/B,UACa,oBAAvCvF,EAAMgI,SAASV,QAAQ,GAAG/B,SAgBvB,kBAACssB,GAAD,MAbD,oCACE,kCACEzD,eAAA,EACA4E,sBAAoB,QACpB7E,mBAAA,EACAnB,IAAKmF,EAAIha,IACTmW,MAAOtuB,EAAMsuB,SA7CN,K,wBC3CJ,SAAS2E,GAAUjzB,GAAwB,IAAD,IACvD,EAAwB4vB,cAAfC,EAAT,oBACA,OACE,kBAAC,IAAD,CACEqD,SAAS,WACTtL,QAAQ,SACRuL,MAAO,EACP7C,EAAE,OACFb,GAAG,QACH/D,OAAO,YACPC,YAAY,OACZ0D,aAAa,MACbG,SAAS,SACT4D,UAAU,OACVC,WAAW,kBACX1G,OAAQ,CACND,OAAQ,UACR0G,UAAW,sBAEb/K,QAAS,kBACPwH,EAAY,eAAD,OAAgB7vB,EAAMe,QAAtB,kBAAuCf,EAAM6B,OAG1D,kBAAC,KAAD,CAAasxB,MAAO,KAClB,kBAAC,IAAD,KACE,kBAACrB,GAAD,eAAY9vB,IAAG,UAAKhC,EAAMe,QAAX,YAAsBf,EAAM6B,KAAU7B,MAGzD,kBAAC,IAAD,CACEitB,MAAM,OACNnF,GAAI,EACJC,GAAI,EACJ0H,GAAG,QACH6D,UAAU,YACV3H,YAAY,kBACZ/D,QAAQ,MACR6I,eAAe,iBAEf,kBAAC,IAAD,CAAMnI,QAAQ,QAAQI,SAAS,KAAKuE,MAAM,MAAM1E,WAAW,SAASqD,OAAO,OAAO2H,WAAW,SAAS/D,SAAS,SAASgE,aAAa,YAAYxzB,EAAM8H,OACvJ,kBAAC,IAAD,CAAM4gB,SAAS,KAAKC,WAAW,MAAMsE,MAAM,MAAMwD,eAAe,WAAWlI,WAAW,UAAtF,UACGvoB,EAAM0E,YADT,aACG,EAAYF,MAAMivB,QAAQ,GAD7B,OACsC,yBAAKzG,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAE5F,SAAS,UAAAtoB,EAAM0E,YAAN,eAAYF,OAAQ,eAAiB,aC3BpI,SAASovB,GAAT,GAGa,IAF1B7yB,EAEyB,EAFzBA,QAEyB,IADzB8yB,iBACyB,SACnB5kB,EAAcmY,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,eACvC,EAAwCmY,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAAnDI,EAAR,EAAQA,OAAQ6B,EAAhB,EAAgBA,YAAa2G,EAA7B,EAA6BA,OACvB6M,EAAWqH,KAUjB,GARA2C,qBAAU,WACQ,OAAZ9oB,GACF8e,EAASpR,GAAyB1N,IAAUohB,MAAK,kBAC/CtC,EAAS7Q,GAAqBjO,SAGjC,CAACA,EAAS8e,IAEG,OAAZ9e,EACF,OAAO,qCAGT,IAAM8gB,EAAa5S,EAAYA,YAAYlO,GAE3C,IAAK8gB,EACH,OAAO,qCAGT,IAAKA,EAAW9T,OACd,OACE,kBAAC,IAAD,CAAM6Z,QAAQ,SAASC,MAAM,SAAS2E,KAAK,IAAIM,GAAI,IACjD,kBAAC,KAAD,CAAS7sB,KAAK,KAAKgoB,GAAI,EAAGD,MAAM,aAChC,kBAAC,IAAD,CAAS/nB,KAAK,KAAKioB,UAAU,SAASF,MAAM,YAA5C,eAON,GAA0B,OAAtBnG,EAAWvX,OACb,OAAO,qCAGT,IAAMA,EAASupB,EACXhS,EAAWvX,OAAOQ,QAChB,gBAAG/C,EAAH,EAAGA,MAAOrD,EAAV,EAAUA,KAAV,OACEqD,IAAUsE,IAAmB,OAAJ3H,QAAI,IAAJA,OAAA,EAAAA,EAAMN,UAAWiI,KAE9CwV,EAAWvX,OAEf,OAAsB,IAAlBA,EAAOsC,OAEP,kBAAC,IAAD,CAAM0jB,EAAE,OAAO9D,KAAK,IAAI5E,QAAQ,SAASC,MAAM,UAC7C,kBAAC,IAAD,CACEC,GAAI,GACJC,GAAI,GACJ0H,GAAG,WACHvH,UAAU,SACVL,MAAM,SACNwH,aAAa,MACbzH,QAAQ,SACRc,SAAS,KACTV,MAAM,WACNwC,GAAI,IAEJ,kBAAC,KAAD,MACA,kBAAC,IAAD,CAAM7B,WAAW,MAAMmE,GAAI,GACxB+G,EACG,gDACA,6CAQZ,kBAAC,IAAD,CACEjM,QAAQ,SACRoJ,EAAE,OACFV,EAAE,OACF9D,KAAK,IACLiD,GAAG,mBACHqE,gBAAgB,MAChBC,gBAAgB,kBAChB1C,UAAU,SACVjJ,QAAQ,SAER,kBAAC,IAAD,CAAMR,QAAQ,OACZ,kBAAC,IAAD,CAAM6I,eAAe,aAAaxD,MAAM,QACtC,kBAACltB,EAAD,CACEG,QAAQ,wBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACFlT,OAAOyU,QAAQC,SAGjB,kBAAC,IAAD,CAAKjM,MAAM,gBACT,kBAAC,KAAD,CAAa/nB,KAAM,GAAIwoB,YAAY,SAKzC,kBAAC,IAAD,CACIb,QAAQ,SACRE,GAAI,CAAEmH,KAAM,EAAGC,GAAI,IACnBpC,GAAI,EACJ0C,SAAS,UAEVqE,GAAwB,OAAX7gB,EACZ,kBAAC,IAAD,CAAMsV,QAAS,CAAE2G,KAAM,OAAQC,GAAI,QAAUjH,GAAI,GAC/C,kBAAC0J,GAAD,OAEA,KACJ,kBAAC,IAAD,CACErB,EAAE,OACF/E,GAAI,EACJnD,QAAQ,gBACRP,MAAO,CACLoH,KAAM,aACNC,GAAI,UAENtH,QAAS,CACPqH,KAAM,SACNC,GAAI,QAGN,kBAAC,IAAD,CAAMtH,QAAQ,SAASqF,MAAM,QAC3B,kBAAC,IAAD,CAAM7E,QAAQ,gBAAgB6E,MAAM,QAClC,kBAAC,IAAD,CAAShtB,KAAK,MAAM4hB,EAAW7Z,SAAS1E,MAAQ,KAElD,kBAAC,IAAD,CAAMukB,MAAM,UACV,kBAAC,IAAD,CACEkD,WAAW,OACX/C,MAAM,kBACNwH,SAAS,SACTgE,aAAa,WACbU,aAAa,UAEZrS,EAAW9gB,SAEd,kBAAC,IAAD,CACEozB,KAAI,UAAK3pB,EAAOiO,IAAI2b,IAAhB,YAAuB5pB,EAAOkO,QAA9B,YAAyCmJ,EAAW9gB,SACxDinB,MAAM,iBACNqM,YAAU,EACV7L,GAAI,GAEJ,kBAAC,KAAD,CAAcvoB,KAAM,QAI1B,kBAACF,EAAD,CACEuoB,QAAS,CAAE2G,KAAM,OAAQC,GAAI,QAC7BhvB,QAAQ,wBACRmoB,QAAS,WACP,IAAMlY,EAAqBlB,EAAYkB,mBACZ,OAAvBA,GACF0P,EAAS7Q,GAAqBmB,KAGlCqa,GAAI,CACFyE,KAAM,EACNC,GAAI,QAMd,kBAAC,KAAD,CAAY1M,QAAS,CAAE8R,GAAI,EAAGpF,GAAI,EAAGqF,GAAI,EAAGC,GAAI,GAAKC,IAAK,EAAG3M,GAAI,CAAEmH,KAAM,EAAGC,GAAI,IAAM3D,GAAI,GACvFjhB,EAAOP,KAAI,SAAAuB,GACV,OACE,kBAAC2nB,GAAD,eACEjxB,IAAKjB,EAAUuK,EAAMzJ,GACrBd,QAASA,EACTyJ,OAAQA,GACJc,S,yBCxLH,SAASopB,KACtB,IAAMtqB,EAASgd,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAC5B6E,EAAcmY,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,eACjC4Q,EAAWqH,KAEX9W,EACJnB,EAAYA,YAAYA,EAAYmB,kBAEtCyZ,qBAAU,WACHzZ,EAIkC,OAAnCnB,EAAYkB,oBACd0P,EAAS7O,GAAiB/B,EAAYmB,mBAJtCyP,EAASpR,GAAyBQ,EAAYmB,qBAO/C,CACDA,EACAnB,EAAYkB,mBACZlB,EAAYmB,iBACZyP,IAGFgK,qBAAU,WACc,oBAAlBzf,EAAOgF,QACTyQ,EAAS1Q,QAEV,CAAC/E,EAAOgF,OAAQyQ,IAEnB,IAAM1P,EAAqBlB,EAAYkB,mBACvC,OAAI/F,EAAO4R,0BAA8C,oBAAlB5R,EAAOgF,OAE1C,kBAAC,IAAD,CACEyY,MAAM,SACN4I,eAAe,gBACfH,EAAE,OACF9D,KAAK,IACL5E,QAAQ,SACR6H,GAAG,oBAEH,kBAAC,IAAD,CAAM7H,QAAQ,SAASC,MAAM,SAASwK,KAAK,QAAQvF,GAAI,IACrD,kBAAC,KAAD,CAAOE,IAAK2H,KAAMtC,KAAK,QAAQ9G,GAAI,KACnC,kBAAC,IAAD,CAASvD,MAAM,QAAQ/nB,KAAK,KAAKsrB,GAAI,GAArC,wBAGA,kBAAC,IAAD,CAAMqJ,KAAK,QAAQxM,QAAQ,SAASmD,GAAI,IACtC,kBAACxrB,EAAD,CACEG,QAAQ,uBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5S,EAAS7C,QAJb,yBAWJ,kBAAC,IAAD,CACEiQ,MAAM,OACNwC,GAAG,iBACHzH,MAAM,kBACN+C,WAAW,OACX2E,SAAU,GACVK,SAAU,EACVU,eAAe,iBAEf,kBAAC,IAAD,CAAM/H,SAAS,MAAf,uBACuBmM,0HAAYC,mBAEnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpM,SAAS,KACTqM,UAAU,YACVZ,KAAK,qCAHP,aAcR,kBAAC,IAAD,CACE3H,KAAK,IACL8D,EAAE,OACFlE,UAAU,IACVxE,QAAS,CACPqH,KAAM,SACNC,GAAI,QAGN,kBAAC,IAAD,CACEoB,EAAE,QACFU,EAAE,OACFpJ,QAAQ,SACRyJ,UAAU,SACV/I,QAAS,CACP2G,KAAM,OACNC,GAAI,SAGN,kBAACuC,GAAD,OAEF,kBAACmC,GAAD,CAAmB7yB,QAASoP,K,wBChG3B,SAAS6kB,GAAmBh1B,GACjC,MAAkCqpB,mBAAS,IAA3C,mBAAO9U,EAAP,KAAkB0gB,EAAlB,KACMpV,EAAWqH,KACXiD,EAAaU,IAAMC,OAAO,MAChC,OACE,kBAAC/B,GAAD,CACEG,WAAYlpB,EAAMkpB,WAClBN,KAAM5oB,EAAM4oB,KACZvQ,OAAO,gBACPoR,cAAe,kBACb5J,EACEkD,GAAoB,CAClBrgB,SAAU1C,EAAMsU,gBAChB3M,QAAS3H,EAAM2H,QACfsb,GAAI1O,MAIV0U,WAAY,kBAAMgM,EAAa,KAC/B9K,WAAYA,EACZpK,eAAe,wBACf+I,gBAAgB,oBAChB2B,KAAM,SAAAjB,GAAQ,OACZ,oCACE,kBAAC,KAAD,uBACA,kBAAC,KAAD,MACA,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWuB,WAAW,QAAtB,cACA,kBAAC,IAAD,CACEC,WAAW,EACXC,IAAKd,EACLe,YAAY,wBACZjpB,MAAOsS,EACP4W,SAAU,SAAAznB,GAAC,OAAIuxB,EAAavxB,EAAEub,OAAOhd,YAK3C,kBAAC,KAAD,KACE,kBAAClC,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAAS,kBAAMmB,MAArD,iB,kCCtCL,SAAS0L,GAAel1B,GAC7B,MAA0BqpB,mBAAS,IAAnC,mBAAO7kB,EAAP,KAAc2wB,EAAd,KACMtV,EAAWqH,KACXiD,EAAaU,IAAMC,OAAO,MAE1B/V,EAAYqgB,KAAKC,MAAsB,IAAhBnqB,OAAO1G,IAC9B8wB,GAAcpqB,OAAOqqB,MAAM/wB,IAAUuQ,EAAY,EACvD,OACE,kBAACgU,GAAD,CACEG,WAAYlpB,EAAMkpB,WAClBN,KAAM5oB,EAAM4oB,KACZvQ,OAAO,YACPoR,cAAe,kBACb5J,EACEsD,GAAgB,CACdzgB,SAAU1C,EAAM0C,SAChBiF,QAAS3H,EAAM2H,QACfoN,UAAWA,MAIjBkU,WAAY,kBAAMkM,EAAS,KAC3BhL,WAAYA,EACZpK,eAAe,4BACf+I,gBAAgB,wBAChB2B,KAAM,SAAAjB,GAAQ,OACZ,oCACE,kBAAC,KAAD,uBACA,kBAAC,KAAD,MACA,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEgM,cAAc,OACdxN,MAAM,WACNU,SAAS,QACT0H,SAAU,yBAAKpD,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAC5F,QAAS,oBAE3E,kBAAC,IAAD,CACE0C,WAAW,EACXC,IAAKd,EACLe,YAAY,oBACZjpB,MAAOuC,EACP2mB,SAAU,SAAAznB,GAAC,OAAIyxB,EAASzxB,EAAEub,OAAOhd,YAIvC,kBAAC,IAAD,CAAKumB,GAAI,GACP,kBAACzoB,EAAD,CACEG,QACEo1B,EAAa,gBAAkB,wBAEjCjN,QAAS,kBAAMiN,GAAc9L,MAE7B,kBAAC,KAAD,UAKR,kBAAC,KAAD,UAYH,SAASiM,GAAgBz1B,GAC9B,IAAMkpB,EAAamC,cACXjc,EAAWgY,IAAY,SAAAha,GAAC,OAAIA,EAAEgC,OAAOgW,aAArChW,OAER,OACE,oCACE,kBAACrP,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAASa,EAAWE,OAAQsM,SAAqB,eAAXtmB,GAA5E,QAGA,kBAAC8lB,GAAD,iBAAoBl1B,EAApB,CAA2BkpB,WAAYA,EAAYN,KAAM5oB,EAAM4oB,SCrF9D,SAAS+M,GAAqB31B,GACnC,IAAM6f,EAAWqH,KACXiD,EAAaU,IAAMC,OAAO,MAChC,OACE,kBAAC/B,GAAD,CACEG,WAAYlpB,EAAMkpB,WAClBN,KAAM5oB,EAAM4oB,KACZvQ,OAAO,kBACPoR,cAAe,kBACb5J,EACEwD,GAAsB,CACpB3gB,SAAU1C,EAAM0C,SAChBiF,QAAS3H,EAAM2H,QACfC,OAAQ5H,EAAM4H,OACd0b,SAAUtjB,EAAMsjB,aAItB6G,WAAYA,EACZpK,eAAe,0BACf+I,gBAAgB,sBAChB2B,KAAM,SAAAjB,GAAQ,OACZ,oCACE,kBAAC,KAAD,sBACA,kBAAC,KAAD,MACA,kBAAC,KAAD,KACE,kBAAC,IAAD,mDAEF,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAQtpB,QAAQ,gBAAgB4rB,GAAI,EAAGzD,QAAS,kBAAMmB,MAAtD,OAGA,kBAAC,IAAD,CACEtpB,QAAQ,eACRmoB,QAAS,kBAAMroB,EAAMkpB,WAAWzB,YAFlC,WAoBL,SAASmO,GAAsB51B,GACpC,IAAMkpB,EAAamC,cACXjc,EAAWgY,IAAY,SAAAha,GAAC,OAAIA,EAAEgC,OAAO2G,mBAArC3G,OAER,OACE,oCACE,kBAACrP,EAAD,CAAcG,QAAQ,eAAemoB,QAASa,EAAWE,OAAQsM,SAAqB,eAAXtmB,GAA3E,eAIA,kBAACumB,GAAD,iBACM31B,EADN,CAEEkpB,WAAYA,EACZN,KAAM5oB,EAAM4oB,SCjEb,SAASiN,GAAc71B,GAC5B,IAAM6f,EAAWqH,KACXiD,EAAaU,IAAMC,OAAO,MAChC,OACE,kBAAC/B,GAAD,CACEG,WAAYlpB,EAAMkpB,WAClBN,KAAM5oB,EAAM4oB,KACZvQ,OAAO,WACPoR,cAAe,kCACb5J,EACE2D,GAAe,CACb9gB,UAAU,UAAA1C,EAAMsL,MAAM5G,YAAZ,eAAkBgD,UAAU3G,UAAW,GACjD4G,SAAS,UAAA3H,EAAMsL,MAAM5G,YAAZ,eAAkBgD,UAAUC,UAAW,EAChDsO,aAAa,UAAAjW,EAAMsL,MAAM5G,YAAZ,eAAkBN,SAAU,GACzC2Q,WAAW,UAAA/U,EAAMsL,MAAM5G,YAAZ,eAAkBF,QAAS,EACtCoD,QAAQ,UAAA5H,EAAMsL,MAAM5G,YAAZ,eAAkBkD,SAAU,EACpC0b,UAAU,UAAAtjB,EAAMsL,MAAM5G,YAAZ,eAAkB9D,OAAQ,OAI1CupB,WAAYA,EACZpK,eAAe,sBACf+I,gBAAgB,kBAChB2B,KAAM,SAAAjB,GAAQ,aACZ,oCACE,kBAAC,KAAD,iBACA,kBAAC,KAAD,MACA,kBAAC,KAAD,KACE,kBAAC,IAAD,iCAEE,kBAAC,IAAD,CAAKgC,GAAG,OAAO7C,WAAW,QACvB,IACA3oB,EAAMsL,MAAMxD,MAFf,KAEuB,yBAAKklB,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAC5F,QAAS,kBAFtF,cAE0GtoB,EAAMsL,MAAM5G,YAFtH,aAE0G,EAAkBF,MAF5H,OAMJ,kBAAC,KAAD,KACE,kBAAC,IAAD,CACEtE,QAAQ,gBACRmoB,QAAS,kBAAMmB,KACfsM,aAAa,GAHf,gBAkBL,SAASC,GAAe/1B,GAC7B,IAAMkpB,EAAamC,cACXjc,EAAWgY,IAAY,SAAAha,GAAC,OAAIA,EAAEgC,OAAO+G,YAArC/G,OAER,OACE,oCACE,kBAACrP,EAAD,CAAcG,QAAQ,gBAAgBmoB,QAASa,EAAWE,OAAQsM,SAAqB,eAAXtmB,GAA5E,WAIA,kBAACymB,GAAD,iBAAmB71B,EAAnB,CAA0BkpB,WAAYA,EAAYN,KAAM5oB,EAAM4oB,S,mCCnDpE,SAASoN,KACP,OACE,kBAAC,IAAD,CAAMxJ,KAAK,IAAIS,MAAM,OAAO7E,QAAQ,UAClC,kBAAC,IAAD,CAAMkI,EAAE,OAAO9D,KAAK,IAAI5E,QAAQ,SAASC,MAAM,UAC7C,kBAAC,IAAD,CACEC,GAAI,GACJC,GAAI,GACJ0H,GAAG,WACHvH,UAAU,SACVL,MAAM,SACNwH,aAAa,MACbzH,QAAQ,SACRc,SAAS,KACTiD,YAAY,WACZyD,YAAY,MACZ5E,GAAI,GACJxC,MAAM,YAEN,kBAAC,KAAD,CAAY/nB,KAAK,UACjB,kBAAC,IAAD,CAASA,KAAK,KAAK0oB,WAAW,SAASmE,GAAI,EAAG9E,MAAM,YAApD,sBAqRKiO,OAvQf,YAAsE,IAAD,YAA9C3hB,EAA8C,EAA9CA,gBAAiB3M,EAA6B,EAA7BA,QACtC,EAAuCyf,IAAY,SAAAha,GAAC,OAAIA,KAAhDhD,EAAR,EAAQA,OAAqBmG,EAA7B,EAAgBtB,YACVia,EAAamC,cACbxL,EAAWqH,KACXrF,EAAatR,EAAMtB,YAAYqF,GACrC,EAAoC+W,cAA5BlC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQ3B,EAAxB,EAAwBA,QAElByO,OAAqCtV,IAAfiB,EAU5B,GARAgI,qBAAU,WAENhK,EADEqW,EACOznB,GAAyB6F,GAEzBtF,GAAqBsF,MAE/B,CAACA,EAAiB3M,EAASuuB,EAAqBrW,MAE/C,OAACgC,QAAD,IAACA,OAAD,EAACA,EAAYvX,QACf,OAAO,KAGT,IAAMgB,EAAQuW,EAAWvX,OAAOwB,MAAK,SAAAR,GAAK,OAAIA,EAAMzJ,KAAO8F,KAC3D,IAAK2D,EACH,OAAO,kBAAC0qB,GAAD,MAGT,IAAMG,EACJ/rB,EAAOiC,cACNjC,EAAOiC,cAAgBf,EAAMvD,OAC5BqC,EAAOiC,eAAP,UAAuBf,EAAM5G,YAA7B,aAAuB,EAAYN,SAEvC,OACE,kBAAC,IAAD,CAAMwjB,QAAQ,SAAS6H,GAAG,mBAAmB2G,SAAU,GACrD,kBAAC,KAAD,CACEjN,OAAQA,EACR1B,QAASA,EACTxnB,KAAK,OACLo2B,eAAe,UAEf,kBAAC,KAAD,CACEzK,OAAO,QACP2D,UAAU,QACVtC,MAAM,QACN3E,QAAQ,OACRgO,cAAc,SACdC,SAAS,SACT9F,eAAe,SACflI,WAAW,SACX2K,SAAS,WACTrH,gBAAgB,YAChB2K,OAAO,OACPC,OAAO,eACPpH,aAAa,KAEb,kBAACyC,GAAD,eACE9vB,IAAG,UAAKsJ,EAAMvK,QAAX,YAAsBuK,EAAMzJ,IAC/B2I,OAAQJ,EAAOI,QACXc,EAHN,CAIEtD,SAAQ,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAOtD,SACjBqqB,KAAK,OACLC,KAAK,OACLpF,UAAU,gBAEZ,kBAAC,KAAD,CACEgG,SAAS,WACTpqB,MAAM,iBACNwf,QAAQ,mBACRI,SAAS,OACTgO,IAAI,iBACJC,WAAW,iBACX3O,MAAM,QACNsL,UAAU,iBACVrG,MAAM,OACNrB,OAAO,OACPgL,YAAY,OACZhG,aAAa,OACbiG,sBAAsB,IACtBC,qBAAqB,IACrBC,mBAAmB,IACnBrL,OAAO,QAIb,kBAAC,IAAD,CAAM+E,eAAe,aAAaxD,MAAM,QACtC,kBAACltB,EAAD,CACEG,QAAQ,wBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACFlT,OAAOyU,QAAQC,SAGjB,kBAAC,IAAD,CAAKjM,MAAM,gBACT,kBAAC,KAAD,CAAa/nB,KAAM,GAAIwoB,YAAY,SAIzC,kBAAC,IAAD,CACEX,GAAI,CAAC,EAAG,IACRgF,GAAI,CAAC,GAAI,GACTvB,GAAI,CAAC,EAAG,GACR0B,MAAO,CAAC,QACRsC,UAAW,CAAC,OAAQ,OAAQ,QAC5B3D,OAAQ,CAAC,QACT6E,eAAe,UAEf,kBAACqB,GAAD,eACE9vB,IAAG,UAAKsJ,EAAMvK,QAAX,YAAsBuK,EAAMzJ,IAC/B2I,OAAQJ,EAAOI,QACXc,EAHN,CAIEtD,SAAQ,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAOtD,SACjBqqB,KAAK,OACLC,KAAK,OACLpF,UAAU,aACVR,OAAO,UACPrE,QAASe,MAGb,kBAAC,IAAD,CAAM6D,MAAM,OAAOrB,OAAO,OAAO6E,eAAe,WAAWX,aAAc,CAAC,EAAG,GAAI0G,OAAO,MACtF,kBAAC,IAAD,CAAQnO,QAASe,GACf,kBAAC,KAAD,CAAWnpB,KAAM,GAAIwoB,YAAY,QAGrC,kBAAC,IAAD,CAAMwE,MAAO,CAAC,QAASwC,GAAG,QAAQ7H,QAAQ,SAASwO,SAAU,GAC3D,kBAAC,IAAD,CAAMvO,MAAM,SAASO,QAAQ,eAAe6E,MAAO,CAAC,OAAQzC,GAAG,MAE/D,kBAAC,IAAD,CACEyC,MAAO,CAAC,MAAO,MAAO,OACtByD,GAAG,OACH9I,QAAQ,SACRE,GAAI,CAAC,EAAG,IACR0E,KAAK,KAEL,kBAAC,IAAD,CACE5E,QAAQ,SACR0I,EAAE,OACFb,GAAG,QACH1H,GAAI,EACJE,GAAI,GACJ+O,IAAI,YAEJ,kBAAC,IAAD,CAAS9O,UAAU,OAAOF,MAAM,cAAciF,MAAO,CAAC,OAAQ,OAAQ,OAAQvE,SAAU,CAAC,OAAQ,OAAQJ,QAAQ,gBAC9Ghd,EAAMxD,OAET,kBAAC,IAAD,CACE4gB,SAAS,KACTV,MAAM,oBACNW,WAAW,OACX6B,GAAI,CAAC,EAAG,GACRyC,MAAO,CAAC,OAAQ,OAAQ,QAEvB3hB,EAAM9E,aAAe,2BAExB,kBAAC,KAAD,CAAW+pB,aAAW,EAAC/F,GAAI,GACzB,kBAAC,KAAD,CAAekB,OAAO,QACpB,kBAAC,KAAD,CAAiB7I,EAAG,GAClB,kBAAC,IAAD,CAAMmF,MAAM,qBAAZ,cACA,kBAAC,KAAD,OAEF,kBAAC,KAAD,CAAgBuD,GAAI,GAClB,kBAAC,IAAD,CAAMf,GAAI,CAAC,EAAG,IACZ,kBAAC,IAAD,CAAMxC,MAAM,qBAAZ,WACA,kBAAC,IAAD,CAAMA,MAAM,iBAAiBW,WAAW,OAAOH,GAAI,CAAC,GAAI+K,WAAW,SAAS/D,SAAS,UACnF,kBAAC,IAAD,CAAMlH,QAAQ,QAAQiL,WAAW,SAAS/D,SAAS,SAASgE,aAAa,WAAWW,KAAI,0BAAc7oB,QAAd,IAAcA,GAAd,UAAcA,EAAOtD,gBAArB,aAAc,EAAiBhC,SAAvH,OACEsF,QADF,IACEA,GADF,UACEA,EAAOtD,gBADT,aACE,EAAiBhC,OADnB,OACgC,6BAAK,yBAAKgnB,IAAKiK,KAAItD,IAAI,GAAG1G,MAAM,OAAOrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,sBAG3G,kBAAC,IAAD,CAAMkC,GAAI,CAAC,EAAG,IACZ,kBAAC,IAAD,CAAMxC,MAAM,qBAAZ,eACA,kBAAC,IAAD,CAAMA,MAAM,iBAAiBW,WAAW,OAAOH,GAAI,CAAC,GAAI+K,WAAW,SAAS/D,SAAS,UACnF,kBAAC,IAAD,CAAMlH,QAAQ,QAAQiL,WAAW,SAAS/D,SAAS,SAASgE,aAAa,WAAWW,KAAI,sBAAiB7f,IACtG/D,EAAMJ,mBAAN,UAA2BI,EAAMtB,YAAYsB,EAAMJ,2BAAnD,aAA2B,EAA6CnI,SAAS1E,MACpE,OAAVue,QAAU,IAAVA,OAAA,EAAAA,EAAY7Z,SAAS1E,MAArB,OAA4Bue,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAY7Z,SAAS1E,KACjDgR,EAHN,OAKE,6BAAK,yBAAK0Y,IAAKiK,KAAItD,IAAI,GAAG1G,MAAM,OAAOrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,sBAhB/E,OAmBGhd,QAnBH,IAmBGA,GAnBH,UAmBGA,EAAOtD,gBAnBV,iBAmBG,EAAiBT,kBAnBpB,aAmBG,EAA6BwC,KAAI,gBAAGzG,EAAH,EAAGA,KAAMrB,EAAT,EAASA,MAAT,OAChC,kBAAC,IAAD,CAAMD,IAAKsB,EAAOrB,EAAOuoB,GAAI,CAAC,EAAG,IAC/B,kBAAC,IAAD,CAAMxC,MAAM,qBAAqB1kB,EAAjC,KACA,kBAAC,IAAD,CAAMglB,QAAQ,QAAQN,MAAM,iBAAiBW,WAAW,OAAOH,GAAI,CAAC,GAAI+K,WAAW,SAAS/D,SAAS,SAASgE,aAAa,QACxHvxB,UAOb,kBAAC,IAAD,CAAMqmB,QAAS,CAAC,QAASmI,eAAe,gBAAgBlI,WAAW,SAAS0E,MAAM,OAAOrF,QAAS,CAAC,SAAU,OAAQ2O,SAAS,OAAOvG,UAAW,GAC9I,kBAAC,IAAD,CAAMS,eAAgB,CAAC,cAAelI,WAAW,SAAS0E,MAAM,OAAO+C,UAAW,GAC/E1kB,EAAM5G,KACLyxB,EACE,oCACE,kBAAC,IAAD,CAAMnO,MAAM,cAAcU,SAAS,KAAKC,WAAW,MAAMuO,YAAa,GACnE5rB,EAAM5G,KAAKF,MADd,IACqB,yBAAKwoB,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,mBAErF,kBAAC,IAAD,CAAK4O,YAAa,GAChB,kBAACtB,GAAD,CACElzB,SAAU4I,EAAM5G,KAAKgD,UAAU3G,QAC/B4G,QAAS2D,EAAM5G,KAAKgD,UAAUC,QAC9BC,OAAQ0D,EAAM5G,KAAKkD,OACnB0b,SAAUhY,EAAM5G,KAAK9D,SAK3B,oCACE,kBAAC,IAAD,CAAMonB,MAAM,QAAQU,SAAU,CAAC,KAAM,KAAM,MAAOoD,GAAI,EAAGnD,WAAW,MAAMuO,YAAa,GACpF5rB,EAAM5G,KAAKF,MAAMivB,QAAQ,GAD5B,IACgC,yBAAKzG,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,mBAEhG,kBAAC,IAAD,KACE,kBAACyN,GAAD,CAAgBzqB,MAAOA,MAI3B6qB,EACF,kBAAC,IAAD,CAAKe,YAAa,GAChB,kBAACzB,GAAD,CAAiB/yB,SAAU4R,EAAiB3M,QAASA,KAGvD,qCAEDwuB,EACC,kBAAC,IAAD,KACE,kBAAC51B,EAAD,CAAkBL,QAAQ,WACxB,kBAAC,KAAD,CAAgB8nB,MAAM,aAExB,kBAAC,IAAD,CACE2D,YAAY,kBACZ0D,aAAa,MACbxM,EAAG,EACHsU,SAAU,CAAC,MAEV7rB,EAAM5G,KACL,qCAEA,kBAAClE,EAAD,CACE8vB,EAAG,CAAC,KACJpwB,QAAQ,UACRmoB,QAASa,EAAWE,QAHtB,aASJ,kBAAC4L,GAAD,CACE1gB,gBAAiBA,EACjB3M,QAASA,EACTuhB,WAAYA,KAIhB,4CC/SH,SAASkO,GAAcp3B,GAA4B,IAAD,EAC/D,EAAwB4vB,cAAfC,EAAT,oBACA,OACE,kBAAC,IAAD,CAAMjI,QAAQ,MAAM2O,SAAS,OAAOtO,GAAI,EAAGgF,MAAM,OAAOwD,eAAe,UACrE,kBAAC,IAAD,CAAMlB,UAAW,CAAC,OAAQ,QAASkB,eAAe,SAASxD,MAAO,CAAC,OAAQ,OAAQ,SACjF,kBAAC6E,GAAD,eACEO,KAAK,OACLC,KAAK,OACLpF,UAAU,aACVoB,MAAM,YACFtuB,KAGR,kBAAC,IAAD,CAAKmsB,WAAW,gBACd,kBAAC,IAAD,CAAMvE,QAAQ,SAASoJ,EAAE,OAAOV,EAAG,CAAC,OAAQ,QAASG,eAAe,SAASlI,WAAW,UACtF,kBAAC,IAAD,CAAStoB,KAAK,KAAKuqB,GAAI,EAAG9B,SAAS,UAChC1oB,EAAM8H,OAET,6BACA,kBAAC,IAAD,CAAM4gB,SAAS,MAAf,iBACiB,IACf,kBAAC,IAAD,CAAM8C,GAAG,OAAO7C,WAAW,OAA3B,UACG3oB,EAAM0E,YADT,aACG,EAAYF,MADf,IACsB,yBAAKwoB,IAAK0G,KAAIC,IAAI,GAAG1G,MAAO,GAAIrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,oBAGxF,6BACA,kBAACvoB,EAAD,CACEE,KAAK,KACLC,QAAQ,gBACRowB,EAAE,QACFjI,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5C,EAAY,eAAD,OAAgB7vB,EAAMe,QAAtB,kBAAuCf,EAAM6B,IAAM,CAC5DuQ,SAAS,MAIb,kBAAC,IAAD,iBCpDZ,SAASilB,GACPC,GAEC,IADDC,EACA,uDAD4B,EAE5B,EAOID,EAAQE,wBANVd,EADF,EACEA,IACA5tB,EAFF,EAEEA,MACA2uB,EAHF,EAGEA,OACAC,EAJF,EAIEA,KACA9L,EALF,EAKEA,OACAqB,EANF,EAMEA,MAGI0K,EAAcpY,OAAOqY,WACrBC,EAAetY,OAAOuY,YAEtBC,EAAWrB,EAAM9K,EACjBoM,EAAYN,EAAOzK,EACnBgL,EAAcR,EAAS7L,EACvBsM,EAAapvB,EAAQmkB,EAE3B,OACE8K,IAAaR,GACbS,IAAcT,GACdU,GAAeJ,EAAeN,GAC9BW,GAAcP,EAAcJ,EAKzB,IAmCMY,GAAoB,SAAC,GAM3B,IALLC,EAKI,EALJA,UACAb,EAII,EAJJA,0BAKMc,EAASvN,iBAAO,MAGtB,OA7CkC,SAClCwN,EACAF,GAEI,IADJb,EACG,uDADyB,EAEtBgB,EAAezN,kBAAO,GAE5BjB,qBAAU,WACR,IAAM2O,EAAaC,aAAY,WACzBF,EAAa9K,SAGZ6K,EAAW7K,SAKb4J,GAAsBiB,EAAW7K,QAAS8J,KAK7CgB,EAAa9K,SAAU,EACvB2K,OACC,KACH,OAAO,kBAAMM,cAAcF,MAC1B,CAACjB,EAA2Be,EAAYF,IAiB3CO,CAAqBN,EAAQD,EAAT,OAAoBb,QAApB,IAAoBA,IAA6B,GAE9D,yBAAKtM,IAAKoN,KClEJ,SAAS3D,KAAW,IAAD,MAChC,EAAuCtN,IAAY,SAAAha,GAAC,OAAIA,KAAhDhD,EAAR,EAAQA,OAAqBmG,EAA7B,EAAgB9F,YACVoV,EAAWqH,KAEjB2C,qBAAU,WACRhK,EAASpQ,GAAwBc,EAAM9F,YAAY1J,YAClD,CAACwP,EAAM9F,YAAY1J,QAAS8e,IAE/B,IAIIvV,EAAM,oBACRiG,EAAM9F,YAAYH,cADV,aACR,EAA0BQ,QAAO,SAAA6C,GAAC,OAAIA,EAAErC,SAAOvB,KAAI,SAAA4D,GAAC,OAAIA,EAAErC,gBADlD,QAC6D,GAEvE,OACE,kBAAC,IAAD,CACEglB,EAAE,QACFU,EAAE,OACFvB,GAAG,mBACH3H,GAAI,GACJgF,GAAI,EACJuE,UAAU,SACVjJ,QAAQ,QACRR,QAAQ,UAEPrX,EAAM9F,YAAYsD,QAAUzD,EAAOsC,OAAS,EAC3C,kBAAC,IAAD,CAAMqgB,MAAM,qBAAqBwD,eAAe,SAASlI,WAAW,UAClE,kBAAC6O,GAAD,eAAe5sB,OAAQJ,EAAOI,QAAYF,EAAO,MAEjD,KACJ,kBAAC,IAAD,CACEkiB,KAAK,IACL8D,EAAE,OACF1I,QAAQ,UAENrX,EAAM9F,YAAYsD,OAOE,IAAlBzD,EAAOsC,OACT,kBAAC,IAAD,CAAM0jB,EAAE,OAAO9D,KAAK,IAAI5E,QAAQ,SAASC,MAAM,UAC7C,kBAAC,IAAD,CACEC,GAAI,GACJC,GAAI,GACJ0H,GAAG,WACHvH,UAAU,SACVL,MAAM,SACNwH,aAAa,MACbzH,QAAQ,SACRc,SAAS,KACTV,MAAM,WACNwC,GAAI,IAEJ,kBAAC,KAAD,MACA,kBAAC,IAAD,CAAM7B,WAAW,MAAMmE,GAAI,GAA3B,8CAMJ,oCACE,kBAAC,KAAD,CACEtK,QAAS,CAAE8R,GAAI,EAAGpF,GAAI,EAAGqF,GAAI,EAAGC,GAAI,GACpCC,IAAK,EACLlJ,GAAI,GAEJ,oCACGjhB,EAAOoF,MAAM,GAAG3F,KAAI,SAAAuB,GACnB,OACE,kBAAC,IAAD,CAAKgd,QAAQ,OAAO+K,WAAW,gBAAgBuF,QAAS,EAAGjM,OAAQ,CAACiM,QAAS,IAC3E,kBAAC3F,GAAD,eACEjxB,IAAG,UAAKsJ,EAAMvK,QAAX,YAAsBuK,EAAMzJ,IAC/B2I,OAAQJ,EAAOI,QACXc,QAKZ,kBAAC,GAAD,CACEtJ,KAAK,UAAAuO,EAAM9F,YAAYH,cAAlB,eAA0BsC,QAAS,IAAMtC,EAAOsC,OACrDwrB,UA5EC,WACfvY,EAAShQ,GAA6B,MA4ExB0nB,0BAA2B,SAhDnC,kBAAC,IAAD,CAAM3P,QAAQ,SAASC,MAAM,SAAS2E,KAAK,IAAIM,GAAI,IACjD,kBAAC,KAAD,CAAS7sB,KAAK,KAAKgoB,GAAI,EAAGD,MAAM,aAChC,kBAAC,IAAD,CAAS/nB,KAAK,KAAKioB,UAAU,SAASF,MAAM,YAA5C,iB,sFChBZ,SAAS6Q,GAAiB74B,GACxB,MAAgC4vB,cAAhC,mBAAO3X,EAAP,KAAiB4X,EAAjB,KACM7D,EAAW/T,IAAajY,EAAMijB,GACpC,OACE,kBAAC,IAAD,CACEkR,KAAMn0B,EAAMijB,GACZoF,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5C,EAAY7vB,EAAMijB,IACdjjB,EAAMqoB,SACRroB,EAAMqoB,WAGV0M,UAAU,QAEV,kBAAC,IAAD,CACEpM,WAAYqD,EAAW,MAAQ,SAC/BhE,MAAM,mBACNC,GAAI,EACJ2E,GAAIZ,EAAW,EAAI,EACnB2K,WAAY3K,EAAW,YAAc,OACrCL,YAAY,cAEX3rB,EAAMowB,WAWf,SAAS0I,GAAkB94B,GACzB,MAAgC4vB,cAAhC,mBAAO3X,EAAP,KAAiB4X,EAAjB,KACM7D,EAAW/T,IAAajY,EAAMijB,GACpC,OACE,kBAAC,IAAD,CACEkR,KAAMn0B,EAAMijB,GACZoF,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5C,EAAY7vB,EAAMijB,KAEpB8R,UAAU,OACV1F,aAAa,OACb9G,WAAW,SACXI,WAAW,MACXb,GAAI,EACJC,GAAI,EACJS,GAAI,EACJiH,GAAIzD,EAAW,WAAa,OAC5BhE,MAAOgE,EAAW,WAAa,WAC/B1D,QAAQ,OACR+K,WAAW,OACX1G,OAAQ,CACNoI,UAAW,OACXtF,GAAI,WACJzH,MAAOgE,EAAW,WAAa,aAGhChsB,EAAMowB,UAKb,SAAS2I,GAAW/4B,GAClB,OACE,kBAAC,IAAD,CAAM4nB,QAAQ,MAAMC,MAAM,SAAS+J,GAAI,GACrC,kBAAC,IAAD,CAAKvC,aAAa,OAAOpC,MAAO,GAAIrB,OAAQ,GAAI6D,GAAG,iBAAiB5M,EAAG,GACrE,kBAAC,KAAD,CACEmK,IAAG,+CAA0ChtB,EAAMqM,gBAGvD,kBAAC,IAAD,CAAM0e,WAAW,OAAOvC,GAAI,GACzBxoB,EAAMqM,cAMf,SAAS2sB,KACP,MAAwBpJ,cAAfC,EAAT,oBACMzlB,EAASgd,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAC5ByV,EAAWqH,KACjB,OACE,oCACqB,oBAAlB9c,EAAOgF,OACN,kBAAC,IAAD,CAAM6pB,UAAU,aAAazgB,OAAQ,CAAC,EAAG,KACvC,kBAAC,IAAD,CACEogB,QAAS,EACTjM,OAAQ,CACNwE,eAAgB,OAChB+H,WAAY,UACZlR,MAAO,YAGT,kBAAC,KAAD,CACEgF,IAAKmM,KACLlM,MAAO,EACPrB,OAAO,OACPsC,MAAO,CAAEpjB,OAAQ,gBAGrB,kBAAC,IAAD,CAAUkd,MAAM,eACd,kBAAC,IAAD,CAAMJ,QAAQ,SAASE,GAAI,EAAGC,GAAI,GAChC,kBAAC,IAAD,CAAMW,SAAU,GAAIC,WAAW,OAA/B,YACYve,EAAOI,OAAOkO,SAE1B,kBAACqgB,GAAD,CAAY1sB,YAAajC,EAAOiC,cAChC,kBAACtM,EAAD,CACEq5B,UAAU,aACVl5B,QAAQ,eACRmoB,QAAO,sBAAE,sBAAA9f,EAAA,sEACDsX,EAAS5C,MADR,OAEP4S,EAAY,KAFL,4CAHX,iBAcN,kBAAC9vB,EAAD,CACEG,QAAQ,kBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5S,EAAS7C,QAJb,iBAQE,kBAAC,KAAD,CAAOgQ,IAAKmM,KAAalM,MAAM,OAAOrB,OAAO,MAAMa,YAAa,MAO1E,SAAS4M,KACP,IAAMjvB,EAASgd,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAC5ByV,EAAWqH,KACjB,EAAwB0I,cAAfC,EAAT,oBACA,EAAoCxE,cAA5BlC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQ3B,EAAxB,EAAwBA,QAClB6R,EAASxO,iBAAO,MAEtB,OACE,oCAEE,kBAAC,IAAD,CACE0B,KAAK,IACLpE,QAAQ,WACRE,QAAS,CACP2G,KAAM,OACNC,GAAI,SAGN,kBAAC,IAAD,CACElH,MAAM,kBACNiD,IAAKqO,EACL5M,OAAO,UACPrE,QAASe,GAET,kBAAC,KAAD,OAEF,kBAAC,KAAD,CACED,OAAQA,EACR1B,QAASA,EACTwR,UAAU,QACVM,cAAeD,GAEf,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAY9O,GAAI,IACd,kBAAC,IAAD,CACE5C,QAAQ,SACR6I,eAAe,gBACf7E,OAAO,QAEP,kBAAC,IAAD,CAAMhE,QAAQ,UACZ,kBAACiR,GAAD,CAAkB5V,GAAG,eAAeoF,QAASZ,GAA7C,eAGA,kBAACoR,GAAD,CAAkB5V,GAAG,eAAeoF,QAASZ,GAA7C,eAGmB,oBAAlBrd,EAAOgF,OACN,kBAACypB,GAAD,CAAkB5V,GAAG,UAAUoF,QAASZ,GAAxC,aAGE,MAEa,oBAAlBrd,EAAOgF,OACN,kBAACrP,EAAD,CACEG,QAAQ,eACRmoB,QAAO,sBAAE,sBAAA9f,EAAA,sEACDsX,EAAS5C,MADR,OAEP4S,EAAY,KAFL,2CAIT5H,GAAI,GANN,qBAWA,kBAACloB,EAAD,CACEG,QAAQ,kBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5S,EAAS7C,OAEXiL,GAAI,GANN,iBASE,kBAAC,KAAD,CACE+E,IAAKmM,KACLlM,MAAM,OACNrB,OAAO,MACPa,YAAa,WAW/B,kBAAC,IAAD,CACED,KAAK,IACLpE,QAAQ,WACRE,QAAS,CACP2G,KAAM,OACNC,GAAI,SAGN,kBAAC4J,GAAD,CAAmB7V,GAAG,gBACpB,kBAAC,IAAD,CAAK+E,MAAM,mBACT,kBAAC,KAAD,CAAc/nB,KAAM,MAEtB,kBAAC,IAAD,CAAMuoB,GAAI,GAAV,gBAEiB,oBAAlBpe,EAAOgF,OACN,oCACE,kBAAC0pB,GAAD,CAAmB7V,GAAG,gBACpB,kBAAC,IAAD,CAAK+E,MAAM,mBACT,kBAAC,KAAD,CAAe/nB,KAAM,MAEvB,kBAAC,IAAD,CAAMuoB,GAAI,GAAV,gBAEF,kBAACsQ,GAAD,CAAmB7V,GAAG,WACpB,kBAAC,IAAD,CAAK+E,MAAM,cACT,kBAAC,IAAD,CAAM/nB,KAAM,GAAIwoB,YAAY,OAE9B,kBAAC,IAAD,CAAMD,GAAI,GAAV,eAGF,KACJ,kBAAC,IAAD,CACED,WAAW,SACXP,MAAM,aACNyE,YAAa,EACbN,WAAY,EACZwK,WAAW,YACXhL,YAAY,kBAEZ,kBAACqN,GAAD,SAmDKQ,OA5CR,WACL,MAAwB5J,cAAfC,EAAT,oBAEA,OACE,kBAAC,IAAD,CACE5C,MAAM,OACNwC,GAAG,cACHC,SAAU,EACVK,SAAU,EACVxH,WAAW,SACXkI,eAAe,iBAEf,kBAAC,KAAD,CACEnI,QAAS,CACP2G,KAAM,OACNC,GAAI,SAENoD,KAAK,OACLtC,UAAU,MACVhD,IAAK2H,KACLtM,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5C,EAAY,iBAEdnD,OAAO,YAET,kBAAC,KAAD,CACEpE,QAAS,CACP2G,KAAM,QACNC,GAAI,QAENmD,KAAK,OACLrF,IAAKyM,KACLpR,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACF5C,EAAY,iBAEdnD,OAAO,YAET,kBAAC2M,GAAD,QClVN,SAASK,GAAmBnQ,GAC1B,OAAQA,EAAana,QACnB,IAAK,UACH,MAAO,OACT,IAAK,UACH,MAAO,UACT,IAAK,QACH,MAAO,QACT,QACE,MAAO,QAIE,SAASuqB,KACtB,IAAMC,EAAQC,qBACRha,EAAWqH,KACXV,EAAgBY,IACpB,SAAA7W,GAAK,OACHA,EAAMiW,cAAc1b,QAAO,gBAAGoT,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OAA0BD,IAASC,OAChE1S,IAAEquB,SAoBJ,OAjBAjQ,qBAAU,WAAO,IAAD,gBACWrD,GADX,yBACL+C,EADK,QAEZ1J,EAAS9B,GAAoBwL,EAAatL,YAC1C2b,EAAM,CACJ9xB,MAAOyhB,EAAazhB,MACpBtB,YAAa+iB,EAAa/iB,YAC1B4I,OAAQsqB,GAAmBnQ,GAC3B7jB,SAAU,KACVq0B,YAAY,EACZ7G,SAAU,eACV8G,gBAPI,WAQFna,EAAS/B,GAAiByL,EAAatL,gBAV7C,2BAAyC,IAD3B,iCAeb,CAACuI,EAAe3G,EAAU+Z,IAEtB,qC,cCtBT,SAASK,GAAkBj6B,GACzB,OACE,kBAAC,IAAD,CAAMswB,EAAE,OAAO9D,KAAK,IAAI5E,QAAQ,SAASC,MAAM,UAC7C,kBAAC,IAAD,CACEC,GAAI,GACJC,GAAI,GACJ0H,GAAG,WACHvH,UAAU,SACVL,MAAM,SACNwH,aAAa,MACbzH,QAAQ,SACRc,SAAS,KACTV,MAAM,WACNwC,GAAI,IAEJ,kBAAC,KAAD,MACA,kBAAC,IAAD,CAAM7B,WAAW,MAAMmE,GAAI,GACxB9sB,EAAM6zB,UAAY,6BAA+B,0BAa7C,SAASqG,GAAT,GAIU,IAHvBl0B,EAGsB,EAHtBA,OACAiJ,EAEsB,EAFtBA,YAEsB,IADtB4kB,iBACsB,SACdrpB,EAAW4c,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAA9BI,OACFqV,EAAWqH,KACb/W,EAAqBmQ,OAAOC,KAAKtR,GAAa,GAUlD,GARA4a,qBAAU,WACJ1Z,GACF0P,EAASpR,GAAyB0B,IAAqBgS,MAAK,kBAC1DtC,EAAS7Q,GAAqBmB,SAGjC,CAAC0P,EAAU1P,KAETA,EACH,OACE,kBAAC8pB,GAAD,CAAmBpG,UAAWA,IAIlC,IAAMhS,EAAa5S,EAAYkB,GAC/B,IAAK0R,EACH,OACE,kBAACoY,GAAD,CAAmBpG,UAAWA,IAIlC,IAAKhS,EAAW9T,OACd,OACE,kBAAC,IAAD,CAAM6Z,QAAQ,SAASC,MAAM,SAAS2E,KAAK,IAAIM,GAAI,IACjD,kBAAC,KAAD,CAAS7sB,KAAK,KAAKgoB,GAAI,EAAGD,MAAM,aAChC,kBAAC,IAAD,CAAS/nB,KAAK,KAAKioB,UAAU,SAASF,MAAM,YAA5C,eAON,GAA0B,OAAtBnG,EAAWvX,OACb,OACE,kBAAC2vB,GAAD,CAAmBpG,UAAWA,IAIlC,IAAMvpB,EAASuX,EAAWvX,OAE1B,OAAsB,IAAlBA,EAAOsC,OAEP,kBAACqtB,GAAD,CAAmBpG,UAAWA,IAKhC,kBAAC,IAAD,CACEjM,QAAQ,SACRoJ,EAAE,OACFV,EAAE,OACF9D,KAAK,IACLiD,GAAG,mBACHqE,gBAAgB,MAChBC,gBAAgB,kBAChB1C,UAAU,SACVjJ,QAAQ,SAER,kBAAC,IAAD,CAAMR,QAAQ,OACZ,kBAAC,IAAD,CAAM6I,eAAe,aAAaxD,MAAM,QACtC,kBAACltB,EAAD,CACEG,QAAQ,wBACRmoB,QAAS,SAAA3kB,GACPA,EAAE+uB,iBACFlT,OAAOyU,QAAQC,SAGjB,kBAAC,IAAD,CAAKjM,MAAM,gBACT,kBAAC,KAAD,CAAa/nB,KAAM,GAAIwoB,YAAY,SAIzC,kBAAC,IAAD,CAAMZ,MAAM,SAAS2H,SAAS,UAC5B,kBAAC,KAAD,CAAOvC,MAAM,OACXD,IAAG,+CAA0CnL,EAAW9gB,WAE1D,kBAAC,IAAD,CAAMunB,QAAQ,QAAQiL,WAAW,SAAS/D,SAAS,SAASgE,aAAa,WAAWW,KAAI,mBAAc3pB,EAAOkO,QAAU,KAAKtG,QAAQ,WAAY,IAAxD,mBAAsEpM,IAC5J,kBAAC,IAAD,CAAS0iB,SAAS,SAAS8G,SAAS,SAASgE,aAAa,WAAWU,aAAa,UAAUluB,EAA5F,OAAyG,6BAAK,yBAAKgnB,IAAKiK,KAAItD,IAAI,GAAG1G,MAAM,OAAOrB,OAAO,OAAOsC,MAAO,CAAE5F,QAAS,uBAKtL,kBAAC,IAAD,CACEV,QAAQ,SACRoJ,EAAE,OACFV,EAAE,OACFxI,GAAI,CAAEmH,KAAM,EAAGC,GAAI,IACnB1C,KAAK,KAEL,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,eACA,kBAAC,KAAD,kBAGF,kBAAC,KAAD,KAEE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAYhK,QAAS,CAAE8R,GAAI,EAAGpF,GAAI,EAAGqF,GAAI,EAAGC,GAAI,GAAKC,IAAK,EAAGlJ,GAAI,GAC9DjhB,EACEQ,QACC,kBAAG/C,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACED,IAAU/B,KACD,OAARgC,QAAQ,IAARA,GAAA,UAAAA,EAAUvB,gBAAV,eAAoBqF,MAAK,SAAA7K,GAAO,OAAIA,IAAY8G,QACvC,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUhC,UAAW+B,MAE1BgC,KAAI,SAAAuB,GACH,OACE,kBAAC2nB,GAAD,eACEjxB,IAAK6f,EAAW9gB,QAAUuK,EAAMzJ,GAChCd,QAAS8gB,EAAW9gB,QACpByJ,OAAQA,GACJc,SAOhB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAYkX,QAAS,CAAE8R,GAAI,EAAGpF,GAAI,EAAGqF,GAAI,EAAGC,GAAI,GAAKC,IAAK,EAAGlJ,GAAI,GAC9DjhB,EACEQ,QAAO,gBAAGpG,EAAH,EAAGA,KAAH,OAAkB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMN,UAAW4B,KACtC+D,KAAI,SAAAuB,GACH,OACE,kBAAC2nB,GAAD,eACEjxB,IAAK6f,EAAW9gB,QAAUuK,EAAMzJ,GAChCd,QAAS8gB,EAAW9gB,QACpByJ,OAAQA,GACJc,aC1Lb,SAAS6uB,GAAT,GAAkD,IAA/Bn0B,EAA8B,EAA9BA,OAC1BoE,EAASgd,IAAY,SAAAha,GAAC,OAAIA,EAAEhD,UAC5B6E,EAAcmY,IAAY,SAAAha,GAAC,OAAIA,EAAE6B,eAC/BxE,EAAgB2c,IAAY,SAAAha,GAAC,OAAIA,EAAE3C,eAAnCA,YACFoV,EAAWqH,KAOjB2C,qBAAU,WACRhK,EAASpQ,GAAwBhF,EAAY1J,YAC5C,CAAC0J,EAAY1J,QAAS8e,IAEzB,IAAMua,EAAsB,GAwB5B,OAtBK3vB,EAAYH,QACfG,EAAYH,OACXQ,QACC,SAAAQ,GAAK,aACE,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOA,aAAP,eAAcvD,UAAd,OAAyB/B,QAAzB,IAAyBA,IAAUoE,EAAOiC,gBAE7CtC,KAAI,SAAAuB,GAAU,IAAD,gBAEZ,OADA8uB,EAAmB,OAAC9uB,QAAD,IAACA,GAAD,UAACA,EAAOsC,iBAAR,iBAAC,EAAkB3L,aAAnB,iBAAC,EAAyBqC,iBAA1B,iBAAC,EAAoCN,kBAArC,aAAC,EAAgDS,aAAewK,EAAYA,YAAZ,OAAwB3D,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAOsC,iBAA/B,iBAAwB,EAAkB3L,aAA1C,iBAAwB,EAAyBqC,iBAAjD,iBAAwB,EAAoCN,kBAA5D,aAAwB,EAAgDS,aACpJ,QAGX6b,OAAOC,KAAKtR,EAAYA,aACrBnE,QACC,SAAA9I,GAAG,OACDiN,EAAYA,YAAYjN,GAAKf,QAAQF,WAArC,OACCiF,QADD,IACCA,IAAUoE,EAAOiC,gBAErBtC,KAAI,SAAAswB,GAEH,OADAD,EAAoBC,GAAQprB,EAAYA,YAAYorB,GAC7C,QAIT,kBAAC,IAAD,CACE7N,KAAK,IACL8D,EAAE,OACFlE,UAAU,IACVxE,QAAS,CACPqH,KAAM,SACNC,GAAI,QAGN,kBAACgL,GAAD,CAAgBl0B,OAAQA,EAAQiJ,YAAamrB,KC3CpC,SAASE,KACtB,IAAMza,EAAWqH,KAGblL,EAFUoL,IAAY,SAAAha,GAAC,OAAIA,KAEMhD,OAAO4R,yBAgB5C,OANA6N,qBAAU,WACH7N,GACH6D,EAAShD,QAEV,CAACb,EAA0B6D,IAG5B,kBAAC,IAAD,CAAMmX,IAAI,WAAW1G,EAAE,OAAOU,EAAE,QAC9B,kBAAC,IAAD,CAAMP,eAAe,gBAAgBxD,MAAM,OAAOrF,QAAQ,UACxD,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhlB,KAAK,KACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAACiuB,GAAD,OAEF,kBAAC,IAAD,CAAOjuB,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,qBACT,gBAAGoD,EAAH,EAAGA,OAAH,OAAgB,kBAACm0B,GAAD,CAASn0B,OAAQA,OAEpC,kBAAC,IAAD,CAAOpD,KAAK,iCACT,gBAAG0R,EAAH,EAAGA,gBAAH,OACC,kBAACsf,GAAD,CAAmB7yB,QAASuT,EAAiBuf,WAAW,OAG5D,kBAAC,IAAD,CAAOjxB,KAAK,gDACT,gBAAG0R,EAAH,EAAGA,gBAAiB3M,EAApB,EAAoBA,QAApB,OACC,kBAAC,GAAD,CACE2M,gBAAiBA,EACjB3M,QAASwD,SAASxD,SAK1B,kBAACgyB,GAAD,QCzDYY,QACW,cAA7Bhb,OAAOtH,SAASuiB,UAEe,UAA7Bjb,OAAOtH,SAASuiB,UAEhBjb,OAAOtH,SAASuiB,SAASC,MACvB,2D,wBC4JAC,GAAQC,aAAY,CACxBv6B,OAAQ,CACNw6B,OAAQ,CACN,aAAc,CACZhP,OAAQ,UAIdiP,OAAQ,CACNC,MAAO,CACLC,MAAO,UACP7B,WAAY,UACZ8B,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,UAAW,UACXC,IAAK,YAGTC,WAAY,CACVhQ,OA7LW,CACbiQ,SAAU,CACRC,cAAe,CACblM,GAAI,aACJ9D,YAAa,aACb0D,aAAc,OACdrH,MAAO,QACPqL,WAAY,OACZuI,QAAS,CACPvP,QAAS,MACToD,GAAI,cAEN9C,OAAQ,CACNN,QAAS,QAGbwP,sBAAuB,CACrBpM,GAAI,aACJ9D,YAAa,aACb0D,aAAc,OACdrH,MAAO,QACPqE,QAAS,MACTgH,WAAY,OACZuI,QAAS,CACPnM,GAAI,eAGRqM,mBAAoB,CAClBrM,GAAI,cACJ9D,YAAa,aACb0D,aAAc,OACdD,YAAa,MACbpH,MAAO,aACPqL,WAAY,OACZuI,QAAS,CACPvP,QAAS,OAEXM,OAAQ,CAGNN,QAAS,QAGb0P,sBAAuB,CACrBtM,GAAI,cACJ9D,YAAa,aACb0D,aAAc,OACdrH,MAAO,aACPqL,WAAY,OACZuI,QAAS,CACPvP,QAAS,OAEXM,OAAQ,CACN8C,GAAI,aACJzH,MAAO,UAGXgU,gBAAiB,CACfvM,GAAI,kBACJzH,MAAO,mBACP2D,YAAa,kBACb0D,aAAc,OACdD,YAAa,MACbiE,WAAY,OACZuI,QAAS,CACPvP,QAAS,MACToD,GAAI,mBAEN9C,OAAQ,CACN8C,GAAI,kBACJzH,MAAO,mBACPqE,QAAS,QAGb4P,qBAAsB,CACpBxM,GAAI,OACJ9D,YAAa,kBACb0D,aAAc,OACdD,YAAa,MACbpH,MAAO,kBACPqL,WAAY,OACZuI,QAAS,CACPvP,QAAS,MACToD,GAAI,mBAEN9C,OAAQ,CACN8C,GAAI,kBACJzH,MAAO,qBAGXkU,aAAc,CACZzM,GAAI,OACJ9D,YAAa,YACb0D,aAAc,OACdD,YAAa,MACbpH,MAAO,YACPqL,WAAY,OACZuI,QAAS,CACPvP,QAAS,MACToD,GAAI,aAEN9C,OAAQ,CACN8C,GAAI,YACJzH,MAAO,UAGXmU,eAAgB,CACd1M,GAAI,WACJzH,MAAO,WACPqH,aAAc,OACd1C,OAAQ,CACN8C,GAAI,WACJzH,MAAO,YAET4T,QAAS,CACPnM,GAAI,WACJzH,MAAO,eA0EXoU,KApES,CACXV,SAAU,CACRC,cAAe,CACbpT,WAAY,SACZkH,GAAI,aACJ9D,YAAa,aACb0D,aAAc,MACdrH,MAAO,QACPM,QAAS,cACTI,SAAU,OACVC,WAAY,MACZiD,OAAQ,GACR6E,eAAgB,SAChB4L,WAAY,MACZ3M,SAAU,EACV2D,WAAY,OACZ1G,OAAQ,CACN8C,GAAI,QACJzH,MAAO,aACPmJ,eAAgB,SAGpB0K,sBAAuB,CACrBtT,WAAY,SACZkH,GAAI,WACJJ,aAAc,MACdrH,MAAO,WACPM,QAAS,cACTI,SAAU,OACVC,WAAY,MACZiD,OAAQ,GACR6E,eAAgB,SAChB4L,WAAY,MACZ3M,SAAU,EACV2D,WAAY,OACZ1G,OAAQ,CACN3E,MAAO,WACPmJ,eAAgB,WAgCpBmL,MAAO,CACLZ,SAAU,CACRa,QAAS,CACPC,MAAO,CACLnN,aAAc,MACdoN,OAAQ,CACNrJ,UAAW,8CAMrBsJ,SAAU,CACRhB,SAAU,CACRa,QAAS,CACPlN,aAAc,MACdoN,OAAQ,CACNrJ,UAAW,6CAKnBuJ,WAAY,CACVjB,SAAU,CACRkB,QAAS,CACP5U,MAAO,WACP2E,OAAQ,CAAE3E,MAAO,cACjB6U,UAAW,CAAE7U,MAAO,cACpByU,OAAQ,CAAEzU,MAAO,iBAIvB8U,SAAU,CACRpB,SAAU,CACRkB,QAAS,CACPH,OAAQ,CACNhN,GAAI,kBACJzH,MAAO,kBAMjB+U,MAAO,CACLtS,KAAM,uBACNuS,QAAS,uBACTC,KAAM,4BAERC,YAAa,CACXC,OAAQ,IACRC,KAAM,OAIV,SAASC,KACP,OACE,kBAAC,IAAD,CAAU3W,MAAOA,IACf,kBAAC,KAAD,CAAgBgU,MAAOA,IACrB,kBAACJ,GAAD,QAMRgD,IAASC,OAAO,kBAACF,GAAD,MAAUG,SAASC,eAAe,SDhI5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzb,MAAK,SAAA0b,GACJA,EAAaC,gBAEdC,OAAM,SAAAxvB,GACLtB,QAAQsB,MAAMA,EAAMQ,a,mBE9I5BlP,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.5156ff5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/link-icon.8cce1dcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-logo.d8992012.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.1a72e9f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/header-logo.a9dd48a8.svg\";","import React from 'react';\nimport {\n  Button,\n  ButtonProps,\n  Link,\n  LinkProps,\n  MenuButton,\n  MenuButtonProps,\n  MenuItem,\n  MenuItemProps,\n  useStyleConfig\n} from '@chakra-ui/react';\n\n// Common Minter Components - Button & Link referencing branded variants\n\nexport function MinterButton(\n  props: ButtonProps & { size?: string; variant?: string }\n) {\n  const { size, variant, ...rest } = props;\n  const styles = useStyleConfig('Button', { size, variant });\n  return <Button sx={styles} {...rest} />;\n}\n\nexport function MinterLink(\n  props: LinkProps & { size?: string; variant?: string }\n) {\n  const { size, variant, ...rest } = props;\n  const styles = useStyleConfig('Link', { size, variant });\n  return <Link sx={styles} {...rest} />;\n}\n\nexport function MinterMenuButton(\n  props: MenuButtonProps & { variant?: string }\n) {\n  const { variant, ...rest } = props;\n  const styles = useStyleConfig('MenuButton', { variant });\n  return <MenuButton sx={styles} {...rest} />;\n}\n\nexport function MinterMenuItem(props: MenuItemProps & { variant?: string }) {\n  const { variant, ...rest } = props;\n  const styles = useStyleConfig('MenuItem', { variant });\n  return <MenuItem sx={styles} {...rest} />;\n}\n","/* eslint-disable no-redeclare */\nimport * as t from 'io-ts';\nimport * as e from 'fp-ts/Either';\nimport merge from \"ts-deepmerge\";\n\n//// Contracts\n\nexport const ContractRow = <S extends t.Mixed>(storage: S) =>\n  t.type({\n    type: t.string,\n    kind: t.string,\n    tzips: t.union([t.array(t.string), t.undefined]),\n    address: t.string,\n    balance: t.number,\n    creator: t.type({\n      address: t.string\n    }),\n    numContracts: t.number,\n    numDelegations: t.number,\n    numOriginations: t.number,\n    numTransactions: t.number,\n    numReveals: t.number,\n    numMigrations: t.number,\n    firstActivity: t.number,\n    firstActivityTime: t.string,\n    lastActivity: t.number,\n    lastActivityTime: t.string,\n    storage: storage\n  });\n\n//// Generic BigMaps\n\nexport const BigMapRow = <K extends t.Mixed, V extends t.Mixed>(props: {\n  key: K;\n  value: V;\n}) =>\n  t.type({\n    id: t.number,\n    active: t.boolean,\n    hash: t.string,\n    key: props.key,\n    value: props.value,\n    firstLevel: t.number,\n    lastLevel: t.number,\n    updates: t.number\n  });\n\nexport const BigMapUpdateRow = <K extends t.Mixed, V extends t.Mixed>(content: {\n  key: K;\n  value: V;\n}) =>\n  t.type({\n    id: t.number,\n    level: t.number,\n    timestamp: t.string,\n    bigmap: t.number,\n    contract: t.intersection([\n      t.partial({ alias: t.string }),\n      t.type({ address: t.string })\n    ]),\n    path: t.string,\n    action: t.string,\n    content: t.type({ hash: t.string, key: content.key, value: content.value })\n  });\n\n//// FA2 BigMaps\n\nexport type AssetMetadataBigMap = t.TypeOf<typeof AssetMetadataBigMap>;\nexport const AssetMetadataBigMap = t.array(\n  BigMapRow({ key: t.string, value: t.string })\n);\n\nexport type LedgerBigMap = t.TypeOf<typeof LedgerBigMap>;\nexport const LedgerBigMap = t.array(\n  BigMapRow({ key: t.string, value: t.string })\n);\n\nexport type TokenMetadataBigMap = t.TypeOf<typeof TokenMetadataBigMap>;\nexport const TokenMetadataBigMap = t.array(\n  BigMapRow({\n    key: t.string,\n    value: t.type({\n      token_id: t.string,\n      token_info: t.type({\n        '': t.string\n      })\n    })\n  })\n);\n\n//// FixedPriceSale BigMaps\n\nfunction sequenceCodecs<A, B, O, P, H, I>(\n  inputCodec: t.Type<A, O, H>,\n  transform: (decoded: A) => I,\n  outputCodec: t.Type<B, P, I>,\n  name: string = outputCodec.name\n): t.Type<B, P, H> {\n  return new t.Type(\n    name,\n    outputCodec.is,\n    (input, context) =>\n      e.chain((decoded: A) => {\n        return outputCodec.validate(transform(decoded), context);\n      })(inputCodec.validate(input, context)),\n    outputCodec.encode\n  );\n}\n\n// Compatibility: Some fixed_price_sale contract bigmaps use a `sale_seller`\n// field while others use a `seller` field. This decoder conforms all bigmaps\n// to use the `sale_seller` field. The decoder receives an \"input\" codec that\n// describes the `sale_seller` and `seller` fields as optional strings. This\n// initial validation allows us to reference these (possibly undefined) fields\n// and pass them to the \"output\" codec for validation via a transformation\n// function.\n//\n// In this case the transformation defines the `sale_seller` field as one of the\n// two input fields. Note the resulting field could be undefined; however, the\n// \"output\" codec will fail if this is the case.\n\nexport type FixedPriceSaleBigMapKey = t.TypeOf<typeof FixedPriceSaleBigMapKey>;\nconst legacySaleV1 = t.type({\n    sale_seller: t.string,\n    sale_token: t.type({\n      token_for_sale_address: t.string,\n      token_for_sale_token_id: t.string\n    })\n  });\nconst legacySaleV2 = t.type({\n    seller: t.string,\n    sale_token: t.type({\n      token_for_sale_address: t.string,\n      token_for_sale_token_id: t.string\n    })\n  });\nconst saleV3 = t.type({\n  sale_data: t.type({\n    amount: t.string,\n    price: t.string,\n    sale_token: t.type({\n      fa2_address: t.string,\n      token_id: t.string\n    }),\n  }),\n  seller: t.string\n});\nconst sale = t.intersection([\n  saleV3,\n  t.partial({ isLegacy: t.boolean })\n]);\n\nexport const FixedPriceSaleBigMapKey = sequenceCodecs(\n  t.union([ legacySaleV1, legacySaleV2, saleV3 ]),\n  decoded => ({\n    ...decoded,\n    sale_data: saleV3.is(decoded) ? decoded.sale_data : {\n      amount: \"1\",\n      price: \"0\",\n      sale_token: {\n        fa2_address: decoded.sale_token.token_for_sale_address,\n        token_id: decoded.sale_token.token_for_sale_token_id\n      }\n    },\n    seller: (saleV3.is(decoded) || legacySaleV2.is(decoded)) ? decoded.seller : decoded.sale_seller\n  }),\n  sale\n);\n\nconst FixedPriceSaleBigMapRowV1 = BigMapRow({\n  key: FixedPriceSaleBigMapKey,\n  value: t.string\n});\n\nconst FixedPriceSaleBigMapRowV2 = BigMapRow({\n  key: t.string,\n  value: FixedPriceSaleBigMapKey\n});\n\nexport type FixedPriceSaleBigMap = t.TypeOf<typeof FixedPriceSaleBigMap>;\nexport const FixedPriceSaleBigMap = t.array(sequenceCodecs(\n  t.union([ FixedPriceSaleBigMapRowV1, FixedPriceSaleBigMapRowV2 ]),\n  row => (FixedPriceSaleBigMapRowV1.is(row) ? merge(\n      row,\n      { key: row.id.toString(), value: row.key },\n      { value: { isLegacy: true, sale_data: { price: row.value }}}\n    ) : merge(row, { value: { isLegacy: false }})\n  ),\n  FixedPriceSaleBigMapRowV2\n));\n\n// Compatibility: fixed_price_sale contracts may have different storage\n// depending on which version was originated. Older versions only contain a\n// number referencing a `sales` bigmap, while newer versions store this number\n// in a `sales` field. For example:\n//   Legacy version:\n//     42\n//   Current version:\n//     { sales: 42 }\n//\n// This decoder conforms both storage schemas into the current version.\n\nexport type FixedPriceSaleStorage = t.TypeOf<typeof FixedPriceSaleStorage>;\nexport const FixedPriceSaleStorage = sequenceCodecs(\n  t.union([t.number, t.type({ sales: t.number })]),\n  sales => (t.number.is(sales) ? { sales } : sales),\n  t.type({ sales: t.number })\n);\n\n//// NFT Metadata\n\nexport type NftMetadataFormat = t.TypeOf<typeof NftMetadataFormat>;\nexport const NftMetadataFormat = t.partial({\n  uri: t.string,\n  hash: t.string,\n  mimeType: t.string,\n  fileSize: t.number,\n  fileName: t.string,\n  duration: t.string,\n  dimensions: t.partial({\n    value: t.string,\n    unit: t.string\n  }),\n  dataRate: t.partial({\n    value: t.number,\n    unit: t.string\n  })\n});\n\nexport type NftMetadataAttribute = t.TypeOf<typeof NftMetadataAttribute>;\nexport const NftMetadataAttribute = t.intersection([\n  t.type({ name: t.string, value: t.string }),\n  t.partial({ type: t.string })\n]);\n\nexport type NftMetadata = t.TypeOf<typeof NftMetadata>;\nexport const NftMetadata = t.partial({\n  '': t.string,\n  name: t.string,\n  minter: t.string,\n  symbol: t.string,\n  decimals: t.number,\n  rightUri: t.string,\n  artifactUri: t.string,\n  displayUri: t.string,\n  thumbnailUri: t.string,\n  externalUri: t.string,\n  description: t.string,\n  creators: t.array(t.string),\n  contributors: t.array(t.string),\n  publishers: t.array(t.string),\n  date: t.string,\n  blocklevel: t.number,\n  type: t.string,\n  tags: t.array(t.string),\n  genres: t.array(t.string),\n  language: t.string,\n  identifier: t.string,\n  rights: t.string,\n  isTransferable: t.boolean,\n  isBooleanAmount: t.boolean,\n  shouldPreferSymbol: t.boolean,\n  formats: t.array(NftMetadataFormat),\n  attributes: t.array(NftMetadataAttribute)\n});\n\nexport type NftSale = t.TypeOf<typeof NftSale>;\nexport const NftSale = t.type({\n  id: t.number,\n  seller: t.string,\n  price: t.number,\n  mutez: t.number,\n  type: t.string,\n  saleToken: t.type({\n    address: t.string,\n    tokenId: t.number\n  }),\n  saleId: t.number\n});\n\nexport type Nft = t.TypeOf<typeof Nft>;\nexport const Nft = t.intersection([\n  t.type({\n    id: t.number,\n    title: t.string,\n    owner: t.string,\n    description: t.string,\n    artifactUri: t.string,\n    metadata: NftMetadata\n  }),\n  t.partial({\n    sale: NftSale,\n    address: t.string\n  })\n]);\n\n//// Contract Metadata\n\nexport const AssetContractMetadata = t.type({\n  name: t.string\n});\n\nexport type AssetContract = t.TypeOf<typeof AssetContract>;\nexport const AssetContract = t.intersection([\n  ContractRow(t.unknown),\n  t.type({\n    metadata: AssetContractMetadata\n  })\n]);\n","/* eslint-disable no-redeclare */\nimport { Buffer } from 'buffer';\nimport * as t from 'io-ts';\nimport _ from 'lodash';\nimport { SystemWithToolkit, SystemWithWallet } from '../system';\nimport { TzKt, Params } from '../service/tzkt';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { compact } from 'fp-ts/lib/Array';\nimport { getRight } from 'fp-ts/lib/Option';\nimport * as D from './decoders';\n\nfunction fromHexString(input: string) {\n  if (/^([A-Fa-f0-9]{2})*$/.test(input)) {\n    return Buffer.from(input, 'hex').toString();\n  }\n  return input;\n}\n\n//// Data retrieval and decoding functions\n\nasync function getAssetMetadataBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.AssetMetadataBigMap> {\n  const path = 'metadata';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.LedgerBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getAssetMetadata` response');\n  }\n  return decoded.right;\n}\n\nasync function getLedgerBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.LedgerBigMap> {\n  const path = 'assets.ledger';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.LedgerBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getLedger` response');\n  }\n  return decoded.right;\n}\n\nasync function getTokenMetadataBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.TokenMetadataBigMap> {\n  const path = 'assets.token_metadata';\n  const data = await tzkt.getContractBigMapKeys(address, path);\n  const decoded = D.TokenMetadataBigMap.decode(data);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getTokenMetadata` response');\n  }\n  return decoded.right;\n}\n\nasync function getFixedPriceSalesBigMap(\n  tzkt: TzKt,\n  address: string\n): Promise<D.FixedPriceSaleBigMap> {\n  const fixedPriceStorage = D.FixedPriceSaleStorage.decode(\n    await tzkt.getContractStorage(address)\n  );\n  if (isLeft(fixedPriceStorage)) {\n    throw Error('Failed to decode `getFixedPriceSales` bigMap ID');\n  }\n  const fixedPriceBigMapId = fixedPriceStorage.right.sales;\n  const fixedPriceSales = await tzkt.getBigMapKeys(fixedPriceBigMapId);\n  const decoded = D.FixedPriceSaleBigMap.decode(fixedPriceSales);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getFixedPriceSales` response');\n  }\n  return decoded.right;\n}\n\nasync function getBigMapUpdates<K extends t.Mixed, V extends t.Mixed>(\n  tzkt: TzKt,\n  params: Params,\n  content: { key: K; value: V }\n) {\n  const bigMapUpdates = await tzkt.getBigMapUpdates(params);\n  const decoder = t.array(D.BigMapUpdateRow(content));\n  const decoded = decoder.decode(bigMapUpdates);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getBigMapUpdates` response');\n  }\n  return decoded.right;\n}\n\nasync function getContracts<S extends t.Mixed>(\n  tzkt: TzKt,\n  params: Params,\n  storage: S\n) {\n  const contracts = await tzkt.getContracts(params);\n  const contractsArray = t.array(t.unknown).decode(contracts);\n  if (isLeft(contractsArray)) {\n    throw Error('Failed to decode `getContracts` response');\n  }\n  const decodedArray = contractsArray.right.map(D.ContractRow(storage).decode);\n  return compact(decodedArray.map(getRight));\n}\n\nasync function getContract<S extends t.Mixed>(\n  tzkt: TzKt,\n  address: string,\n  params: Params,\n  storage: S\n) {\n  const contract = await tzkt.getContract(address, params);\n  const decoded = D.ContractRow(storage).decode(contract);\n  if (isLeft(decoded)) {\n    throw Error('Failed to decode `getContracts` response');\n  }\n  return decoded.right;\n}\n\n//// Main query functions\n\nexport async function getContractNfts(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<D.Nft[]> {\n  const ledger = await getLedgerBigMap(system.tzkt, address);\n  const tokens = await getTokenMetadataBigMap(system.tzkt, address);\n  const mktAddress = system.config.contracts.marketplace.fixedPrice.tez;\n  const tokenSales = await getFixedPriceSalesBigMap(system.tzkt, mktAddress);\n  const activeSales = tokenSales.filter(sale => sale.active);\n\n  // Sort by token id - descending\n  const tokensSorted = [...tokens].sort((a,b)=>- (Number.parseInt(a.value.token_id, 10) - Number.parseInt(b.value.token_id, 10)));\n\n  return Promise.all(\n    tokensSorted.map(\n      async (token): Promise<D.Nft> => {\n        const { token_id: tokenId, token_info: tokenInfo } = token.value;\n\n        // TODO: Write decoder function for data retrieval\n        const decodedInfo = _.mapValues(tokenInfo, fromHexString) as any;\n        const resolvedInfo = await system.resolveMetadata(\n          decodedInfo[''],\n          address\n        );\n        const metadata = { ...decodedInfo, ...resolvedInfo.metadata };\n\n        const saleData = activeSales.find(\n          v =>\n            v.value.sale_data.sale_token.fa2_address === address &&\n            v.value.sale_data.sale_token.token_id === tokenId\n        );\n\n        const sale = saleData && {\n          id: saleData.id,\n          seller: saleData.value.seller,\n          price: Number.parseInt(saleData.value.sale_data.price, 10) / 1000000,\n          mutez: Number.parseInt(saleData.value.sale_data.price, 10),\n          saleToken: {\n            address: saleData.value.sale_data.sale_token.fa2_address,\n            tokenId: Number.parseInt(saleData.value.sale_data.sale_token.token_id)\n          },\n          saleId: saleData.value.isLegacy ? 0 : Number.parseInt(saleData.key),\n          type: saleData.value.isLegacy ? 'fixedPriceLegacy' : 'fixedPrice'\n        };\n\n        return {\n          id: parseInt(tokenId, 10),\n          owner: ledger.find(e => e.key === tokenId)?.value!,\n          title: metadata.name,\n          description: metadata.description,\n          artifactUri: metadata.artifactUri,\n          metadata: metadata,\n          sale\n        };\n      }\n    )\n  );\n}\n\nexport async function getNftAssetContract(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<D.AssetContract> {\n  const contract = await getContract(system.tzkt, address, {}, t.unknown);\n  const metaBigMap = await getAssetMetadataBigMap(system.tzkt, address);\n  const metaUri = metaBigMap.find(v => v.key === '')?.value;\n  if (!metaUri) {\n    throw Error(`Could not extract metadata URI from ${address} storage`);\n  }\n\n  const { metadata } = await system.resolveMetadata(\n    fromHexString(metaUri),\n    address\n  );\n  const decoded = D.AssetContractMetadata.decode(metadata);\n\n  if (isLeft(decoded)) {\n    throw Error('Metadata validation failed');\n  }\n  return { ...contract, metadata: decoded.right };\n}\n\nexport async function getWalletNftAssetContracts(\n  system: SystemWithWallet\n): Promise<D.AssetContract[]> {\n  return await getNftAssetContracts(system, system.tzPublicKey);\n};\n\nexport async function getNftAssetContracts(\n  system: SystemWithWallet,\n  tzPublicKey: string\n): Promise<D.AssetContract[]> {\n  const contracts = await getContracts(\n    system.tzkt,\n    {\n      creator: tzPublicKey,\n      includeStorage: 'true'\n    },\n    t.unknown\n  );\n\n  const addresses = _.uniq(\n    contracts\n      .filter(c => c.kind === 'asset' && c.tzips?.includes('fa2'))\n      .map(c => c.address)\n  );\n\n  const results: D.AssetContract[] = [];\n\n  if (addresses.length === 0) {\n    return results;\n  }\n\n  const assetBigMapRows = (\n    await getBigMapUpdates(\n      system.tzkt,\n      {\n        path: 'metadata',\n        action: 'add_key',\n        'contract.in': addresses.join(','),\n        limit: '10000'\n      },\n      {\n        key: t.string,\n        value: t.string\n      }\n    )\n  ).filter(v => v.content.key === '');\n\n  for (const row of assetBigMapRows) {\n    const contract = contracts.find(c => c.address === row.contract.address);\n    if (!contract) {\n      continue;\n    }\n    try {\n      const metaUri = row.content.value;\n      const { metadata } = await system.resolveMetadata(\n        fromHexString(metaUri),\n        contract.address\n      );\n      const decoded = D.AssetContractMetadata.decode(metadata);\n      if (!isLeft(decoded)) {\n        results.push({ ...contract, metadata: decoded.right });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return results;\n}\n\nexport type MarketplaceNftLoadingData = {\n  loaded: boolean;\n  error?: string;\n  token: null | D.Nft;\n  tokenSale: D.FixedPriceSaleBigMap[number];\n  tokenMetadata: undefined | string;\n};\n\nexport async function getMarketplaceNfts(\n  system: SystemWithToolkit | SystemWithWallet,\n  address: string\n): Promise<MarketplaceNftLoadingData[]> {\n  const tokenSales = await getFixedPriceSalesBigMap(system.tzkt, address);\n  const activeSales = tokenSales.filter(v => v.active);\n  const addresses = _.uniq(\n    activeSales.map(s => s.value.sale_data.sale_token.fa2_address)\n  );\n\n  const uniqueAddresses = Array.from(new Set(addresses));\n\n  if (uniqueAddresses.length === 0) {\n    return [];\n  }\n\n  const tokenBigMapRows = await getBigMapUpdates(\n    system.tzkt,\n    {\n      path: 'assets.token_metadata',\n      action: 'add_key',\n      'contract.in': addresses.join(','),\n      limit: '10000'\n    },\n    {\n      key: t.string,\n      value: t.type({\n        token_id: t.string,\n        token_info: t.record(t.string, t.string)\n      })\n    }\n  );\n\n  // Sort descending (newest first)\n  const salesToView = [...activeSales].reverse();\n  const salesWithTokenMetadata = salesToView\n    .map(x => ({\n      tokenSale: x,\n      tokenItem: tokenBigMapRows.find(\n        item =>\n          x.value.sale_data.sale_token.fa2_address === item.contract.address &&\n          x.value.sale_data.sale_token.token_id ===\n            item.content.value.token_id + ''\n      )\n    }))\n    .map(x => ({\n      loaded: false,\n      token: null,\n      tokenSale: x.tokenSale,\n      tokenMetadata: x.tokenItem?.content?.value?.token_info['']\n    }));\n\n  return salesWithTokenMetadata;\n}\n\nexport const loadMarketplaceNft = async (\n  system: SystemWithToolkit | SystemWithWallet,\n  tokenLoadData: MarketplaceNftLoadingData\n): Promise<MarketplaceNftLoadingData> => {\n  const { token, loaded, tokenSale, tokenMetadata } = tokenLoadData;\n  const result = { ...tokenLoadData };\n\n  if (token || loaded) {\n    return result;\n  }\n  result.loaded = true;\n\n  try {\n    const {\n      fa2_address: saleAddress,\n      token_id: tokenIdStr\n    } = tokenSale.value.sale_data.sale_token;\n\n    const tokenId = parseInt(tokenIdStr, 10);\n    const mutez = Number.parseInt(tokenSale.value.sale_data.price, 10);\n    const sale = {\n      id: tokenSale.id,\n      seller: tokenSale.value.seller,\n      price: mutez / 1000000,\n      mutez: mutez,\n      saleToken: {\n        address: tokenSale.value.sale_data.sale_token.fa2_address,\n        tokenId: Number.parseInt(tokenSale.value.sale_data.sale_token.token_id)\n      },\n      saleId: tokenSale.value.isLegacy ? 0 : Number.parseInt(tokenSale.key),\n      type: tokenSale.value.isLegacy ? 'fixedPriceLegacy' : 'fixedPrice'\n    };\n\n    if (!tokenMetadata) {\n      result.error = \"Couldn't retrieve tokenMetadata\";\n      console.error(\"Couldn't retrieve tokenMetadata\", { tokenSale });\n      return result;\n    }\n\n    const { metadata } = (await system.resolveMetadata(\n      fromHexString(tokenMetadata),\n      saleAddress\n    )) as any;\n\n    result.token = {\n      address: saleAddress,\n      id: tokenId,\n      title: metadata.name || '',\n      owner: sale.seller,\n      description: metadata.description || '',\n      artifactUri: metadata.artifactUri || '',\n      metadata: metadata,\n      sale: sale\n    };\n\n    return result;\n  } catch (err) {\n    result.error = \"Couldn't load token\";\n    console.error(\"Couldn't load token\", { tokenSale, err });\n    return result;\n  }\n};\n","export enum ErrorKind {\n  UnknownError,\n  WalletNotConnected,\n  CreateAssetContractFailed,\n  CreateNftFormInvalid,\n  MintTokenFailed,\n  TransferTokenFailed,\n  ListTokenFailed,\n  CancelTokenSaleFailed,\n  BuyTokenFailed,\n  GetNftAssetContractFailed,\n  GetContractNftsFailed,\n  GetWalletNftAssetContractsFailed,\n  GetNftAssetContractsFailed,\n  GetMarketplaceNftsFailed,\n  IPFSUploadFailed,\n  WalletAlreadyConnected,\n  WalletPermissionRequestDenied\n}\n\nexport interface RejectValue {\n  kind: ErrorKind;\n  message: string;\n  errorObj?: any;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { State } from '../index';\nimport {\n  getNftAssetContract,\n  getContractNfts,\n  getMarketplaceNfts,\n  getWalletNftAssetContracts,\n  MarketplaceNftLoadingData,\n  loadMarketplaceNft,\n  getNftAssetContracts\n} from '../../lib/nfts/queries';\nimport { Nft, AssetContract } from '../../lib/nfts/decoders';\nimport { ErrorKind, RejectValue } from './errors';\n\ntype Opts = { state: State; rejectValue: RejectValue };\n\nexport const getNftAssetContractQuery = createAsyncThunk<\n  AssetContract,\n  string,\n  Opts\n>('query/getNftAssetContract', async (address, api) => {\n  const { getState, rejectWithValue } = api;\n  const { system } = getState();\n  try {\n    return await getNftAssetContract(system, address);\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.GetNftAssetContractFailed,\n      message: `Failed to retrieve asset contract: ${address}`\n    });\n  }\n});\n\nexport const getContractNftsQuery = createAsyncThunk<\n  { address: string; tokens: Nft[] },\n  string,\n  Opts\n>('query/getContractNfts', async (address, { getState, rejectWithValue }) => {\n  const { system, collections } = getState();\n  try {\n    const tokens = await getContractNfts(system, address);\n    return { address, tokens };\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.GetContractNftsFailed,\n      message: `Failed to retrieve contract nfts from: ${\n        collections.collections[address]?.metadata?.name ?? address\n      }`\n    });\n  }\n});\n\nexport const getWalletAssetContractsQuery = createAsyncThunk<\n  AssetContract[],\n  undefined,\n  Opts\n>(\n  'query/getWalletNftAssetContracts',\n  async (_, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message:\n          \"Could not retrieve wallet's asset contracts: no wallet connected\"\n      });\n    }\n    try {\n      return await getWalletNftAssetContracts(system);\n    } catch (e) {\n      console.log(e);\n      return rejectWithValue({\n        kind: ErrorKind.GetWalletNftAssetContractsFailed,\n        message: \"Failed to retrieve wallet's asset contracts\"\n      });\n    }\n  }\n);\n\nexport const getAssetContractsQuery = createAsyncThunk<\n  AssetContract[],\n  string,\n  Opts\n>(\n  'query/getNftAssetContracts',\n  async (address, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message:\n          \"Could not retrieve wallet's asset contracts: no wallet connected\"\n      });\n    }\n    try {\n      return await getNftAssetContracts(system, address);\n    } catch (e) {\n      console.log(e);\n      return rejectWithValue({\n        kind: ErrorKind.GetNftAssetContractsFailed,\n        message: \"Failed to retrieve asset contracts\"\n      });\n    }\n  }\n);\n\nexport const getMarketplaceNftsQuery = createAsyncThunk<\n  { tokens: MarketplaceNftLoadingData[] },\n  string,\n  Opts\n>(\n  'query/getMarketplaceNfts',\n  async (address, { getState, rejectWithValue }) => {\n    const { system } = getState();\n    try {\n      const tokens = await getMarketplaceNfts(system, address);\n\n      // Load 9 initially (1-feature + at least 2 rows)\n      for (const i in tokens.slice(0, 9)) {\n        tokens[i] = await loadMarketplaceNft(system, tokens[i]);\n      }\n\n      return { tokens };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.GetMarketplaceNftsFailed,\n        message: `Failed to retrieve marketplace nfts from: ${address}`\n      });\n    }\n  }\n);\n\nexport const loadMoreMarketplaceNftsQuery = createAsyncThunk<\n  { tokens: MarketplaceNftLoadingData[] },\n  {},\n  Opts\n>(\n  'query/loadMoreMarketplaceNftsQuery',\n  async (_, { getState, rejectWithValue }) => {\n    const { system, marketplace } = getState();\n    try {\n      const tokens = marketplace.marketplace.tokens ?? [];\n\n      // Load 8 more (at least 2 rows)\n      const iStart = tokens.findIndex(x => !x.loaded);\n      const iEnd = iStart + 8;\n\n      // Need to rebuild the array\n      const tokensAfter = await Promise.all(\n        tokens.map(async (x, i) =>\n          i >= iStart && i < iEnd ? await loadMarketplaceNft(system, x) : x\n        )\n      );\n\n      return { tokens: tokensAfter };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.GetMarketplaceNftsFailed,\n        message: `Failed to load marketplace nfts`\n      });\n    }\n  }\n);\n","import { createSlice, PayloadAction, CaseReducer } from '@reduxjs/toolkit';\nimport {\n  getAssetContractsQuery,\n  getContractNftsQuery,\n  getNftAssetContractQuery,\n  getWalletAssetContractsQuery\n} from '../async/queries';\nimport { Nft, AssetContract } from '../../lib/nfts/decoders';\nimport config from '../../config.json';\n\n//// State\n\n// Types\n\nexport type Token = Nft;\n\nexport interface Collection extends AssetContract {\n  tokens: Token[] | null;\n  loaded: boolean;\n}\n\nexport interface CollectionsState {\n  selectedCollection: string | null;\n  globalCollection: string;\n  collections: Record<string, Collection>;\n}\n\ntype Reducer<A> = CaseReducer<CollectionsState, PayloadAction<A>>;\n\n// Data\n\nexport const initialState: CollectionsState = {\n  selectedCollection: null,\n  globalCollection: config.contracts.nftFaucet,\n  collections: {}\n};\n\n//// Reducers & Slice\n\ntype PopulateCollection = Reducer<{ address: string; tokens: Token[] }>;\n\nconst populateCollectionR: PopulateCollection = (state, { payload }) => {\n  if (state.collections[payload.address]) {\n    state.collections[payload.address].tokens = payload.tokens;\n    state.collections[payload.address].loaded = true;\n  }\n};\n\nconst updateCollectionsR: Reducer<AssetContract[]> = (state, action) => {\n  for (let coll of action.payload) {\n    state.collections[coll.address] = {\n      ...coll,\n      tokens: null,\n      loaded: false\n    };\n  }\n};\n\nconst updateCollectionR: Reducer<AssetContract> = (state, { payload }) => {\n  if (!state.collections[payload.address]) {\n    state.collections[payload.address] = {\n      ...payload,\n      tokens: null,\n      loaded: false\n    };\n  }\n};\n\nconst selectCollectionR: Reducer<string> = (state, action) => {\n  state.selectedCollection = action.payload;\n};\n\nconst slice = createSlice({\n  name: 'collections',\n  initialState,\n  reducers: {\n    updateCollections: updateCollectionsR,\n    updateCollection: updateCollectionR,\n    selectCollection: selectCollectionR,\n    populateCollection: populateCollectionR\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(getContractNftsQuery.fulfilled, populateCollectionR);\n    addCase(getNftAssetContractQuery.fulfilled, updateCollectionR);\n    addCase(getWalletAssetContractsQuery.fulfilled, updateCollectionsR);\n    addCase(getAssetContractsQuery.fulfilled, updateCollectionsR);\n  }\n});\n\nexport const {\n  updateCollections,\n  updateCollection,\n  selectCollection,\n  populateCollection\n} = slice.actions;\n\nexport default slice;\n","import axios from 'axios';\n\nexport interface IpfsContent {\n  cid: string;\n  size: number;\n  ipfsUri: string;\n  url: string;\n  publicGatewayUrl: string;\n}\n\nexport interface IpfsResponse extends IpfsContent {\n  thumbnail: IpfsContent;\n}\n\nexport async function uploadIPFSJSON(api: string, data: any) {\n  return axios.post<IpfsResponse>(`${api}/ipfs-json-upload`, data);\n}\n\nexport async function uploadIPFSFile(api: string, file: File) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post<IpfsResponse>(`${api}/ipfs-file-upload`, formData);\n}\n\nexport async function uploadIPFSImageWithThumbnail(api: string, file: File) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post<IpfsResponse>(\n    `${api}/ipfs-image-with-thumbnail-upload`,\n    formData\n  );\n}\n\n// URI Utils\n\nexport function isIpfsUri(uri: string) {\n  return /^ipfs:\\/\\/.+/.test(uri);\n}\n\nexport function ipfsUriToCid(uri: string) {\n  const baseRegex = /^ipfs:\\/\\//;\n  const ipfsRegex = new RegExp(baseRegex.source + '.+');\n  if (ipfsRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n  return null;\n}\n\nexport type IpfsGatewayConfig = { ipfsGateway: string };\nexport function ipfsUriToGatewayUrl(config: IpfsGatewayConfig, uri: string) {\n  const cid = ipfsUriToCid(uri);\n  return cid ? `${config.ipfsGateway}/ipfs/${cid}` : uri;\n}\n\nexport function uriToCid(uri: string) {\n  const ipfsUriCid = ipfsUriToCid(uri);\n  if (ipfsUriCid) {\n    return ipfsUriCid;\n  }\n  const baseRegex = /^https:\\/\\/.*\\/ipfs\\//;\n  const httpRegex = new RegExp(baseRegex.source + '.+');\n  if (httpRegex.test(uri)) {\n    return uri.replace(baseRegex, '');\n  }\n  return null;\n}\n","import { MichelsonMap } from '@taquito/taquito';\nimport {\n  Fa2MultiNftAssetCode,\n  Fa2MultiNftFaucetCode\n} from '@tqtezos/minter-contracts';\nimport { Buffer } from 'buffer';\nimport { SystemWithWallet } from '../system';\nimport { uploadIPFSJSON } from '../util/ipfs';\nimport { NftMetadata } from './decoders';\n\nfunction toHexString(input: string) {\n  return Buffer.from(input).toString('hex');\n}\n\nexport async function createFaucetContract(\n  system: SystemWithWallet,\n  name: string\n) {\n  const metadataMap = new MichelsonMap<string, string>();\n  const resp = await uploadIPFSJSON(system.config.ipfsApi, {\n    name,\n    description: 'An OpenMinter base collection contract.',\n    interfaces: ['TZIP-012', 'TZIP-016', 'TZIP-020'],\n    tokenCategory: 'collectibles'\n  });\n  metadataMap.set('', toHexString(resp.data.ipfsUri));\n  return await system.toolkit.wallet\n    .originate({\n      code: Fa2MultiNftFaucetCode.code,\n      storage: {\n        assets: {\n          ledger: new MichelsonMap(),\n          next_token_id: 0,\n          operators: new MichelsonMap(),\n          token_metadata: new MichelsonMap()\n        },\n        metadata: metadataMap\n      }\n    })\n    .send();\n}\n\nexport async function createAssetContract(\n  system: SystemWithWallet,\n  metadata: Record<string, string>\n) {\n  const metadataMap = new MichelsonMap<string, string>();\n  const resp = await uploadIPFSJSON(system.config.ipfsApi, {\n    description: 'An OpenMinter assets contract.',\n    interfaces: ['TZIP-012', 'TZIP-016', 'TZIP-020'],\n    tokenCategory: 'collectibles',\n    ...metadata\n  });\n  metadataMap.set('', toHexString(resp.data.ipfsUri));\n  return await system.toolkit.wallet\n    .originate({\n      code: Fa2MultiNftAssetCode.code,\n      storage: {\n        assets: {\n          ledger: new MichelsonMap(),\n          next_token_id: 0,\n          operators: new MichelsonMap(),\n          token_metadata: new MichelsonMap()\n        },\n        admin: {\n          admin: system.tzPublicKey,\n          pending_admin: null,\n          paused: false\n        },\n        metadata: metadataMap\n      }\n    })\n    .send();\n}\n\nexport async function mintToken(\n  system: SystemWithWallet,\n  address: string,\n  metadata: NftMetadata\n) {\n  const contract = await system.toolkit.wallet.at(address);\n  const storage = await contract.storage<any>();\n\n  const token_id = storage.assets.next_token_id;\n  const token_info = new MichelsonMap<string, string>();\n  const resp = await uploadIPFSJSON(system.config.ipfsApi, {\n    ...metadata,\n    decimals: 0,\n    isBooleanAmount: true\n  });\n  token_info.set('', toHexString(resp.data.ipfsUri));\n\n  return contract.methods\n    .mint([\n      {\n        owner: system.tzPublicKey,\n        token_metadata: {\n          token_id,\n          token_info\n        }\n      }\n    ])\n    .send();\n}\n\ninterface MintData {\n  owner: string;\n  token_metadata: {\n    token_id: number;\n    token_info: MichelsonMap<string, string>;\n  };\n}\n\nexport async function mintTokens(\n  system: SystemWithWallet,\n  address: string,\n  metadata: NftMetadata[]\n) {\n  const contract = await system.toolkit.wallet.at(address);\n  const storage = await contract.storage<any>();\n\n  const token_id = storage.assets.next_token_id;\n  const mints: MintData[] = [];\n  for (const [index, meta] of metadata.entries()) {\n    const token_info = new MichelsonMap<string, string>();\n    const resp = await uploadIPFSJSON(system.config.ipfsApi, {\n      ...meta,\n      decimals: 0,\n      isBooleanAmount: true\n    });\n    token_info.set('', toHexString(resp.data.ipfsUri));\n    mints.push({\n      owner: system.tzPublicKey,\n      token_metadata: {\n        token_id: token_id + index,\n        token_info\n      }\n    });\n  }\n\n  return contract.methods.mint(mints).send();\n}\n\nexport async function transferToken(\n  system: SystemWithWallet,\n  contractAddress: string,\n  tokenId: number,\n  toAddress: string\n) {\n  const contract = await system.toolkit.wallet.at(contractAddress);\n  return contract.methods\n    .transfer([\n      {\n        from_: system.tzPublicKey,\n        txs: [{ to_: toAddress, token_id: tokenId, amount: 1 }]\n      }\n    ])\n    .send();\n}\n\nexport async function listTokenForSale(\n  system: SystemWithWallet,\n  marketplaceContract: string,\n  tokenContract: string,\n  tokenId: number,\n  salePrice: number,\n  saleQty: number\n) {\n  const contractM = await system.toolkit.wallet.at(marketplaceContract);\n  const contractT = await system.toolkit.wallet.at(tokenContract);\n  const batch = system.toolkit.wallet\n    .batch([])\n    .withContractCall(\n      contractT.methods.update_operators([\n        {\n          add_operator: {\n            owner: system.tzPublicKey,\n            operator: marketplaceContract,\n            token_id: tokenId\n          }\n        }\n      ])\n    );\n\n  const sellSchema = contractM.parameterSchema.ExtractSchema()['sell'];\n  if (sellSchema.hasOwnProperty('sale_token_param_tez')) {\n    batch.withContractCall(\n      contractM.methods.sell(salePrice, tokenContract, tokenId)\n    );\n  } else {\n    batch.withContractCall(\n      contractM.methods.sell(tokenContract, tokenId, salePrice, saleQty)\n    );\n  }\n\n  return batch.send();\n}\n\nexport async function cancelTokenSaleLegacy(\n  system: SystemWithWallet,\n  marketplaceContract: string,\n  tokenContract: string,\n  tokenId: number\n) {\n  const contractM = await system.toolkit.wallet.at(marketplaceContract);\n  const contractT = await system.toolkit.wallet.at(tokenContract);\n  const batch = system.toolkit.wallet\n    .batch([])\n    .withContractCall(\n      contractM.methods.cancel(system.tzPublicKey, tokenContract, tokenId)\n    )\n    .withContractCall(\n      contractT.methods.update_operators([\n        {\n          remove_operator: {\n            owner: system.tzPublicKey,\n            operator: marketplaceContract,\n            token_id: tokenId\n          }\n        }\n      ])\n    );\n  return batch.send();\n}\n\nexport async function cancelTokenSale(\n  system: SystemWithWallet,\n  marketplaceContract: string,\n  tokenContract: string,\n  tokenId: number,\n  saleId: number\n) {\n  const contractM = await system.toolkit.wallet.at(marketplaceContract);\n  const contractT = await system.toolkit.wallet.at(tokenContract);\n  const batch = system.toolkit.wallet\n    .batch([])\n    .withContractCall(\n      contractM.methods.cancel(saleId)\n    )\n    .withContractCall(\n      contractT.methods.update_operators([\n        {\n          remove_operator: {\n            owner: system.tzPublicKey,\n            operator: marketplaceContract,\n            token_id: tokenId\n          }\n        }\n      ])\n    );\n  return batch.send();\n}\n\nexport async function approveTokenOperator(\n  system: SystemWithWallet,\n  contractAddress: string,\n  tokenId: number,\n  operatorAddress: string\n) {\n  const contract = await system.toolkit.wallet.at(contractAddress);\n  return contract.methods\n    .update_operators([\n      {\n        add_operator: {\n          owner: system.tzPublicKey,\n          operator: operatorAddress,\n          token_id: tokenId\n        }\n      }\n    ])\n    .send();\n}\n\nexport async function removeTokenOperator(\n  system: SystemWithWallet,\n  contractAddress: string,\n  tokenId: number,\n  operatorAddress: string\n) {\n  const contract = await system.toolkit.wallet.at(contractAddress);\n  return contract.methods\n    .update_operators([\n      {\n        remove_operator: {\n          owner: system.tzPublicKey,\n          operator: operatorAddress,\n          token_id: tokenId\n        }\n      }\n    ])\n    .send();\n}\n\nexport async function buyTokenLegacy(\n  system: SystemWithWallet,\n  marketplaceContract: string,\n  tokenContract: string,\n  tokenId: number,\n  tokenSeller: string,\n  salePrice: number\n) {\n  const contract = await system.toolkit.wallet.at(marketplaceContract);\n  return contract.methods\n    .buy(tokenSeller, tokenContract, tokenId)\n    .send({ amount: salePrice });\n}\n\nexport async function buyToken(\n  system: SystemWithWallet,\n  marketplaceContract: string,\n  saleId: number,\n  salePrice: number\n) {\n  const contract = await system.toolkit.wallet.at(marketplaceContract);\n  return contract.methods\n    .buy(saleId)\n    .send({ amount: salePrice });\n}","import Joi from 'joi';\nimport { State } from '..';\n\nexport const fileUploadSchema = Joi.object({\n  selectedFile: Joi.required().invalid(null)\n});\n\nexport const assetDetailsSchema = fileUploadSchema.append({\n  fields: Joi.object({\n    name: Joi.string().min(1).required(),\n    description: Joi.string().allow(null).allow('')\n  }),\n  metadataRows: Joi.array().items(\n    Joi.object({\n      name: Joi.string().min(1).required(),\n      value: Joi.string().min(1).required()\n    })\n  )\n});\n\nexport const collectionSelectSchema = assetDetailsSchema.append({\n  collectionAddress: Joi.string().required()\n});\n\nfunction isValid(schema: Joi.ObjectSchema, object: any) {\n  return !schema.validate(object, { allowUnknown: true }).error;\n}\n\nexport function validateCreateNftStep(state: State['createNft']) {\n  switch (state.step) {\n    case 'file_upload':\n      return isValid(fileUploadSchema, state);\n    case 'asset_details':\n      return isValid(collectionSelectSchema, state);\n    case 'collection_select':\n      return isValid(collectionSelectSchema, state);\n    case 'confirm':\n      return isValid(collectionSelectSchema, state);\n    default:\n      return false;\n  }\n}\n\nexport function validateCreateNftForm(state: State['createNft']) {\n  return isValid(collectionSelectSchema, state);\n}\n","import { Handler, Tzip16Uri } from '@taquito/tzip16';\nimport { HttpBackend } from '@taquito/http-utils';\nimport {\n  ContractAbstraction,\n  ContractProvider,\n  Wallet,\n  Context\n} from '@taquito/taquito';\n\nexport default class CustomIpfsHttpHandler implements Handler {\n  private _ipfsGateway: string;\n  private _gatewayProtocol: string;\n  private _httpBackend = new HttpBackend();\n\n  constructor(ipfsGatheway?: string, gatewayProtocol?: string) {\n    this._ipfsGateway = ipfsGatheway ? ipfsGatheway : 'ipfs.io';\n    this._gatewayProtocol = gatewayProtocol ? gatewayProtocol : 'https';\n  }\n\n  async getMetadata(\n    _contractAbstraction: ContractAbstraction<ContractProvider | Wallet>,\n    { location }: Tzip16Uri,\n    _context: Context\n  ): Promise<string> {\n    return this._httpBackend.createRequest<string>({\n      url: `${this._gatewayProtocol}://${\n        this._ipfsGateway\n      }/ipfs/${location.substring(2)}/`,\n      method: 'GET',\n      headers: { 'Content-Type': 'text/plain' },\n      mimeType: 'text; charset=utf-8',\n      json: false\n    });\n  }\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { Config } from '../system';\n\nexport async function getBigMapKeys(config: Config, id: number) {\n  let response: AxiosResponse;\n  let result = [];\n  let offset = 0;\n  const uri = `${config.bcd.api}/v1/bigmap/${config.network}/${id}/keys`;\n  do {\n    response = await axios.get(uri, {\n      params: {\n        offset\n      }\n    });\n    result.push(...response.data);\n    offset += 10;\n  } while (response.data.length === 10);\n  return result;\n}\n\nexport async function getContract(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/contract/${config.network}/${address}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractStorage(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/contract/${config.network}/${address}/storage`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getWalletContracts(config: Config, address: string) {\n  const uri = `${config.bcd.api}/v1/search?q=${address}&i=contract&n=${config.network}&g=0&s=0`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport class BetterCallDev {\n  config: Config;\n\n  constructor(config: Config) {\n    this.config = config;\n  }\n\n  getBigMapKeys(id: number) {\n    return getBigMapKeys(this.config, id);\n  }\n\n  getContract(address: string) {\n    return getContract(this.config, address);\n  }\n\n  getContractStorage(address: string) {\n    return getContractStorage(this.config, address);\n  }\n\n  getWalletContracts(address: string) {\n    return getWalletContracts(this.config, address);\n  }\n}\n","import { TezosToolkit } from '@taquito/taquito';\n\nexport const setConfirmationPollingInterval = async (\n  tzToolkit: TezosToolkit\n) => {\n  const constants = await tzToolkit.rpc.getConstants();\n\n  // Polling interval has to be smaller than the time between block\n  // or TezosToolkit throws an exception. Here we pick 1/5 of the time\n  // between blocks.\n  const confirmationPollingIntervalSecond =\n    Number(constants.time_between_blocks[0]) / 5;\n  tzToolkit.setProvider({ config: { confirmationPollingIntervalSecond } });\n};\n","import axios from 'axios';\nimport { Config } from '../system';\n\nexport type Params = Record<string, string>;\n\nfunction mkQueryParams(params: Params | undefined) {\n  const finalParams = { limit: '10000', ...params };\n  return new URLSearchParams(finalParams).toString();\n}\n\nexport async function getBigMapKeys(\n  config: Config,\n  id: number,\n  params?: Params\n) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/${id}/keys?${mkQueryParams(\n    params\n  )}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getBigMapUpdates(config: Config, params?: Params) {\n  const uri = `${config.tzkt.api}/v1/bigmaps/updates?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContracts(config: Config, params?: Params) {\n  const uri = `${config.tzkt.api}/v1/contracts?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContract(\n  config: Config,\n  address: string,\n  params?: Params\n) {\n  const uri = `${config.tzkt.api}/v1/contracts/${address}?${mkQueryParams(\n    params\n  )}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractBigMapKeys(\n  config: Config,\n  address: string,\n  name: string,\n  params?: Params\n) {\n  const uri = `${\n    config.tzkt.api\n  }/v1/contracts/${address}/bigmaps/${name}/keys?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport async function getContractStorage(\n  config: Config,\n  address: string,\n  params?: Params\n) {\n  const uri = `${\n    config.tzkt.api\n  }/v1/contracts/${address}/storage?${mkQueryParams(params)}`;\n  const response = await axios.get(uri);\n  return response.data;\n}\n\nexport class TzKt {\n  config: Config;\n\n  constructor(config: Config) {\n    this.config = config;\n  }\n\n  getBigMapKeys(id: number, params?: Params) {\n    return getBigMapKeys(this.config, id, params);\n  }\n\n  getBigMapUpdates(params?: Params) {\n    return getBigMapUpdates(this.config, params);\n  }\n\n  getContracts(params?: Params) {\n    return getContracts(this.config, params);\n  }\n\n  getContract(address: string, params?: Params) {\n    return getContract(this.config, address, params);\n  }\n\n  getContractBigMapKeys(address: string, name: string, params?: Params) {\n    return getContractBigMapKeys(this.config, address, name, params);\n  }\n\n  getContractStorage(address: string, params?: Params) {\n    return getContractStorage(this.config, address, params);\n  }\n}\n","import {\n  TezosToolkit,\n  MichelCodecPacker,\n  Context,\n  ContractAbstraction,\n  ContractProvider\n} from '@taquito/taquito';\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { MetadataProvider, DEFAULT_HANDLERS } from '@taquito/tzip16';\nimport { Tzip12Module } from '@taquito/tzip12';\nimport CustomIpfsHttpHandler from './util/taquito-custom-ipfs-http-handler';\nimport { BetterCallDev } from './service/bcd';\nimport * as tzUtils from './util/tezosToolkit';\nimport { DAppClientOptions, NetworkType } from '@airgap/beacon-sdk';\nimport { TzKt } from './service/tzkt';\nimport { isIpfsUri } from './util/ipfs';\n\nexport interface Config {\n  rpc: string;\n  network: string;\n  bcd: {\n    api: string;\n    gui: string;\n  };\n  tzkt: {\n    api: string;\n  };\n  contracts: {\n    nftFaucet: string;\n    marketplace: {\n      fixedPrice: {\n        tez: string;\n      };\n    };\n  };\n  ipfsApi: string;\n  ipfsGateway: string;\n}\n\nexport enum Status {\n  Configured = 'Configured',\n  ToolkitConnected = 'ToolkitConnected',\n  WalletConnected = 'WalletConnected'\n}\n\nexport interface SystemConfigured {\n  status: Status.Configured;\n  config: Config;\n  betterCallDev: BetterCallDev;\n  tzkt: TzKt;\n  toolkit: null;\n  wallet: null;\n  walletReconnectAttempted: boolean;\n  tzPublicKey: null;\n}\n\ntype ResolveMetadata = (\n  uri: string,\n  address: string\n) => ReturnType<MetadataProvider['provideMetadata']>;\n\nexport interface SystemWithToolkit {\n  status: Status.ToolkitConnected;\n  config: Config;\n  betterCallDev: BetterCallDev;\n  tzkt: TzKt;\n  toolkit: TezosToolkit;\n  resolveMetadata: ResolveMetadata;\n  wallet: null;\n  walletReconnectAttempted: boolean;\n  tzPublicKey: null;\n}\n\nexport interface SystemWithWallet {\n  status: Status.WalletConnected;\n  config: Config;\n  betterCallDev: BetterCallDev;\n  tzkt: TzKt;\n  toolkit: TezosToolkit;\n  resolveMetadata: ResolveMetadata;\n  wallet: BeaconWallet;\n  walletReconnectAttempted: boolean;\n  tzPublicKey: string;\n}\n\nexport type System = SystemConfigured | SystemWithToolkit | SystemWithWallet;\n\nexport function configure(config: Config): SystemConfigured {\n  // Upgrade `edonet` reference in config to `edo2net`. This is done for the\n  // sake of compatibility since the meaning of \"edonet\" is ambiguous: in some\n  // parts of the ecosystem it refers to latest version of edonet, which is also\n  // referred to as \"edo2net\".\n  const compatibilityConfig = {\n    ...config,\n    network: config.network === 'edonet' ? 'edo2net' : config.network\n  };\n  return {\n    status: Status.Configured,\n    config: compatibilityConfig,\n    betterCallDev: new BetterCallDev(compatibilityConfig),\n    tzkt: new TzKt(compatibilityConfig),\n    toolkit: null,\n    wallet: null,\n    walletReconnectAttempted: false,\n    tzPublicKey: null\n  };\n}\n\nfunction createMetadataResolver(\n  system: SystemConfigured,\n  toolkit: TezosToolkit,\n  contractAddress: string\n): ResolveMetadata {\n  const ipfsUrl = system.config.ipfsGateway;\n  const ipfsGateway = ipfsUrl.replace(/^https?:\\/\\//, '');\n  const gatewayProtocol = ipfsUrl.startsWith('https') ? 'https' : 'http';\n\n  const ipfsHandler = new CustomIpfsHttpHandler(ipfsGateway, gatewayProtocol);\n  DEFAULT_HANDLERS.set('ipfs', ipfsHandler);\n  const provider = new MetadataProvider(DEFAULT_HANDLERS);\n  const context = new Context(toolkit.rpc);\n\n  const defaultContract = toolkit.contract.at(contractAddress);\n  type Contract = ContractAbstraction<ContractProvider>;\n  const contractCache: Record<string, Contract> = {};\n\n  return async (uri, address) => {\n    if (isIpfsUri(uri)) {\n      const contract = await defaultContract;\n      return provider.provideMetadata(contract, uri, context);\n    }\n    if (!contractCache[address]) {\n      contractCache[address] = await toolkit.contract.at(address);\n    }\n    return provider.provideMetadata(contractCache[address], uri, context);\n  };\n}\n\nexport function connectToolkit(system: SystemConfigured): SystemWithToolkit {\n  const toolkit = new TezosToolkit(system.config.rpc);\n  toolkit.addExtension(new Tzip12Module());\n  toolkit.setPackerProvider(new MichelCodecPacker());\n  const faucetAddress = system.config.contracts.nftFaucet;\n  return {\n    ...system,\n    status: Status.ToolkitConnected,\n    toolkit: toolkit,\n    resolveMetadata: createMetadataResolver(system, toolkit, faucetAddress),\n    walletReconnectAttempted: false\n  };\n}\n\nfunction networkType(config: Config) {\n  if (config.network === 'mainnet') {\n    return NetworkType.MAINNET;\n  }\n  if (config.network === 'delphinet') {\n    return NetworkType.DELPHINET;\n  }\n  // Edonet support is split between two network types, edonet and edo2net. For\n  // now, .CUSTOM must be used when referring to edo2net.\n  if (config.network === 'edonet') {\n    return NetworkType.EDONET;\n  }\n  if (config.network === 'edo2net') {\n    return NetworkType.CUSTOM;\n  }\n  if (config.network === 'florencenet') {\n    return NetworkType.FLORENCENET;\n  }\n  return NetworkType.CUSTOM;\n}\n\nlet wallet: BeaconWallet | null = null;\n\nfunction getWallet(\n  system: SystemWithToolkit,\n  eventHandlers?: DAppClientOptions['eventHandlers']\n): BeaconWallet {\n  if (wallet === null) {\n    wallet = new BeaconWallet({\n      name: 'OpenSystem dApp',\n      preferredNetwork: networkType(system.config),\n      eventHandlers\n    });\n  }\n  return wallet;\n}\n\nasync function initWallet(\n  system: SystemWithToolkit,\n  forceConnect: boolean,\n  eventHandlers?: DAppClientOptions['eventHandlers']\n): Promise<boolean> {\n  const network = networkType(system.config);\n  const wallet = getWallet(system, eventHandlers);\n\n  const activeAccount = await wallet.client.getActiveAccount();\n\n  if (!activeAccount) {\n    if (forceConnect) {\n      try {\n        await wallet.requestPermissions({\n          network: {\n            type:\n              system.config.network === 'edo2net'\n                ? (system.config.network as NetworkType)\n                : network,\n            rpcUrl: system.config.rpc\n          }\n        });\n      } catch (error) {\n        // requestPermissions failed - reset wallet selection\n        wallet.clearActiveAccount();\n        throw error;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nasync function createSystemWithWallet(\n  system: SystemWithToolkit\n): Promise<SystemWithWallet> {\n  const wallet = getWallet(system);\n\n  system.toolkit.setWalletProvider(wallet);\n  tzUtils.setConfirmationPollingInterval(system.toolkit);\n\n  const tzPublicKey = await wallet.getPKH();\n\n  return {\n    ...system,\n    status: Status.WalletConnected,\n    wallet: wallet,\n    tzPublicKey: tzPublicKey\n  };\n}\n\nexport async function reconnectWallet(\n  system: SystemWithToolkit,\n  eventHandlers?: DAppClientOptions['eventHandlers']\n): Promise<SystemWithWallet | SystemWithToolkit> {\n  const connected = await initWallet(system, false, eventHandlers);\n  if (connected) {\n    const systemWithWallet = await createSystemWithWallet(system);\n    return { ...systemWithWallet, walletReconnectAttempted: true };\n  } else {\n    return { ...system, walletReconnectAttempted: true };\n  }\n}\n\nexport async function connectWallet(\n  system: SystemWithToolkit,\n  eventHandlers?: DAppClientOptions['eventHandlers']\n): Promise<SystemWithWallet> {\n  await initWallet(system, true, eventHandlers);\n  return await createSystemWithWallet(system);\n}\n\nexport async function disconnectWallet(\n  system: SystemWithWallet\n): Promise<SystemWithToolkit> {\n  await system.wallet.disconnect();\n  const toolkit = new TezosToolkit(system.config.rpc);\n  toolkit.setPackerProvider(new MichelCodecPacker());\n  toolkit.addExtension(new Tzip12Module());\n  wallet = null;\n  return {\n    ...system,\n    status: Status.ToolkitConnected,\n    toolkit: toolkit,\n    wallet: null,\n    tzPublicKey: null\n  };\n}\n\nexport const Minter = {\n  configure,\n  reconnectWallet,\n  connectToolkit,\n  connectWallet,\n  disconnectWallet\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { State } from '..';\nimport { Minter, SystemWithToolkit, SystemWithWallet } from '../../lib/system';\nimport { ErrorKind, RejectValue } from './errors';\n\ntype Options = {\n  state: State;\n  rejectValue: RejectValue;\n};\n\nexport const connectWallet = createAsyncThunk<\n  SystemWithWallet,\n  undefined,\n  Options\n>(\n  'wallet/connect',\n  async (_arg, { getState, rejectWithValue /* , dispatch */ }) => {\n    const { system } = getState();\n    if (system.status === 'ToolkitConnected') {\n      // TODO: Implement custom UI behavior by overriding Beacon events\n      // NOTE: These event handlers will be passed to the Beacon DAppClient *once*\n      // as the client is cached after its first instantiation\n      // eslint-disable-next-line\n      const eventHandlers: Parameters<typeof Minter.connectWallet>[1] = {\n        PERMISSION_REQUEST_SENT: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        PERMISSION_REQUEST_SUCCESS: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        PERMISSION_REQUEST_ERROR: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_SENT: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_SUCCESS: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        OPERATION_REQUEST_ERROR: {\n          handler(data) {\n            console.log(data);\n          }\n        },\n        ACKNOWLEDGE_RECEIVED: {\n          handler(data) {\n            console.log(data);\n          }\n        }\n      };\n      try {\n        return await Minter.connectWallet(system /*eventHandlers*/);\n      } catch (e) {\n        return rejectWithValue({\n          kind: ErrorKind.WalletPermissionRequestDenied,\n          message: 'Wallet permission request denied'\n        });\n      }\n    }\n    return rejectWithValue({\n      kind: ErrorKind.WalletNotConnected,\n      message: 'Wallet already connected'\n    });\n  }\n);\n\nexport const reconnectWallet = createAsyncThunk<\n  SystemWithWallet | SystemWithToolkit,\n  undefined,\n  Options\n>('wallet/reconnect', async (_arg, { getState, rejectWithValue }) => {\n  const { system } = getState();\n  if (system.status === 'ToolkitConnected') {\n    return await Minter.reconnectWallet(system);\n  }\n  return rejectWithValue({\n    kind: ErrorKind.WalletNotConnected,\n    message: 'Wallet already connected'\n  });\n});\n\nexport const disconnectWallet = createAsyncThunk<\n  SystemWithToolkit,\n  undefined,\n  Options\n>('wallet/disconnect', async (_arg, { getState, rejectWithValue }) => {\n  const { system } = getState();\n  if (system.status === 'WalletConnected') {\n    return await Minter.disconnectWallet(system);\n  }\n  return rejectWithValue({\n    kind: ErrorKind.WalletNotConnected,\n    message: 'No wallet to disconnect from '\n  });\n});\n","import { createAction } from '@reduxjs/toolkit';\nimport { Notification } from './notifications';\n\nexport const pushNotification = createAction<Notification>(\n  'sharedAction/pushNotification'\n);\n\nexport const readNotification = createAction<string>(\n  'sharedAction/readNotification'\n);\n\nexport const deliverNotification = createAction<string>(\n  'sharedAction/deliverNotification'\n);\n\nexport function pendingNotification(\n  requestId: string,\n  description: string\n): Notification {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'pending',\n    title: 'Pending',\n    description,\n    kind: null\n  };\n}\n\nexport function fulfilledNotification(\n  requestId: string,\n  description: string\n): Notification {\n  return {\n    requestId,\n    read: false,\n    delivered: false,\n    status: 'success',\n    title: 'Complete',\n    description,\n    kind: null\n  };\n}\n\nexport function notifyPending(requestId: string, message: string) {\n  return pushNotification(pendingNotification(requestId, message));\n}\n\nexport function notifyFulfilled(requestId: string, message: string) {\n  return pushNotification(fulfilledNotification(requestId, message));\n}\n","/* eslint-disable no-redeclare */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { State } from '..';\nimport {\n  createAssetContract,\n  mintToken,\n  mintTokens,\n  transferToken,\n  listTokenForSale,\n  cancelTokenSale,\n  cancelTokenSaleLegacy,\n  buyToken,\n  buyTokenLegacy\n} from '../../lib/nfts/actions';\nimport { ErrorKind, RejectValue } from './errors';\nimport { getContractNftsQuery, getWalletAssetContractsQuery } from './queries';\nimport { validateCreateNftForm } from '../validators/createNft';\nimport {\n  uploadIPFSFile,\n  uploadIPFSImageWithThumbnail\n} from '../../lib/util/ipfs';\nimport { SelectedFile } from '../slices/createNft';\nimport { connectWallet } from './wallet';\nimport { NftMetadata } from '../../lib/nfts/decoders';\nimport { SystemWithToolkit, SystemWithWallet } from '../../lib/system';\nimport { notifyPending, notifyFulfilled } from '../slices/notificationsActions';\nimport parse from 'csv-parse/lib/sync';\nimport * as t from 'io-ts';\n\ntype Options = {\n  state: State;\n  rejectValue: RejectValue;\n};\n\nexport const readFileAsDataUrlAction = createAsyncThunk<\n  { ns: string; result: SelectedFile },\n  { ns: string; file: File },\n  Options\n>('action/readFileAsDataUrl', async ({ ns, file }, { rejectWithValue }) => {\n  const readFile = new Promise<{ ns: string; result: SelectedFile }>(\n    (resolve, reject) => {\n      let { name, type, size } = file;\n      const reader = new FileReader();\n\n      if (!type) {\n        if (name.substr(-4) === '.glb') {\n          type = 'model/gltf-binary';\n        }\n        if (name.substr(-5) === '.gltf') {\n          type = 'model/gltf+json';\n        }\n      }\n\n      reader.onload = e => {\n        const buffer = e.target?.result;\n        if (!buffer || !(buffer instanceof ArrayBuffer)) {\n          return reject();\n        }\n        const blob = new Blob([new Uint8Array(buffer)], { type });\n        const objectUrl = window.URL.createObjectURL(blob);\n        return resolve({ ns, result: { objectUrl, name, type, size } });\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  );\n  try {\n    return await readFile;\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.UnknownError,\n      message: 'Could not read file'\n    });\n  }\n});\n\nexport const createAssetContractAction = createAsyncThunk<\n  { name: string; address: string },\n  string,\n  Options\n>(\n  'action/createAssetContract',\n  async (name, { getState, rejectWithValue, dispatch, requestId }) => {\n    const { system } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message: 'Cannot create collection: Wallet not connected'\n      });\n    }\n    try {\n      const op = await createAssetContract(system, { name });\n      const pendingMessage = `Creating new collection ${name}`;\n      dispatch(notifyPending(requestId, pendingMessage));\n      await op.confirmation();\n\n      const { address } = await op.contract();\n      const fulfilledMessage = `Created new collection ${name} (${address})`;\n      dispatch(notifyFulfilled(requestId, fulfilledMessage));\n      // TODO: Poll for contract availability on indexer\n      dispatch(getWalletAssetContractsQuery());\n      return { name, address };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.CreateAssetContractFailed,\n        message: 'Collection creation failed'\n      });\n    }\n  }\n);\n\ntype Attributes = { name: string; value: string }[];\n\nfunction appendAttributes(metadata: NftMetadata, attributes: Attributes) {\n  return attributes.reduce(\n    (acc, row) => {\n      const keys = Object.keys(NftMetadata.props);\n      const key = keys.find(k => k === row.name) as keyof NftMetadata;\n      if (key && NftMetadata.props[key].decode(row.value)._tag === 'Right') {\n        return { ...acc, [key]: row.value };\n      }\n      const attribute = { name: row.name, value: row.value };\n      return { ...acc, attributes: [...acc.attributes ?? [], attribute] };\n    }, \n    metadata\n  );\n}\n\nfunction appendStateMetadata(\n  state: State['createNft'],\n  metadata: NftMetadata,\n  system: SystemWithToolkit | SystemWithWallet\n) {\n  const appendedMetadata: NftMetadata = {\n    ...metadata,\n    name: state.fields.name as string,\n    minter: system.tzPublicKey || undefined,\n    description: state.fields.description || undefined,\n    attributes: []\n  };\n  return appendAttributes(appendedMetadata, state.attributes);\n}\n\nexport const mintTokenAction = createAsyncThunk<\n  { contract: string; metadata: ReturnType<typeof appendStateMetadata> },\n  undefined,\n  Options\n>(\n  'action/mintToken',\n  async (_, { getState, rejectWithValue, dispatch, requestId }) => {\n    const { system, createNft: state } = getState();\n    if (state.selectedFile === null) {\n      return rejectWithValue({\n        kind: ErrorKind.UnknownError,\n        message: 'Could not mint token: no file selected'\n      });\n    } else if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message: 'Could not mint token: no wallet connected'\n      });\n    } else if (!validateCreateNftForm(state)) {\n      return rejectWithValue({\n        kind: ErrorKind.CreateNftFormInvalid,\n        message: 'Could not mint token: form validation failed'\n      });\n    }\n\n    let file: File;\n    try {\n      const { objectUrl, name, type } = state.selectedFile;\n      const fetched = await fetch(objectUrl);\n      const blob = await fetched.blob();\n      file = new File([blob], name, { type });\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.UnknownError,\n        message: 'Could not mint token: selected file not found'\n      });\n    }\n\n    let ipfsMetadata: NftMetadata = {};\n    try {\n      if (/^image\\/.*/.test(file.type)) {\n        const imageResponse = await uploadIPFSImageWithThumbnail(\n          system.config.ipfsApi,\n          file\n        );\n        ipfsMetadata.artifactUri = imageResponse.data.ipfsUri;\n        ipfsMetadata.displayUri = imageResponse.data.ipfsUri;\n        ipfsMetadata.thumbnailUri = imageResponse.data.thumbnail.ipfsUri;\n        ipfsMetadata.formats = [\n          {\n            fileSize: imageResponse.headers['content-length'],\n            mimeType: imageResponse.headers['content-type']\n          }\n        ];\n      } else if (/^video\\/.*/.test(file.type)) {\n        if (state.displayImageFile === null) {\n          return rejectWithValue({\n            kind: ErrorKind.IPFSUploadFailed,\n            message: 'Ipfs upload failed: Video display file not found'\n          });\n        }\n        let displayFile: File;\n        try {\n          const { objectUrl, name, type } = state.displayImageFile;\n          const fetched = await fetch(objectUrl);\n          const blob = await fetched.blob();\n          displayFile = new File([blob], name, { type });\n        } catch (e) {\n          return rejectWithValue({\n            kind: ErrorKind.UnknownError,\n            message: 'Could not mint token: video display file not found'\n          });\n        }\n        const fileResponse = await uploadIPFSFile(system.config.ipfsApi, file);\n        const imageResponse = await uploadIPFSImageWithThumbnail(\n          system.config.ipfsApi,\n          displayFile\n        );\n        ipfsMetadata.artifactUri = fileResponse.data.ipfsUri;\n        ipfsMetadata.displayUri = imageResponse.data.ipfsUri;\n        ipfsMetadata.thumbnailUri = imageResponse.data.thumbnail.ipfsUri;\n        ipfsMetadata.formats = [\n          {\n            fileSize: fileResponse.headers['content-length'],\n            mimeType: fileResponse.headers['content-type']\n          }\n        ];\n      } else {\n        const fileResponse = await uploadIPFSFile(system.config.ipfsApi, file);\n        ipfsMetadata.artifactUri = fileResponse.data.ipfsUri;\n        ipfsMetadata.formats = [\n          {\n            fileSize: fileResponse.data.size,\n            mimeType: file.type\n          }\n        ];\n      }\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.IPFSUploadFailed,\n        message: 'IPFS upload failed'\n      });\n    }\n\n    const address = state.collectionAddress as string;\n    const metadata = appendStateMetadata(state, ipfsMetadata, system);\n\n    try {\n      const op = await mintToken(system, address, metadata);\n      const pendingMessage = `Minting new token: ${metadata.name}`;\n      dispatch(notifyPending(requestId, pendingMessage));\n      await op.confirmation(2);\n\n      const fulfilledMessage = `Created new token: ${metadata.name} in ${address}`;\n      dispatch(notifyFulfilled(requestId, fulfilledMessage));\n      dispatch(getContractNftsQuery(address));\n      return { contract: address, metadata };\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.MintTokenFailed,\n        message: 'Mint token failed'\n      });\n    }\n  }\n);\n\ninterface NonEmptyArrayBrand {\n  readonly NonEmptyArray: unique symbol;\n}\n\ntype ParsedCsvRow = t.TypeOf<typeof ParsedCsvRow>;\nconst ParsedCsvRow = t.intersection([\n  t.type({\n    name: t.string,\n    description: t.string,\n    artifactUri: t.string,\n    collection: t.string\n  }),\n  t.partial({\n    displayUri: t.string\n  }),\n  t.record(t.string, t.string)\n]);\n\nconst ParsedCsv = t.brand(\n  t.array(ParsedCsvRow),\n  (n): n is t.Branded<Array<ParsedCsvRow>, NonEmptyArrayBrand> => n.length > 0,\n  'NonEmptyArray'\n);\n\nexport const mintCsvTokensAction = createAsyncThunk<null, undefined, Options>(\n  'action/mintCsvTokens',\n  async (_, { getState, rejectWithValue, dispatch, requestId }) => {\n    const { system, createNftCsvImport: state } = getState();\n    if (system.status !== 'WalletConnected') {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message: 'Wallet not connected'\n      });\n    }\n    if (state.selectedCsvFile === null) {\n      return rejectWithValue({\n        kind: ErrorKind.UnknownError,\n        message: 'No CSV file selected'\n      });\n    }\n\n    let text: string;\n    try {\n      text = await fetch(state.selectedCsvFile.objectUrl).then(r => r.text());\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.UnknownError,\n        message: 'Could not mint tokens: selected CSV file not found'\n      });\n    }\n    const parsed = parse(text, { columns: true, skipEmptyLines: true });\n    if (!ParsedCsv.is(parsed)) {\n      console.log('ERROR:', parsed);\n      return rejectWithValue({\n        kind: ErrorKind.UnknownError,\n        message: ''\n      });\n    }\n    const attrRegex = /^attribute\\./;\n    const attrRegexTest = new RegExp(attrRegex.source + '.+');\n    const metadataArray = parsed.map(p => {\n      const attributes = Object.keys(p)\n        .filter(k => attrRegexTest.test(k))\n        .map(k => ({\n          name: k.split(attrRegex)[1],\n          value: p[k]\n        }));\n      const metadata: NftMetadata = {\n        name: p.name,\n        minter: system.tzPublicKey,\n        description: p.description,\n        artifactUri: p.artifactUri,\n        displayUri: p.displayUri,\n        attributes: [],\n      };\n      return appendAttributes(metadata, attributes);\n    });\n\n    try {\n      const address = parsed[0].collection;\n      const op = await mintTokens(system, address, metadataArray);\n      const pendingMessage = `Minting new tokens from CSV`;\n      dispatch(notifyPending(requestId, pendingMessage));\n      await op.confirmation(2);\n\n      const fulfilledMessage = `Created new tokens from CSV in ${address}`;\n      dispatch(notifyFulfilled(requestId, fulfilledMessage));\n      dispatch(getContractNftsQuery(address));\n    } catch (e) {\n      return rejectWithValue({\n        kind: ErrorKind.MintTokenFailed,\n        message: 'Mint tokens from CSV failed'\n      });\n    }\n\n    return null;\n  }\n);\n\nexport const transferTokenAction = createAsyncThunk<\n  { contract: string; tokenId: number; to: string },\n  { contract: string; tokenId: number; to: string },\n  Options\n>('action/transferToken', async (args, api) => {\n  const { getState, rejectWithValue, dispatch, requestId } = api;\n  const { contract, tokenId, to } = args;\n  const { system } = getState();\n  if (system.status !== 'WalletConnected') {\n    return rejectWithValue({\n      kind: ErrorKind.WalletNotConnected,\n      message: 'Could not transfer token: no wallet connected'\n    });\n  }\n  try {\n    const op = await transferToken(system, contract, tokenId, to);\n    dispatch(notifyPending(requestId, `Transferring token to ${to}`));\n    await op.confirmation(2);\n\n    dispatch(notifyFulfilled(requestId, `Transferred token to ${to}`));\n    dispatch(getContractNftsQuery(contract));\n    return args;\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.TransferTokenFailed,\n      message: 'Transfer token failed'\n    });\n  }\n});\n\nexport const listTokenAction = createAsyncThunk<\n  { contract: string; tokenId: number; salePrice: number },\n  { contract: string; tokenId: number; salePrice: number },\n  Options\n>('action/listToken', async (args, api) => {\n  const { getState, rejectWithValue, dispatch, requestId } = api;\n  const { contract, tokenId, salePrice } = args;\n  const { system } = getState();\n  const marketplaceContract =\n    system.config.contracts.marketplace.fixedPrice.tez;\n  if (system.status !== 'WalletConnected') {\n    return rejectWithValue({\n      kind: ErrorKind.WalletNotConnected,\n      message: 'Could not list token: no wallet connected'\n    });\n  }\n  try {\n    const op = await listTokenForSale(\n      system,\n      marketplaceContract,\n      contract,\n      tokenId,\n      salePrice,\n      1\n    );\n    const pendingMessage = `Listing token for sale for ${salePrice / 1000000}ꜩ`;\n    dispatch(notifyPending(requestId, pendingMessage));\n    await op.confirmation(2);\n\n    const fulfilledMessage = `Token listed for sale for ${\n      salePrice / 1000000\n    }ꜩ`;\n    dispatch(notifyFulfilled(requestId, fulfilledMessage));\n    dispatch(getContractNftsQuery(contract));\n    return args;\n  } catch (e) {\n      console.log(e);\n    return rejectWithValue({\n      kind: ErrorKind.ListTokenFailed,\n      message: 'List token failed'\n    });\n  }\n});\n\nexport const cancelTokenSaleAction = createAsyncThunk<\n  { contract: string; tokenId: number; saleId: number; saleType: string },\n  { contract: string; tokenId: number; saleId: number; saleType: string },\n  Options\n>('action/cancelTokenSale', async (args, api) => {\n  const { getState, rejectWithValue, dispatch, requestId } = api;\n  const { contract, tokenId, saleId, saleType } = args;\n  const { system } = getState();\n  const marketplaceContract =\n    system.config.contracts.marketplace.fixedPrice.tez;\n  if (system.status !== 'WalletConnected') {\n    return rejectWithValue({\n      kind: ErrorKind.WalletNotConnected,\n      message: 'Could not list token: no wallet connected'\n    });\n  }\n  try {\n    let op;\n    if (saleType === \"fixedPriceLegacy\") {\n      op = await cancelTokenSaleLegacy(\n        system,\n        marketplaceContract,\n        contract,\n        tokenId\n      );\n    } else {\n      op = await cancelTokenSale(\n        system,\n        marketplaceContract,\n        contract,\n        tokenId,\n        saleId\n      );\n    }\n\n    dispatch(notifyPending(requestId, `Canceling token sale`));\n    await op.confirmation(2);\n\n    dispatch(notifyFulfilled(requestId, `Token sale canceled`));\n    dispatch(getContractNftsQuery(contract));\n    return { contract: contract, tokenId: tokenId, saleId: saleId, saleType: saleType };\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.CancelTokenSaleFailed,\n      message: 'Cancel token sale failed'\n    });\n  }\n});\n\nexport const buyTokenAction = createAsyncThunk<\n  { contract: string; tokenId: number; saleId: number; saleType: string },\n  { contract: string; tokenId: number; tokenSeller: string; salePrice: number; saleId: number; saleType: string },\n  Options\n>('action/buyToken', async (args, api) => {\n  const { getState, rejectWithValue, dispatch, requestId } = api;\n  const { contract, tokenId, tokenSeller, salePrice, saleId, saleType } = args;\n  let { system } = getState();\n  const marketplaceContract =\n    system.config.contracts.marketplace.fixedPrice.tez;\n  if (system.status !== 'WalletConnected') {\n    const res = await dispatch(connectWallet());\n    if (!res.payload || !('wallet' in res.payload)) {\n      return rejectWithValue({\n        kind: ErrorKind.WalletNotConnected,\n        message: 'Could not list token: no wallet connected'\n      });\n    }\n    system = res.payload;\n  }\n  try {\n    let op;\n    if (saleType === \"fixedPriceLegacy\") {\n      op = await buyTokenLegacy(\n        system,\n        marketplaceContract,\n        contract,\n        tokenId,\n        tokenSeller,\n        salePrice\n      );\n    } else {\n      op = await buyToken(\n        system,\n        marketplaceContract,\n        saleId,\n        salePrice\n      );\n    }\n    const pendingMessage = `Buying token from ${tokenSeller} for ${salePrice}`;\n    dispatch(notifyPending(requestId, pendingMessage));\n    await op.confirmation(2);\n\n    const fulfilledMessage = `Bought token from ${tokenSeller} for ${salePrice}`;\n    dispatch(notifyFulfilled(requestId, fulfilledMessage));\n    dispatch(getContractNftsQuery(contract));\n    return { contract: contract, tokenId: tokenId, saleId: saleId, saleType: saleType };\n  } catch (e) {\n    return rejectWithValue({\n      kind: ErrorKind.BuyTokenFailed,\n      message: 'Purchase token failed'\n    });\n  }\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NftMetadataAttribute } from '../../lib/nfts/decoders';\nimport { readFileAsDataUrlAction } from '../async/actions';\n\n// State\n\ntype Step = 'file_upload' | 'asset_details' | 'collection_select' | 'confirm';\n\nexport const steps: Step[] = ['file_upload', 'asset_details', 'confirm'];\n\ninterface Fields {\n  name: string | null;\n  description: string | null;\n}\n\nexport enum CreateStatus {\n  Ready = 'ready',\n  InProgress = 'inProgress',\n  Complete = 'complete'\n}\n\nexport interface SelectedFile {\n  objectUrl: string;\n  name: string;\n  type: string;\n  size: number;\n}\n\nexport interface UploadedArtifact {\n  artifactUri: string;\n  thumbnailUri: string;\n}\n\nexport interface CreateNftState {\n  step: Step;\n  selectedFile: SelectedFile | null;\n  displayImageFile: SelectedFile | null;\n  uploadedArtifact: UploadedArtifact | null;\n  fields: Fields;\n  attributes: Array<NftMetadataAttribute>;\n  collectionAddress: string | null;\n  createStatus: CreateStatus;\n}\n\nexport const initialState: CreateNftState = {\n  step: 'file_upload',\n  selectedFile: null,\n  displayImageFile: null,\n  uploadedArtifact: null,\n  fields: {\n    name: null,\n    description: null\n  },\n  attributes: [],\n  collectionAddress: null,\n  createStatus: CreateStatus.Ready\n};\n\n// Async Thunks\n\n// Reducers & Slice\n\ntype UpdateFieldAction = PayloadAction<{ name: keyof Fields; value: string }>;\ntype UpdateRowNameAction = PayloadAction<{ key: number; name: string }>;\ntype UpdateRowValueAction = PayloadAction<{ key: number; value: string }>;\n\nconst slice = createSlice({\n  name: 'createNft',\n  initialState,\n  reducers: {\n    incrementStep(state) {\n      const stepIdx = steps.indexOf(state.step);\n      if (stepIdx + 1 < steps.length) {\n        state.step = steps[stepIdx + 1];\n      }\n    },\n    decrementStep(state) {\n      const stepIdx = steps.indexOf(state.step);\n      if (stepIdx > 0) {\n        state.step = steps[stepIdx - 1];\n      }\n    },\n    updateField(state, action: UpdateFieldAction) {\n      state.fields[action.payload.name] = action.payload.value;\n    },\n    updateSelectedFile(state, action: PayloadAction<SelectedFile>) {\n      state.selectedFile = action.payload;\n    },\n    clearSelectedfile(state) {\n      state.selectedFile = null;\n    },\n    updateDisplayImageFile(state, action: PayloadAction<SelectedFile>) {\n      state.displayImageFile = action.payload;\n    },\n    clearDisplayImagFile(state) {\n      state.displayImageFile = null;\n    },\n    addMetadataRow(state) {\n      state.attributes.push({ name: '', value: '' });\n    },\n    updateMetadataRowName(state, action: UpdateRowNameAction) {\n      if (state.attributes[action.payload.key]) {\n        state.attributes[action.payload.key].name = action.payload.name;\n      }\n    },\n    updateMetadataRowValue(state, action: UpdateRowValueAction) {\n      if (state.attributes[action.payload.key]) {\n        state.attributes[action.payload.key].value = action.payload.value;\n      }\n    },\n    deleteMetadataRow(state, action: PayloadAction<{ key: number }>) {\n      state.attributes.splice(action.payload.key, 1);\n    },\n    selectCollection(state, action: PayloadAction<string>) {\n      state.collectionAddress = action.payload;\n    },\n    setCreateStatus(state, action: PayloadAction<CreateStatus>) {\n      state.createStatus = action.payload;\n    },\n    clearForm() {\n      return initialState;\n    }\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(readFileAsDataUrlAction.fulfilled, (state, action) => {\n      if (action.payload.ns === 'createNft') {\n        state.selectedFile = action.payload.result;\n      }\n    });\n  }\n});\n\nexport const {\n  incrementStep,\n  decrementStep,\n  updateField,\n  updateSelectedFile,\n  clearSelectedfile,\n  updateDisplayImageFile,\n  addMetadataRow,\n  updateMetadataRowName,\n  updateMetadataRowValue,\n  deleteMetadataRow,\n  selectCollection,\n  setCreateStatus,\n  clearForm\n} = slice.actions;\n\nexport default slice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { readFileAsDataUrlAction } from '../async/actions';\n\nexport interface SelectedFile {\n  objectUrl: string;\n  name: string;\n  type: string;\n  size: number;\n}\n\nexport interface CreateNftCsvImportState {\n  selectedCsvFile: SelectedFile | null;\n}\n\nexport const initialState: CreateNftCsvImportState = {\n  selectedCsvFile: null\n};\n\nconst slice = createSlice({\n  name: 'createNftCsvImport',\n  initialState,\n  reducers: {\n    updateSelectedCsvFile(state, action: PayloadAction<SelectedFile>) {\n      state.selectedCsvFile = action.payload;\n    },\n    clearSelectedCsvFile(state) {\n      state.selectedCsvFile = null;\n    }\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(readFileAsDataUrlAction.fulfilled, (state, action) => {\n      if (action.payload.ns === 'createNftCsvImport') {\n        state.selectedCsvFile = action.payload.result;\n      }\n    });\n  }\n});\n\nexport const { updateSelectedCsvFile, clearSelectedCsvFile } = slice.actions;\n\nexport default slice;\n","import { Minter, SystemWithToolkit, SystemWithWallet } from '../../lib/system';\nimport { createSlice } from '@reduxjs/toolkit';\nimport config from '../../config.json';\nimport {\n  connectWallet,\n  disconnectWallet,\n  reconnectWallet\n} from '../async/wallet';\n\nconst initialState = Minter.connectToolkit(Minter.configure(config)) as\n  | SystemWithToolkit\n  | SystemWithWallet;\n\nconst slice = createSlice({\n  name: 'system',\n  initialState,\n  reducers: {},\n  extraReducers: ({ addCase }) => {\n    addCase(connectWallet.fulfilled, (_, { payload }) => payload);\n    addCase(disconnectWallet.fulfilled, (_, { payload }) => payload);\n    addCase(reconnectWallet.fulfilled, (_, { payload }) => payload);\n  }\n});\n\nexport default slice;\n","import { createSlice, PayloadAction, SerializedError } from '@reduxjs/toolkit';\nimport {\n  createAssetContractAction,\n  mintTokenAction,\n  transferTokenAction,\n  listTokenAction,\n  cancelTokenSaleAction,\n  buyTokenAction,\n  mintCsvTokensAction\n} from '../async/actions';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery,\n  getWalletAssetContractsQuery\n} from '../async/queries';\nimport { ErrorKind, RejectValue } from '../async/errors';\n\nexport type StatusKey = 'ready' | 'in_transit' | 'complete';\n\nexport interface Status {\n  status: StatusKey;\n  error: {\n    rejectValue: RejectValue;\n    serialized: SerializedError;\n  } | null;\n}\n\nexport interface StatusState {\n  createAssetContract: Status;\n  mintToken: Status;\n  mintCsvTokens: Status;\n  transferToken: Status;\n  listToken: Status;\n  cancelTokenSale: Status;\n  buyToken: Status;\n  getContractNfts: Status;\n  getNftAssetContract: Status;\n  getWalletAssetContracts: Status;\n}\n\nexport type Method = keyof StatusState;\n\nconst defaultStatus: Status = { status: 'ready', error: null };\n\nconst initialState: StatusState = {\n  createAssetContract: defaultStatus,\n  mintToken: defaultStatus,\n  mintCsvTokens: defaultStatus,\n  transferToken: defaultStatus,\n  listToken: defaultStatus,\n  cancelTokenSale: defaultStatus,\n  buyToken: defaultStatus,\n  getContractNfts: defaultStatus,\n  getNftAssetContract: defaultStatus,\n  getWalletAssetContracts: defaultStatus\n};\n\ntype SetStatusAction = PayloadAction<{ method: Method; status: StatusKey }>;\ntype ClearErrorAction = PayloadAction<{ method: Method }>;\n\nfunction methodMap<A>(method: keyof StatusState, action: A) {\n  return { method, action };\n}\n\nconst slice = createSlice({\n  name: 'status',\n  initialState,\n  reducers: {\n    setStatus(state, { payload }: SetStatusAction) {\n      state[payload.method].status = payload.status;\n    },\n    clearError(state, { payload }: ClearErrorAction) {\n      state[payload.method].error = null;\n    }\n  },\n  extraReducers: ({ addCase }) => {\n    [\n      methodMap('createAssetContract', createAssetContractAction),\n      methodMap('mintToken', mintTokenAction),\n      methodMap('mintCsvTokens', mintCsvTokensAction),\n      methodMap('transferToken', transferTokenAction),\n      methodMap('listToken', listTokenAction),\n      methodMap('cancelTokenSale', cancelTokenSaleAction),\n      methodMap('buyToken', buyTokenAction),\n      methodMap('getContractNfts', getContractNftsQuery),\n      methodMap('getNftAssetContract', getNftAssetContractQuery),\n      methodMap('getWalletAssetContracts', getWalletAssetContractsQuery)\n    ].forEach(({ method, action }) => {\n      addCase(action.pending, state => {\n        state[method].status = 'in_transit';\n      });\n      addCase(action.fulfilled, state => {\n        state[method].status = 'complete';\n      });\n      addCase(action.rejected, (state, action) => {\n        const rejectValue = action.payload\n          ? action.payload\n          : {\n              kind: ErrorKind.UnknownError,\n              message: 'Unknown error'\n            };\n        state[method].error = {\n          rejectValue,\n          serialized: action.error\n        };\n      });\n    });\n  }\n});\n\nexport const { setStatus, clearError } = slice.actions;\n\nexport default slice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  pushNotification,\n  readNotification,\n  deliverNotification\n} from './notificationsActions';\nimport {\n  createAssetContractAction,\n  mintTokenAction,\n  transferTokenAction,\n  listTokenAction,\n  cancelTokenSaleAction,\n  buyTokenAction\n} from '../async/actions';\nimport { connectWallet, disconnectWallet } from '../async/wallet';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery,\n  getWalletAssetContractsQuery\n} from '../async/queries';\nimport { ErrorKind } from '../async/errors';\n\nexport interface Notification {\n  requestId: string;\n  read: boolean;\n  delivered: boolean;\n  status: 'success' | 'pending' | 'error';\n  title: string;\n  description: string;\n  kind: ErrorKind | null;\n}\n\nexport type NotificationState = Notification[];\n\nconst initialState: NotificationState = [];\n\nconst slice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {},\n  extraReducers: ({ addCase }) => {\n    addCase(pushNotification, (state, { payload }) => {\n      state.push(payload);\n    });\n\n    addCase(readNotification, (state, { payload: requestId }) => {\n      return state.map(n => {\n        return n.requestId === requestId ? { ...n, read: true } : n;\n      });\n    });\n\n    addCase(deliverNotification, (state, { payload: requestId }) => {\n      return state.map(n => {\n        return n.requestId === requestId ? { ...n, delivered: true } : n;\n      });\n    });\n\n    // Action errors are abstracted by their payloads. This allows us to iterate\n    // through a list of actions and assign a notification without individually\n    // matching against each one through `addCase`\n    [\n      createAssetContractAction,\n      mintTokenAction,\n      transferTokenAction,\n      listTokenAction,\n      cancelTokenSaleAction,\n      buyTokenAction,\n      getContractNftsQuery,\n      getNftAssetContractQuery,\n      getWalletAssetContractsQuery,\n      connectWallet,\n      disconnectWallet\n    ].forEach(action => {\n      addCase(action.rejected, (state, { meta, payload }) => {\n        if (!payload) {\n          return;\n        }\n        state.push({\n          requestId: meta.requestId,\n          read: false,\n          delivered: false,\n          status: 'error',\n          title: 'Error',\n          description: payload.message,\n          kind: payload.kind\n        });\n      });\n    });\n  }\n});\n\nexport default slice;\n","import { createSlice, PayloadAction, CaseReducer } from '@reduxjs/toolkit';\nimport {\n  getMarketplaceNftsQuery,\n  loadMoreMarketplaceNftsQuery\n} from '../async/queries';\nimport { Nft } from '../../lib/nfts/decoders';\nimport { MarketplaceNftLoadingData } from '../../lib/nfts/queries';\nimport config from '../../config.json';\n\n//// State\n\n// Types\n\nexport type Token = Nft;\n\nexport interface Marketplace {\n  address: string;\n  tokens: MarketplaceNftLoadingData[] | null;\n  loaded: boolean;\n}\n\nexport interface MarketplaceState {\n  marketplace: Marketplace;\n}\n\ntype Reducer<A> = CaseReducer<MarketplaceState, PayloadAction<A>>;\n\n// Data\n\nconst globalMarketplaceAddress = config.contracts.marketplace.fixedPrice.tez;\n\nexport const initialState: MarketplaceState = {\n  marketplace: {\n    address: globalMarketplaceAddress,\n    tokens: null,\n    loaded: false\n  }\n};\n\n//// Reducers & Slice\n\ntype PopulateMarketplace = Reducer<{ tokens: MarketplaceNftLoadingData[] }>;\n\nconst populateMarketplaceR: PopulateMarketplace = (state, { payload }) => {\n  state.marketplace.tokens = payload.tokens;\n  state.marketplace.loaded = true;\n};\n\nconst slice = createSlice({\n  name: 'marketplace',\n  initialState,\n  reducers: {\n    populateMarketplace: populateMarketplaceR\n  },\n  extraReducers: ({ addCase }) => {\n    addCase(getMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n    addCase(loadMoreMarketplaceNftsQuery.fulfilled, populateMarketplaceR);\n  }\n});\n\nexport const { populateMarketplace } = slice.actions;\n\nexport default slice;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport {\n  useSelector as baseUseSelector,\n  useDispatch as baseUseDispatch\n} from 'react-redux';\nimport collectionsSlice from './slices/collections';\nimport createNftSlice from './slices/createNft';\nimport createNftCsvImportSlice from './slices/createNftCsvImport';\nimport systemSlice from './slices/system';\nimport statusSlice from './slices/status';\nimport notificationsSlice from './slices/notifications';\nimport marketplaceSlice from './slices/marketplace';\n\nexport const reducer = combineReducers({\n  collections: collectionsSlice.reducer,\n  marketplace: marketplaceSlice.reducer,\n  createNft: createNftSlice.reducer,\n  createNftCsvImport: createNftCsvImportSlice.reducer,\n  system: systemSlice.reducer,\n  status: statusSlice.reducer,\n  notifications: notificationsSlice.reducer\n});\n\nexport const store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      immutableCheck: {\n        ignoredPaths: ['system']\n      },\n      serializableCheck: {\n        ignoredPaths: ['system'],\n        ignoredActions: [\n          'wallet/connect/fulfilled',\n          'wallet/reconnect/fulfilled',\n          'wallet/disconnect/fulfilled'\n        ]\n      }\n    })\n});\n\nexport type State = ReturnType<typeof reducer>;\nexport type Dispatch = typeof store.dispatch;\nexport const useDispatch = () => baseUseDispatch<Dispatch>();\n\nexport function useSelector<TSelect = unknown>(\n  selector: (s: State) => TSelect,\n  equalityFn?: (left: TSelect, right: TSelect) => boolean\n) {\n  return baseUseSelector<State, TSelect>(selector, equalityFn);\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Text,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  Spinner,\n  Flex,\n  Heading,\n  UseDisclosureReturn\n} from '@chakra-ui/react';\nimport { CheckCircle, AlertCircle, X } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  clearError,\n  setStatus,\n  Status,\n  Method\n} from '../../../reducer/slices/status';\n\ninterface ContentProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onRetry: () => void;\n  onCancel: () => void;\n  status: Status;\n  sync: boolean;\n  pendingMessage?: React.ReactNode;\n  pendingAsyncMessage?: React.ReactNode;\n  completeMessage?: React.ReactNode;\n  errorMessage?: React.ReactNode;\n}\n\nfunction Content(props: ContentProps) {\n  const { status, onClose, onRetry, onCancel } = props;\n  if (status.error) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Box color=\"brand.blue\" mb={6}>\n          <AlertCircle size=\"70px\" />\n        </Box>\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\" mb={6}>\n          {props.errorMessage || 'Operation failed'}\n        </Heading>\n        <Flex flexDir=\"row\" justify=\"center\">\n          <MinterButton variant=\"primaryAction\" onClick={() => onRetry()}>\n            Retry\n          </MinterButton>\n          <MinterButton\n            variant=\"tertiaryAction\"\n            onClick={() => onCancel()}\n            display=\"flex\"\n            alignItems=\"center\"\n            ml={4}\n          >\n            <Box color=\"currentcolor\">\n              <X size={16} strokeWidth=\"3\" />\n            </Box>\n            <Text fontSize={16} ml={1} fontWeight=\"600\">\n              Close\n            </Text>\n          </MinterButton>\n        </Flex>\n      </Flex>\n    );\n  }\n  if (status.status === 'in_transit') {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          {props.sync\n            ? props.pendingMessage || 'Operation pending...'\n            : props.pendingAsyncMessage || 'Opening wallet...'}\n        </Heading>\n      </Flex>\n    );\n  }\n  if (status.status === 'complete') {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" px={4} py={10}>\n        <Box color=\"brand.blue\" mb={6}>\n          <CheckCircle size=\"70px\" />\n        </Box>\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\" mb={6}>\n          {props.completeMessage || 'Operation complete'}\n        </Heading>\n        <MinterButton variant=\"primaryAction\" onClick={() => onClose()}>\n          Close\n        </MinterButton>\n      </Flex>\n    );\n  }\n  return null;\n}\n\nexport type AsyncThunkActionResult = { requestId: string } & Promise<{\n  meta: { requestStatus: 'fulfilled' | 'rejected' };\n}>;\n\ninterface FormModalProps {\n  // Required Props\n  disclosure: UseDisclosureReturn;\n  method: Method;\n  dispatchThunk: () => AsyncThunkActionResult;\n  // Optional Props\n  sync?: boolean;\n  body?: (onSubmit: () => Promise<void>) => React.ReactNode;\n  dispatchOnOpen?: boolean;\n  initialRef?: React.MutableRefObject<null>;\n  onComplete?: () => void;\n  afterClose?: () => void;\n  pendingMessage?: React.ReactNode;\n  pendingAsyncMessage?: React.ReactNode;\n  completeMessage?: React.ReactNode;\n}\n\nexport default function FormModal(props: FormModalProps) {\n  const { sync = false, dispatchOnOpen = false, onComplete, method } = props;\n  const { isOpen, onOpen, onClose } = props.disclosure;\n  const [requestId, setRequestId] = useState<string | null>(null);\n  const status = useSelector(s => s.status[props.method]);\n  const dispatch = useDispatch();\n  const notification = useSelector(s =>\n    s.notifications.find(\n      n => n.requestId === requestId && n.status === 'pending' && !n.delivered\n    )\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onSubmit = async () => {\n    const result = props.dispatchThunk();\n    setRequestId(result.requestId);\n    dispatch(setStatus({ method, status: 'in_transit' }));\n    const requestStatus = (await result).meta.requestStatus;\n    if (requestStatus === 'fulfilled') {\n      dispatch(setStatus({ method, status: sync ? 'complete' : 'ready' }));\n      onComplete?.call(null);\n    }\n  };\n\n  const hasError = status.error !== null;\n\n  useEffect(() => {\n    if (!requestId && isOpen && dispatchOnOpen && !hasError) {\n      onSubmit();\n    }\n  }, [isOpen, dispatchOnOpen, hasError, onSubmit, requestId]);\n\n  const closeAndReset = (withCallback = true) => {\n    onClose();\n    setRequestId(null);\n    dispatch(clearError({ method: props.method }));\n    withCallback && props.afterClose && props.afterClose();\n  };\n\n  const closeIfReadyOrComplete = () => {\n    if (status.status !== 'in_transit' || hasError) {\n      closeAndReset();\n    }\n  };\n\n  useEffect(() => {\n    if (!sync && isOpen && !hasError && notification) {\n      return closeAndReset();\n    } else if (!isOpen && hasError) {\n      return onOpen();\n    }\n  });\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onClose={() => closeIfReadyOrComplete()}\n        initialFocusRef={props.initialRef}\n        closeOnEsc={false}\n        closeOnOverlayClick={false}\n        onEsc={() => closeIfReadyOrComplete()}\n        onOverlayClick={() => closeIfReadyOrComplete()}\n      >\n        <ModalOverlay />\n        <ModalContent mt={40}>\n          {status.status === 'ready' ? (\n            props.body ? (\n              props.body(onSubmit)\n            ) : null\n          ) : (\n            <Content\n              sync={sync}\n              isOpen={isOpen}\n              status={status}\n              onClose={() => closeIfReadyOrComplete()}\n              onCancel={() => closeAndReset(false)}\n              onRetry={() => {\n                dispatch(clearError({ method: props.method }));\n                onSubmit();\n              }}\n              pendingMessage={props.pendingMessage}\n              pendingAsyncMessage={props.pendingAsyncMessage}\n              completeMessage={props.completeMessage}\n            />\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport interface BaseModalProps {\n  disclosure: UseDisclosureReturn;\n  sync?: boolean;\n}\n\nexport interface BaseModalButtonProps {\n  sync?: boolean;\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Plus } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useDispatch } from '../../../reducer';\nimport { createAssetContractAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\n\ninterface CreateCollectionModalProps extends BaseModalProps {}\n\nfunction CreateCollectionModal(props: CreateCollectionModalProps) {\n  const [contractName, setContractName] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"createAssetContract\"\n      dispatchThunk={() => dispatch(createAssetContractAction(contractName))}\n      onComplete={() => setContractName('')}\n      initialRef={initialRef}\n      pendingMessage=\"Creating collection...\"\n      completeMessage=\"Collection created\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>New Collection</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl>\n              <FormLabel fontFamily=\"mono\">Collection Name</FormLabel>\n              <Input\n                autoFocus={true}\n                ref={initialRef}\n                placeholder=\"Input your collection name\"\n                value={contractName}\n                onChange={e => setContractName(e.target.value)}\n              />\n            </FormControl>\n          </ModalBody>\n          <ModalFooter>\n            <MinterButton variant=\"primaryAction\" onClick={() => onSubmit()}>\n              Create Collection\n            </MinterButton>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface CreateCollectionButtonProps extends BaseModalButtonProps {}\n\nexport function CreateCollectionButton(props: CreateCollectionButtonProps) {\n  const disclosure = useDisclosure();\n  return (\n    <>\n      <MinterButton variant=\"primaryActionInverted\" onClick={disclosure.onOpen}>\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>New Collection</Text>\n      </MinterButton>\n      <CreateCollectionModal disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport {\n  Flex,\n  Heading,\n  Box,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuOptionGroup,\n  MenuItemOption\n} from '@chakra-ui/react';\nimport { CreateCollectionButton } from '../common/modals/CreateCollection';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { selectCollection } from '../../reducer/slices/createNft';\nimport { getWalletAssetContractsQuery } from '../../reducer/async/queries';\nimport { ChevronDown } from 'react-feather';\n\nexport default function CollectionSelect() {\n  const collections = useSelector(s => s.collections.collections);\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getWalletAssetContractsQuery());\n  }, [collections, dispatch]);\n\n  return (\n    <Flex pb={8} flexDir=\"column\">\n      <Flex pb={4} align=\"center\" justify=\"space-between\">\n        <Heading size=\"md\">Select a collection</Heading>\n        <CreateCollectionButton sync={true} />\n      </Flex>\n      <Menu>\n        <MenuButton\n          as={Button}\n          border=\"1px solid\"\n          borderColor=\"brand.gray\"\n          fontSize=\"lg\"\n          fontWeight=\"normal\"\n          py={3}\n          height=\"auto\"\n          backgroundColor=\"white\"\n          color={state.collectionAddress ? 'brand.black' : 'brand.gray'}\n        >\n          <Flex align=\"center\">\n            <Box mr={3}>\n              <ChevronDown />\n            </Box>\n            {(state.collectionAddress &&\n              collections[state.collectionAddress]?.metadata?.name) ||\n              'No collection selected'}\n          </Flex>\n        </MenuButton>\n        <MenuList>\n          <MenuOptionGroup\n            type=\"radio\"\n            defaultValue={state.collectionAddress || ''}\n          >\n            {Object.keys(collections).map(address => (\n              <MenuItemOption\n                key={address}\n                value={address}\n                selected={address === state.collectionAddress}\n                onClick={() => dispatch(selectCollection(address))}\n              >\n                {collections[address].metadata.name}\n              </MenuItemOption>\n            ))}\n          </MenuOptionGroup>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n  Textarea\n} from '@chakra-ui/react';\nimport { Plus, X } from 'react-feather';\nimport { MinterButton } from '../common';\n\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  addMetadataRow,\n  deleteMetadataRow,\n  updateField,\n  updateMetadataRowName,\n  updateMetadataRowValue\n} from '../../reducer/slices/createNft';\nimport CollectionSelect from './CollectionSelect';\n\nconst DESCRIPTION_PLACEHOLDER =\n  'e.g. “This is an exclusive japanese comic illustration. Once you purchase it you will be able to get the t-shirt”';\n\nexport default function Form() {\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n  const { name, description } = state.fields;\n  return (\n    <>\n      <CollectionSelect />\n      <Heading size=\"md\" paddingBottom={6}>\n        What properties would you like to give your asset?\n      </Heading>\n      <FormControl paddingBottom={6}>\n        <FormLabel fontFamily=\"mono\">Asset Name</FormLabel>\n        <Input\n          autoFocus={true}\n          placeholder=\"Input your asset name\"\n          value={name || ''}\n          onChange={e =>\n            dispatch(updateField({ name: 'name', value: e.target.value }))\n          }\n        />\n      </FormControl>\n      <FormControl paddingBottom={6}>\n        <FormLabel fontFamily=\"mono\" display=\"flex\">\n          Description\n          <Text marginLeft={2} color=\"brand.lightGray\">\n            (Optional)\n          </Text>\n        </FormLabel>\n        <Textarea\n          minHeight=\"150px\"\n          fontFamily=\"mono\"\n          placeholder={DESCRIPTION_PLACEHOLDER}\n          value={description || ''}\n          onChange={e =>\n            dispatch(\n              updateField({ name: 'description', value: e.target.value })\n            )\n          }\n        />\n      </FormControl>\n      <Divider borderColor=\"brand.lightBlue\" opacity=\"1\" marginY={10} />\n      <Heading size=\"md\" paddingBottom={6}>\n        Add attributes to your asset\n      </Heading>\n      {state.attributes.map(({ name, value }, key) => {\n        return (\n          <Flex key={key} align=\"center\" justify=\"stretch\">\n            <FormControl paddingBottom={6} paddingRight={2} flex=\"1\">\n              <FormLabel fontFamily=\"mono\">Name</FormLabel>\n              <Input\n                placeholder=\"e.g. Country\"\n                value={name || ''}\n                onChange={e =>\n                  dispatch(updateMetadataRowName({ key, name: e.target.value }))\n                }\n              />\n            </FormControl>\n            <FormControl paddingBottom={6} paddingLeft={2} flex=\"1\">\n              <FormLabel fontFamily=\"mono\">Value</FormLabel>\n              <Input\n                placeholder=\"e.g. India\"\n                value={value || ''}\n                onChange={e =>\n                  dispatch(\n                    updateMetadataRowValue({ key, value: e.target.value })\n                  )\n                }\n              />\n            </FormControl>\n            <Box\n              color=\"gray.400\"\n              ml={4}\n              mt={1}\n              cursor=\"pointer\"\n              onClick={() => dispatch(deleteMetadataRow({ key }))}\n              _hover={{\n                color: 'brand.red'\n              }}\n            >\n              <X size={30} />\n            </Box>\n          </Flex>\n        );\n      })}\n      <MinterButton\n        variant=\"primaryActionInverted\"\n        onClick={() => dispatch(addMetadataRow())}\n        pl={3}\n        pr={3}\n        pt={2}\n        pb={2}\n      >\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>Add field</Text>\n      </MinterButton>\n    </>\n  );\n}\n","import React, { createRef, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Image,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  mintCsvTokensAction,\n  readFileAsDataUrlAction\n} from '../../reducer/async/actions';\nimport {\n  updateDisplayImageFile,\n  SelectedFile\n} from '../../reducer/slices/createNft';\nimport FormModal from '../common/modals/FormModal';\nimport { useLocation } from 'wouter';\nimport { MinterButton } from '../common';\nimport { clearSelectedCsvFile } from '../../reducer/slices/createNftCsvImport';\n\nexport function FilePreview({ file }: { file: SelectedFile }) {\n  const dispatch = useDispatch();\n  if (/^image\\/.*/.test(file.type)) {\n    return (\n      <Image\n        src={file.objectUrl}\n        width=\"100%\"\n        height=\"100%\"\n        objectFit=\"scale-down\"\n      />\n    );\n  }\n  if (/^video\\/.*/.test(file.type)) {\n    const canvasRef = createRef<HTMLCanvasElement>();\n    return (\n      <>\n        <video\n          controls\n          muted\n          onLoadedData={e => {\n            const canvas = canvasRef.current;\n            if (!canvas) {\n              return console.error('`canvasRef` current element is null');\n            }\n            const video = e.currentTarget;\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            var canvasContext = canvas.getContext('2d');\n            if (!canvasContext) {\n              return console.error('`2d` canvas context not supported');\n            }\n            canvasContext.drawImage(video, 0, 0);\n            const type = 'image/png';\n            canvas.toBlob(blob => {\n              if (!blob) {\n                return console.error('Could not convert canvas to blob');\n              }\n              dispatch(\n                updateDisplayImageFile({\n                  objectUrl: URL.createObjectURL(blob),\n                  name: 'foo',\n                  size: blob.size,\n                  type: blob.type\n                })\n              );\n            }, type);\n          }}\n        >\n          <source src={file.objectUrl} type={file.type} />\n        </video>\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\n      </>\n    );\n  }\n  if (file.type === 'model/gltf+json' || file.type === 'model/gltf-binary') {\n    return (\n      <>\n        <model-viewer\n          camera-controls\n          auto-rotate\n          data-js-focus-visible\n          src={file.objectUrl}\n          class=\"upload-preview\"\n        ></model-viewer>\n      </>\n    );\n  }\n  return null;\n}\n\nexport default function FileUpload() {\n  const state = useSelector(s => s.createNft);\n  const dispatch = useDispatch();\n\n  const onDrop = useCallback(\n    (files: File[]) => {\n      dispatch(readFileAsDataUrlAction({ ns: 'createNft', file: files[0] }));\n    },\n    [dispatch]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    maxSize: 30 * 1024 * 1024,\n    accept: [\n      'image/*',\n      'video/*',\n      'model/gltf-binary',\n      'model/gltf+json',\n      '.gltf',\n      '.glb'\n    ]\n  });\n\n  return (\n    <Flex\n      align=\"center\"\n      flexDir=\"column\"\n      width=\"100%\"\n      flex=\"1\"\n      pt={{\n        base: 2,\n        md: 12\n      }}\n    >\n      <Heading size=\"lg\" paddingBottom={8} textAlign=\"center\">\n        Upload your file\n      </Heading>\n      <Text\n        fontSize=\"xs\"\n        color=\"brand.blue\"\n        fontFamily=\"mono\"\n        textAlign=\"center\"\n        pb={4}\n      >\n        JPG, PNG, GIF, WEBP, SVG, MP4, WebM, Ogg, Gltf, Glb. Max size 30mb\n      </Text>\n      <Flex\n        borderStyle=\"dashed\"\n        borderWidth=\"2px\"\n        borderColor=\"brand.lightBlue\"\n        borderRadius=\"3px\"\n        width=\"100%\"\n        justify=\"center\"\n        align=\"center\"\n        {...getRootProps()}\n      >\n        <Box as=\"input\" {...getInputProps()} />\n        {state.selectedFile?.objectUrl ? (\n          <Box p={4}>\n            <Flex\n              justify=\"center\"\n              align=\"center\"\n              maxWidth=\"400px\"\n              maxHeight=\"400px\"\n              overflow=\"hidden\"\n            >\n              <FilePreview file={state.selectedFile} />\n            </Flex>\n          </Box>\n        ) : (\n          <Flex\n            borderColor=\"white\"\n            borderWidth=\"1px\"\n            flexDir=\"column\"\n            align=\"center\"\n            py={24}\n            bg=\"brand.brightGray\"\n            flex=\"1\"\n          >\n            <Text fontSize={20} textAlign=\"center\" paddingX={4}>\n              Click or drag file to this area to upload\n            </Text>\n            <Text fontSize={18} color=\"brand.gray\">\n              Support for single file\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport function CsvFileUpload() {\n  const state = useSelector(s => s.createNftCsvImport);\n  const dispatch = useDispatch();\n  const disclosure = useDisclosure();\n  const [, setLocation] = useLocation();\n\n  const onDrop = useCallback(\n    (files: File[]) => {\n      dispatch(\n        readFileAsDataUrlAction({ ns: 'createNftCsvImport', file: files[0] })\n      );\n    },\n    [dispatch]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    maxSize: 30 * 1024 * 1024,\n    // The type for a csv file is blank in some cases (like in windows chrome)\n    // accept: ['text/csv']\n  });\n\n  return (\n    <Flex flexDir=\"column\" align=\"center\">\n      <Flex\n        bg=\"brand.brightGray\"\n        border=\"1px solid\"\n        borderColor=\"brand.lightBlue\"\n        borderRadius=\"5px\"\n        display=\"inline-flex\"\n        marginBottom=\"4\"\n        paddingX={16}\n        paddingY={12}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Text fontWeight=\"500\" fontSize={18}>\n          {state.selectedCsvFile\n            ? `Selected file: ${state.selectedCsvFile.name}`\n            : 'Click or drag CSV file to this area to upload'}\n        </Text>\n      </Flex>\n      <Flex justify=\"center\">\n        <MinterButton\n          variant={\n            state.selectedCsvFile === null\n              ? 'primaryActionInactive'\n              : 'primaryAction'\n          }\n          onClick={() => state.selectedCsvFile && disclosure.onOpen()}\n        >\n          Mint from CSV\n        </MinterButton>\n      </Flex>\n      <FormModal\n        disclosure={disclosure}\n        method=\"mintCsvTokens\"\n        dispatchThunk={() => dispatch(mintCsvTokensAction())}\n        onComplete={() => dispatch(clearSelectedCsvFile())}\n        afterClose={() => setLocation('/collections')}\n        dispatchOnOpen={true}\n        pendingAsyncMessage={\n          <>\n            Opening wallet...\n            <br />\n            <Text\n              fontSize=\"1rem\"\n              fontWeight=\"normal\"\n              marginTop={4}\n              textAlign=\"center\"\n              color=\"gray.500\"\n            >\n              <span role=\"img\" aria-label=\"lightbulb\">\n                🌱\n              </span>{' '}\n              Minting on Tezos produces 1,500,000 times less CO2 emissions than\n              Ethereum.\n            </Text>\n          </>\n        }\n      />\n    </Flex>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Heading,\n  Text,\n  Flex,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionIcon,\n  AccordionPanel\n} from '@chakra-ui/react';\nimport { useSelector } from '../../reducer';\nimport { FilePreview } from './FileUpload';\n\nfunction Label(props: { children: React.ReactNode }) {\n  return (\n    <Text fontSize=\"md\" fontFamily=\"mono\" color=\"brand.darkGray\">\n      {props.children}\n    </Text>\n  );\n}\n\nexport default function Confirmation() {\n  const selectedFile = useSelector(s => s.createNft.selectedFile);\n  const collections = useSelector(s => s.collections.collections);\n  const fields = useSelector(s => s.createNft.fields);\n  const attributes = useSelector(s => s.createNft.attributes);\n  const collectionAddress = useSelector(s => s.createNft.collectionAddress);\n\n  return (\n    <Box>\n      <Heading size=\"lg\" mb={4}>\n        Confirm Details\n      </Heading>\n      <Flex w=\"100%\" justify=\"center\" mb={8}>\n        <FilePreview file={selectedFile!} />\n      </Flex>\n      <Label>Collection</Label>\n      <Text fontSize=\"md\" mb={[2, 4]}>\n        {collections[collectionAddress!]?.metadata?.name}\n      </Text>\n      <Label>Name</Label>\n      <Text fontSize=\"md\" mb={[2, 4]}>\n        {fields.name}\n      </Text>\n      <Label>Description</Label>\n      <Text fontSize=\"md\" mb={[2, 4]}>\n        {fields.description || 'No description provided'}\n      </Text>\n      <Accordion allowToggle>\n        <AccordionItem border=\"none\">\n          <AccordionButton mt={[4, 8]} p={0}>\n            <Text color=\"brand.neutralGray\">Metadata</Text>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel pb={4}>\n            {attributes?.map(({ name, value }) => (\n              <Flex mt={[4, 8]}>\n                <Text color=\"brand.neutralGray\">{name}:</Text>\n                <Text color=\"brand.darkGray\" fontWeight=\"bold\" ml={[1]}>\n                  {value}\n                </Text>\n              </Flex>\n            ))}\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n    </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { Box, Flex, Text, useDisclosure } from '@chakra-ui/react';\nimport { MinterButton } from '../common';\nimport Form from './Form';\nimport FileUpload, { CsvFileUpload } from './FileUpload';\nimport CollectionSelect from './CollectionSelect';\n// import Preview from './Preview';\nimport Confirmation from './Confirmation';\nimport { ChevronLeft, X } from 'react-feather';\n\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  clearForm,\n  CreateNftState,\n  decrementStep,\n  incrementStep,\n  steps\n} from '../../reducer/slices/createNft';\nimport { mintTokenAction } from '../../reducer/async/actions';\nimport { validateCreateNftStep } from '../../reducer/validators/createNft';\nimport FormModal from '../common/modals/FormModal';\n\nfunction ProgressIndicator({ state }: { state: CreateNftState }) {\n  const stepIdx = steps.indexOf(state.step);\n  return (\n    <Flex\n      align=\"center\"\n      flexDir=\"column\"\n      flex=\"1\"\n      display={{\n        base: 'none',\n        md: 'flex'\n      }}\n    >\n      <Flex width=\"200px\" justifyContent=\"stretch\" pb={2}>\n        {steps.map((step, i) => {\n          const color = stepIdx >= i ? 'brand.blue' : 'brand.lightBlue';\n          return (\n            <Box\n              key={step}\n              bg={color}\n              borderRadius=\"3px\"\n              height=\"5px\"\n              mx={1}\n              flex=\"1\"\n            />\n          );\n        })}\n      </Flex>\n      <Text fontSize=\"xs\" color=\"brand.gray\">\n        STEP {stepIdx + 1} OF {steps.length}\n      </Text>\n    </Flex>\n  );\n}\n\nfunction LeftContent() {\n  const step = useSelector(s => s.createNft.step);\n  switch (step) {\n    case 'file_upload':\n      return (\n        <Box w=\"100%\" maxWidth=\"1200px\">\n          <FileUpload />\n          <Flex align=\"center\" marginY={12}>\n            <Box\n              flex=\"1\"\n              borderBottom=\"1px solid\"\n              borderColor=\"brand.lightGray\"\n            />\n            <Text color=\"brand.blue\" fontWeight=\"700\" paddingX={5}>\n              OR\n            </Text>\n            <Box\n              flex=\"1\"\n              borderBottom=\"1px solid\"\n              borderColor=\"brand.lightGray\"\n            />\n          </Flex>\n          <CsvFileUpload />\n        </Box>\n      );\n    case 'asset_details':\n      return (\n        <Box w=\"100%\" maxWidth=\"800px\">\n          <Form />\n        </Box>\n      );\n    case 'collection_select':\n      return (\n        <Box w=\"100%\" maxWidth=\"800px\">\n          <CollectionSelect />\n        </Box>\n      );\n    case 'confirm':\n      return (\n        <Box w=\"100%\" maxWidth=\"800px\">\n          <Confirmation />\n        </Box>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default function CreateNonFungiblePage() {\n  const { system, createNft: state } = useSelector(s => s);\n  const dispatch = useDispatch();\n  const [, setLocation] = useLocation();\n  const disclosure = useDisclosure();\n  const { onOpen } = disclosure;\n\n  useEffect(() => {\n    if (system.status !== 'WalletConnected') {\n      setLocation('/');\n    }\n  });\n\n  const stepIsValid = validateCreateNftStep(state);\n\n  return (\n    <Flex flex=\"1\" width=\"100%\" minHeight=\"0\">\n      <Flex w=\"100%\" h=\"100%\" flexDir=\"column\" align=\"center\">\n        <Flex\n          w=\"100%\"\n          px={8}\n          py={4}\n          justify=\"space-between\"\n          align=\"center\"\n          borderBottomWidth=\"1px\"\n          borderBottomColor=\"brand.brightGray\"\n        >\n          <Flex flex=\"1\">\n            <MinterButton\n              variant=\"cancelAction\"\n              onClick={() => {\n                dispatch(clearForm());\n                setLocation('/collections');\n              }}\n              display=\"flex\"\n              alignItems=\"center\"\n              color=\"brand.red\"\n              border=\"none\"\n              _hover={{\n                color: 'white',\n                textDecoration: 'underline',\n                borderColor: 'brand.red'\n              }}\n            >\n              <Box color=\"currentcolor\">\n                <X size={16} strokeWidth=\"3\" />\n              </Box>\n              <Text fontSize={16} ml={1} fontWeight=\"600\">\n                Cancel\n              </Text>\n            </MinterButton>\n          </Flex>\n          <ProgressIndicator state={state} />\n          <Flex flex=\"1\" justify=\"flex-end\">\n            <MinterButton\n              visibility={state.step !== 'file_upload' ? 'visible' : 'hidden'}\n              variant=\"primaryActionInverted\"\n              onClick={() => dispatch(decrementStep())}\n            >\n              <Box color=\"currentcolor\">\n                <ChevronLeft size={16} strokeWidth=\"3\" />\n              </Box>\n              <Text ml={2}>Back</Text>\n            </MinterButton>\n            <MinterButton\n              variant={stepIsValid ? 'primaryAction' : 'primaryActionInactive'}\n              onClick={() => {\n                if (!stepIsValid) return;\n                switch (state.step) {\n                  case 'file_upload': {\n                    return dispatch(incrementStep());\n                  }\n                  case 'asset_details': {\n                    return dispatch(incrementStep());\n                  }\n                  case 'confirm': {\n                    return onOpen();\n                  }\n                }\n              }}\n              ml={4}\n            >\n              {state.step === 'confirm' ? 'Create' : 'Next'}\n            </MinterButton>\n            <FormModal\n              disclosure={disclosure}\n              method=\"mintToken\"\n              dispatchThunk={() => dispatch(mintTokenAction())}\n              onComplete={() => dispatch(clearForm())}\n              afterClose={() => setLocation('/collections')}\n              dispatchOnOpen={true}\n              pendingAsyncMessage={\n                <>\n                  Opening wallet...\n                  <br />\n                  <Text\n                    fontSize=\"1rem\"\n                    fontWeight=\"normal\"\n                    marginTop={4}\n                    textAlign=\"center\"\n                    color=\"gray.500\"\n                  >\n                    <span role=\"img\" aria-label=\"lightbulb\">\n                      🌱\n                    </span>{' '}\n                    Minting on Tezos produces 1,500,000 times less CO2 emissions\n                    than Ethereum.\n                  </Text>\n                </>\n              }\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width=\"100%\"\n          pt={10}\n          px={{\n            base: 6,\n            md: 28\n          }}\n          overflowY=\"auto\"\n          minHeight=\"0px\"\n          flex=\"1\"\n          flexDir=\"column\"\n          align=\"center\"\n        >\n          <LeftContent />\n          <Box pb={10} w=\"100%\" />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","import React from 'react';\nimport { Flex, Text } from '@chakra-ui/react';\nimport {\n    Collection\n} from '../../../reducer/slices/collections';\n\ninterface CollectionTabProps extends Collection {\n    selected: boolean;\n    onSelect: (address: string) => void;\n}\n\nexport default function CollectionTab({\n    address,\n    metadata,\n    selected,\n    onSelect\n}: CollectionTabProps) {\n    return (\n        <Flex\n            align=\"center\"\n            py={2}\n            px={4}\n            bg={selected ? 'gray.100' : 'white'}\n            color={selected ? 'black' : 'gray.600'}\n            _hover={{\n                cursor: 'pointer',\n                color: selected ? 'black' : 'gray.800'\n            }}\n            onClick={() => onSelect(address)}\n            role=\"group\"\n        >\n            <Flex\n                align=\"center\"\n                justify=\"center\"\n                w={8}\n                h={8}\n                bg={selected ? 'brand.blue' : 'gray.100'}\n                color={selected ? 'white' : 'gray.400'}\n                borderRadius=\"100%\"\n                fontWeight=\"600\"\n                _groupHover={{\n                    bg: selected ? 'brand.blue' : 'gray.200'\n                }}\n            >\n                <Text>{metadata?.name ? metadata.name[0] : '?'}</Text>\n            </Flex>\n            <Text pl={4} fontWeight={selected ? '600' : '600'}>\n                {metadata?.name || address}\n            </Text>\n        </Flex>\n    );\n}","import React from 'react';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport { CreateCollectionButton } from '../../common/modals/CreateCollection';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  selectCollection\n} from '../../../reducer/slices/collections';\nimport CollectionTab from './CollectionTab';\n\nexport default function Sidebar() {\n  const tzPublicKey = useSelector(s => s.system.tzPublicKey);\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Heading px={4} pt={6} pb={4} size=\"md\" color=\"brand.darkGray\">\n        Collections\n      </Heading>\n      <Heading\n        fontFamily=\"mono\"\n        px={4}\n        pb={2}\n        fontSize=\"sm\"\n        color=\"brand.darkGray\"\n      >\n        Featured\n      </Heading>\n      {state.collections[state.globalCollection] ? (\n        <CollectionTab\n          key={state.globalCollection}\n          selected={state.globalCollection === state.selectedCollection}\n          onSelect={address => dispatch(selectCollection(address))}\n          {...state.collections[state.globalCollection]}\n        />\n      ) : null}\n      <Heading\n        fontFamily=\"mono\"\n        px={4}\n        pt={4}\n        pb={2}\n        fontSize=\"sm\"\n        color=\"brand.darkGray\"\n      >\n        Your Collections\n      </Heading>\n      {Object.keys(state.collections)\n        .filter(\n          address =>\n            address !== state.globalCollection &&\n            state.collections[address]?.creator?.address === tzPublicKey\n        ).reverse()\n        .map((address, idx) => (\n          <CollectionTab\n            key={address + idx}\n            selected={address === state.selectedCollection}\n            onSelect={address => dispatch(selectCollection(address))}\n            {...state.collections[address]}\n          />\n        ))}\n      <Flex px={2} pt={4} justify=\"center\" pb={8}>\n        <CreateCollectionButton />\n      </Flex>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuOptionGroup,\n  MenuItemOption,\n  Text\n} from '@chakra-ui/react';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { ChevronDown } from 'react-feather';\n\nexport default function CollectionsDropdown() {\n  const state = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex width=\"100%\" align=\"center\">\n      <Menu>\n        <MenuButton\n          as={Button}\n          border=\"1px solid\"\n          borderColor=\"brand.gray\"\n          flex=\"1\"\n        >\n          <Flex align=\"center\">\n            <Box mr={3}>\n              <ChevronDown />\n            </Box>\n            {state.selectedCollection\n              ? state.collections[state.selectedCollection].metadata.name\n              : '-'}\n          </Flex>\n        </MenuButton>\n        <MenuList>\n          <MenuOptionGroup\n            type=\"radio\"\n            defaultValue={state.selectedCollection || ''}\n          >\n            <Text ml={4} my={2} fontWeight=\"600\">\n              Featured\n            </Text>\n            <MenuItemOption\n              key={state.globalCollection}\n              selected={state.globalCollection === state.selectedCollection}\n              value={state.globalCollection}\n              onSelect={() =>\n                dispatch(selectCollection(state.globalCollection))\n              }\n            >\n              {state.collections[state.globalCollection].metadata.name}\n            </MenuItemOption>\n            <Text ml={4} my={2} fontWeight=\"600\">\n              Your Collections\n            </Text>\n            {Object.keys(state.collections)\n              .filter(address => address !== state.globalCollection)\n              .map((address, idx) => (\n                <MenuItemOption\n                  key={address + idx}\n                  value={address}\n                  selected={address === state.selectedCollection}\n                  onClick={() => dispatch(selectCollection(address))}\n                >\n                  {state.collections[address].metadata.name}\n                </MenuItemOption>\n              ))}\n          </MenuOptionGroup>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}\n","import React, { MouseEventHandler, useEffect, useState } from 'react';\nimport { Flex, Image } from '@chakra-ui/react';\nimport { FiHelpCircle } from 'react-icons/fi';\nimport { IpfsGatewayConfig, ipfsUriToGatewayUrl } from '../../lib/util/ipfs';\nimport { Token } from '../../reducer/slices/collections';\n\ninterface TokenMediaProps extends Token {\n  config: IpfsGatewayConfig;\n  maxW?: string;\n  maxH?: string;\n  class?: string;\n  cursor?: string;\n  objectFit?: any; //ObjectFitProperty | undefined; Todo ObjectFitProperty not found\n  onClick?: Function;\n}\n\nfunction MediaNotFound() {\n  return (\n    <Flex\n      flexDir=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      flex=\"1\"\n      bg=\"gray.100\"\n      color=\"gray.300\"\n      height=\"100%\"\n    >\n      <FiHelpCircle size=\"70px\" />\n    </Flex>\n  );\n}\n\nexport function TokenMedia(props: TokenMediaProps) {\n  const src = ipfsUriToGatewayUrl(props.config, props.artifactUri);\n  const [errored, setErrored] = useState(false);\n  const [obj, setObj] = useState<{ url: string; type: string } | null>(null);\n  useEffect(() => {\n    (async () => {\n      let blob;\n      try {\n        blob = await fetch(src).then(r => r.blob());\n      } catch (e) {\n        return setErrored(true);\n      }\n      setObj({\n        url: URL.createObjectURL(blob),\n        type: blob.type\n      });\n    })();\n  }, [src]);\n\n  if (errored) {\n    return <MediaNotFound />;\n  }\n\n  if (!obj) return null;\n\n  if (/^image\\/.*/.test(obj.type)) {\n    return (\n      <Image\n        src={src}\n        flex=\"1\"\n        maxWidth={props.maxW}\n        maxHeight={props.maxH}\n        style={{ objectFit: props.objectFit ?? 'cover', maxWidth: props.maxW, maxHeight: props.maxH ?? '50vh', cursor: props.cursor }}\n        onClick={props.onClick as MouseEventHandler<HTMLImageElement>}\n        onError={() => setErrored(true)}\n      />\n    );\n  }\n\n  if (/^video\\/.*/.test(obj.type)) {\n    return (\n      <video\n      preload=\"metadata\"\n        onClick={e => e.preventDefault()}\n        onMouseEnter={e => e.currentTarget.play()}\n        onMouseLeave={e => e.currentTarget.pause()}\n        style={{ objectFit: props.objectFit ?? 'cover', maxWidth: props.maxW, maxHeight: props.maxH ?? '50vh', cursor: props.cursor }}\n        onLoadedMetadata={e => {(e.target as HTMLVideoElement).currentTime = .05; }}\n        muted\n        controls\n      >\n        <source src={obj.url} type={obj.type} />\n      </video>\n    );\n  }\n\n  if (props.metadata.formats?.length) {\n    if (\n      props.metadata.formats[0].mimeType === 'model/gltf-binary' ||\n      props.metadata.formats[0].mimeType === 'model/gltf+json'\n    ) {\n      return (\n        <>\n          <model-viewer\n            auto-rotate\n            rotation-per-second=\"30deg\"\n            camera-controls\n            src={obj.url}\n            class={props.class}\n          ></model-viewer>\n        </>\n      );\n    }\n  }\n\n  return <MediaNotFound />;\n}\n","import React from 'react';\nimport { Token } from '../../reducer/slices/collections';\nimport { useLocation } from 'wouter';\nimport { IpfsGatewayConfig } from '../../lib/util/ipfs';\nimport { AspectRatio, Box, Flex } from '@chakra-ui/react';\nimport { TokenMedia } from './TokenMedia';\nimport tz from './assets/tezos-sym.svg'\n\ninterface TokenCardProps extends Token {\n  config: IpfsGatewayConfig;\n}\n\nexport default function TokenCard(props: TokenCardProps) {\n  const [, setLocation] = useLocation();\n  return (\n    <Flex\n      position=\"relative\"\n      flexDir=\"column\"\n      ratio={1}\n      w=\"100%\"\n      bg=\"white\"\n      border=\"1px solid\"\n      borderColor=\"#eee\"\n      borderRadius=\"0px\"\n      overflow=\"hidden\"\n      boxShadow=\"none\"\n      transition=\"all linear 50ms\"\n      _hover={{\n        cursor: 'pointer',\n        boxShadow: '0px 0px 10px #3339',\n      }}\n      onClick={() =>\n        setLocation(`/collection/${props.address}/token/${props.id}`)\n      }\n    >\n      <AspectRatio ratio={3 / 2}>\n        <Box>\n          <TokenMedia key={`${props.address}-${props.id}`} {...props} />\n        </Box>\n      </AspectRatio>\n      <Flex\n        width=\"100%\"\n        px={4}\n        py={4}\n        bg=\"white\"\n        borderTop=\"1px solid\"\n        borderColor=\"brand.lightBlue\"\n        flexDir=\"row\"\n        justifyContent=\"space-between\"\n      >\n        <Flex display=\"block\" fontSize=\"md\" width=\"70%\" alignItems=\"center\" height=\"100%\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">{props.title}</Flex>\n        <Flex fontSize=\"md\" fontWeight=\"600\" width=\"30%\" justifyContent=\"flex-end\" alignItems=\"center\">\n          {props.sale?.price.toFixed(2)}&nbsp;<img src={tz} alt=\"\" width={10} height=\"auto\" style={{ display: props.sale?.price ? 'inline-block' : 'none' }} />\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}","import React, { useEffect } from 'react';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Link,\n  SimpleGrid,\n  Spinner,\n  Text\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { ChevronLeft, ExternalLink, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery\n} from '../../../reducer/async/queries';\nimport CollectionsDropdown from './CollectionsDropdown';\nimport TokenCard from '../../common/TokenCard';\n\ninterface CollectionDisplayProps {\n  address: string | null;\n  ownedOnly?: boolean;\n}\n\nexport default function CollectionDisplay({\n  address,\n  ownedOnly = true\n}: CollectionDisplayProps) {\n  const collections = useSelector(s => s.collections);\n  const { config, tzPublicKey, wallet } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (address !== null) {\n      dispatch(getNftAssetContractQuery(address)).then(() =>\n        dispatch(getContractNftsQuery(address))\n      );\n    }\n  }, [address, dispatch]);\n\n  if (address === null) {\n    return <></>;\n  }\n\n  const collection = collections.collections[address];\n\n  if (!collection) {\n    return <></>;\n  }\n\n  if (!collection.loaded) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          Loading...\n        </Heading>\n      </Flex>\n    );\n  }\n\n  if (collection.tokens === null) {\n    return <></>;\n  }\n\n  const tokens = ownedOnly\n    ? collection.tokens.filter(\n        ({ owner, sale }) =>\n          owner === tzPublicKey || sale?.seller === tzPublicKey\n      )\n    : collection.tokens;\n\n  if (tokens.length === 0) {\n    return (\n      <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n        <Flex\n          px={20}\n          py={10}\n          bg=\"gray.200\"\n          textAlign=\"center\"\n          align=\"center\"\n          borderRadius=\"5px\"\n          flexDir=\"column\"\n          fontSize=\"xl\"\n          color=\"gray.400\"\n          mt={28}\n        >\n          <Wind />\n          <Text fontWeight=\"600\" pt={5}>\n            {ownedOnly\n              ? 'No owned tokens to display in this collection'\n              : 'No tokens to display in this collection'}\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      h=\"100%\"\n      w=\"100%\"\n      flex=\"1\"\n      bg=\"brand.brightGray\"\n      borderLeftWidth=\"1px\"\n      borderLeftColor=\"brand.lightBlue\"\n      overflowY=\"scroll\"\n      justify=\"start\"\n    >\n      <Flex flexDir=\"row\">\n        <Flex justifyContent=\"flex-start\" width=\"4rem\">\n          <MinterButton\n            variant=\"primaryActionInverted\"\n            onClick={e => {\n              e.preventDefault();\n              window.history.back();\n            }}\n          >\n            <Box color=\"currentcolor\">\n              <ChevronLeft size={24} strokeWidth=\"3\" />\n            </Box>\n          </MinterButton>\n        </Flex>\n\n        <Flex\n            flexDir=\"column\"\n            px={{ base: 6, md: 10 }}\n            pt={6}\n            overflow=\"hidden\"\n        >\n          {ownedOnly && wallet !== null ? (\n            <Flex display={{ base: 'flex', md: 'none' }} mb={4}>\n              <CollectionsDropdown />\n            </Flex>\n          ) : null}\n          <Flex\n            w=\"100%\"\n            pb={6}\n            justify=\"space-between\"\n            align={{\n              base: 'flex-start',\n              md: 'center'\n            }}\n            flexDir={{\n              base: 'column',\n              md: 'row'\n            }}\n          >\n            <Flex flexDir=\"column\" width=\"100%\">\n              <Flex justify=\"space-between\" width=\"100%\">\n                <Heading size=\"lg\">{collection.metadata.name || ''}</Heading>\n              </Flex>\n              <Flex align=\"center\">\n                <Text \n                  fontFamily=\"mono\" \n                  color=\"brand.lightGray\"\n                  overflow=\"hidden\"\n                  textOverflow=\"ellipsis\"\n                  overflowWrap=\"normal\"\n                >\n                  {collection.address}\n                </Text>\n                <Link\n                  href={`${config.bcd.gui}/${config.network}/${collection.address}`}\n                  color=\"brand.darkGray\"\n                  isExternal\n                  ml={2}\n                >\n                  <ExternalLink size={16} />\n                </Link>\n              </Flex>\n            </Flex>\n            <MinterButton\n              display={{ base: 'none', md: 'flex' }}\n              variant=\"primaryActionInverted\"\n              onClick={() => {\n                const selectedCollection = collections.selectedCollection;\n                if (selectedCollection !== null) {\n                  dispatch(getContractNftsQuery(selectedCollection));\n                }\n              }}\n              mt={{\n                base: 4,\n                md: 0\n              }}\n            ></MinterButton>\n          </Flex>\n        </Flex>\n      </Flex>\n      <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} px={{ base: 6, md: 10 }} pb={8}>\n        {tokens.map(token => {\n          return (\n            <TokenCard\n              key={address + token.id}\n              address={address}\n              config={config}\n              {...token}\n            />\n          );\n        })}\n      </SimpleGrid>\n    </Flex>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Flex, Heading, Text, Link, Image } from '@chakra-ui/react';\nimport Sidebar from './Sidebar';\nimport CollectionDisplay from './CollectionDisplay';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  getWalletAssetContractsQuery,\n  getNftAssetContractQuery\n} from '../../../reducer/async/queries';\nimport { selectCollection } from '../../../reducer/slices/collections';\nimport { connectWallet } from '../../../reducer/async/wallet';\nimport logo from '../../common/assets/splash-logo.svg';\nimport { MinterButton } from '../../common';\n\nexport default function Catalog() {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const dispatch = useDispatch();\n\n  const globalCollection =\n    collections.collections[collections.globalCollection];\n\n  useEffect(() => {\n    if (!globalCollection) {\n      dispatch(getNftAssetContractQuery(collections.globalCollection));\n      return;\n    }\n    if (collections.selectedCollection === null) {\n      dispatch(selectCollection(collections.globalCollection));\n      return;\n    }\n  }, [\n    globalCollection,\n    collections.selectedCollection,\n    collections.globalCollection,\n    dispatch\n  ]);\n\n  useEffect(() => {\n    if (system.status === 'WalletConnected') {\n      dispatch(getWalletAssetContractsQuery());\n    }\n  }, [system.status, dispatch]);\n\n  const selectedCollection = collections.selectedCollection;\n  if (system.walletReconnectAttempted && system.status !== 'WalletConnected') {\n    return (\n      <Flex\n        align=\"center\"\n        justifyContent=\"space-between\"\n        w=\"100%\"\n        flex=\"1\"\n        flexDir=\"column\"\n        bg=\"brand.background\"\n      >\n        <Flex flexDir=\"column\" align=\"center\" maxW=\"600px\" pt={20}>\n          <Image src={logo} maxW=\"200px\" pb={40} />\n          <Heading color=\"white\" size=\"xl\" pb={8}>\n            Create NFTs on Tezos\n          </Heading>\n          <Flex minW=\"400px\" justify=\"center\" pb={20}>\n            <MinterButton\n              variant=\"secondaryActionLined\"\n              onClick={e => {\n                e.preventDefault();\n                dispatch(connectWallet());\n              }}\n            >\n              Connect your wallet\n            </MinterButton>\n          </Flex>\n        </Flex>\n        <Flex\n          width=\"100%\"\n          bg=\"brand.darkGray\"\n          color=\"brand.lightGray\"\n          fontFamily=\"mono\"\n          paddingX={10}\n          paddingY={4}\n          justifyContent=\"space-between\"\n        >\n          <Text fontSize=\"xs\">\n            OpenMinter Version v{process.env.REACT_APP_VERSION}\n          </Text>\n          <Flex>\n            <Link\n              fontSize=\"xs\"\n              textDecor=\"underline\"\n              href=\"https://github.com/tqtezos/minter\"\n            >\n              GitHub\n            </Link>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      flex=\"1\"\n      w=\"100%\"\n      minHeight=\"0\"\n      flexDir={{\n        base: 'column',\n        md: 'row'\n      }}\n    >\n      <Flex\n        w=\"250px\"\n        h=\"100%\"\n        flexDir=\"column\"\n        overflowY=\"scroll\"\n        display={{\n          base: 'none',\n          md: 'flex'\n        }}\n      >\n        <Sidebar />\n      </Flex>\n      <CollectionDisplay address={selectedCollection} />\n    </Flex>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Plus } from 'react-feather';\nimport { MinterButton } from '../../common/index';\nimport { useDispatch } from '../../../reducer';\nimport { transferTokenAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\n\ninterface TransferTokenModalProps extends BaseModalProps {\n  contractAddress: string;\n  tokenId: number;\n}\n\nexport function TransferTokenModal(props: TransferTokenModalProps) {\n  const [toAddress, setToAddress] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"transferToken\"\n      dispatchThunk={() =>\n        dispatch(\n          transferTokenAction({\n            contract: props.contractAddress,\n            tokenId: props.tokenId,\n            to: toAddress\n          })\n        )\n      }\n      onComplete={() => setToAddress('')}\n      initialRef={initialRef}\n      pendingMessage=\"Transferring token...\"\n      completeMessage=\"Transfer complete\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Transfer Token</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl>\n              <FormLabel fontFamily=\"mono\">To Address</FormLabel>\n              <Input\n                autoFocus={true}\n                ref={initialRef}\n                placeholder=\"Input token recipient\"\n                value={toAddress}\n                onChange={e => setToAddress(e.target.value)}\n              />\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <MinterButton variant=\"primaryAction\" onClick={() => onSubmit()}>\n              Transfer\n            </MinterButton>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface TransferTokenButtonProps extends BaseModalButtonProps {\n  contractAddress: string;\n  tokenId: number;\n}\n\nexport function TransferTokenButton(props: TransferTokenButtonProps) {\n  const disclosure = useDisclosure();\n  return (\n    <>\n      <MinterButton variant=\"primaryAction\" onClick={disclosure.onOpen}>\n        <Box color=\"currentcolor\">\n          <Plus size={16} strokeWidth=\"3\" />\n        </Box>\n        <Text ml={2}>Transfer Token</Text>\n      </MinterButton>\n      <TransferTokenModal\n        {...props}\n        disclosure={disclosure}\n        sync={props.sync}\n      />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Flex,\n  FormControl,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Check } from 'react-feather';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { listTokenAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\nimport tz from '../assets/tezos-sym.svg'\n\ninterface SellTokenModalProps extends BaseModalProps {\n  contract: string;\n  tokenId: number;\n}\n\nexport function SellTokenModal(props: SellTokenModalProps) {\n  const [price, setPrice] = useState('');\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n\n  const salePrice = Math.floor(Number(price) * 1000000);\n  const validPrice = !Number.isNaN(price) && salePrice > 0;\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"listToken\"\n      dispatchThunk={() =>\n        dispatch(\n          listTokenAction({\n            contract: props.contract,\n            tokenId: props.tokenId,\n            salePrice: salePrice\n          })\n        )\n      }\n      onComplete={() => setPrice('')}\n      initialRef={initialRef}\n      pendingMessage=\"Listing token for sale...\"\n      completeMessage=\"Token listed for sale\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Set your price</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Flex>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    color=\"gray.900\"\n                    fontSize=\"1.2em\"\n                    children={<img src={tz} alt=\"\" width={10} height=\"auto\" style={{display: 'inline-block'}}/>}\n                  />\n                  <Input\n                    autoFocus={true}\n                    ref={initialRef}\n                    placeholder=\"Enter sale amount\"\n                    value={price}\n                    onChange={e => setPrice(e.target.value)}\n                  />\n                </InputGroup>\n              </FormControl>\n              <Box ml={2}>\n                <MinterButton\n                  variant={\n                    validPrice ? 'primaryAction' : 'primaryActionInactive'\n                  }\n                  onClick={() => validPrice && onSubmit()}\n                >\n                  <Check />\n                </MinterButton>\n              </Box>\n            </Flex>\n          </ModalBody>\n          <ModalFooter />\n        </>\n      )}\n    />\n  );\n}\n\ninterface SellTokenButtonProps extends BaseModalButtonProps {\n  contract: string;\n  tokenId: number;\n}\n\nexport function SellTokenButton(props: SellTokenButtonProps) {\n  const disclosure = useDisclosure();\n  const { status } = useSelector(s => s.status.listToken)\n  \n  return (\n    <>\n      <MinterButton variant=\"primaryAction\" onClick={disclosure.onOpen} disabled={status === 'in_transit'}>\n        Sell\n      </MinterButton>\n      <SellTokenModal {...props} disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Button,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { cancelTokenSaleAction } from '../../../reducer/async/actions';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\n\ninterface CancelTokenSaleModalProps extends BaseModalProps {\n  contract: string;\n  tokenId: number;\n  saleId: number;\n  saleType: string;\n}\n\nexport function CancelTokenSaleModal(props: CancelTokenSaleModalProps) {\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"cancelTokenSale\"\n      dispatchThunk={() =>\n        dispatch(\n          cancelTokenSaleAction({\n            contract: props.contract,\n            tokenId: props.tokenId,\n            saleId: props.saleId,\n            saleType: props.saleType\n          })\n        )\n      }\n      initialRef={initialRef}\n      pendingMessage=\"Canceling token sale...\"\n      completeMessage=\"Token sale canceled\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Are you sure?</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>Are you sure you want to cancel the sale?</Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"primaryAction\" mr={3} onClick={() => onSubmit()}>\n              Yes\n            </Button>\n            <Button\n              variant=\"cancelAction\"\n              onClick={() => props.disclosure.onClose()}\n            >\n              No\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface CancelTokenSaleButtonProps extends BaseModalButtonProps {\n  contract: string;\n  tokenId: number;\n  saleId: number;\n  saleType: string;\n}\n\nexport function CancelTokenSaleButton(props: CancelTokenSaleButtonProps) {\n  const disclosure = useDisclosure();\n  const { status } = useSelector(s => s.status.cancelTokenSale)\n  \n  return (\n    <>\n      <MinterButton variant=\"cancelAction\" onClick={disclosure.onOpen} disabled={status === 'in_transit'}>\n        Cancel sale\n      </MinterButton>\n\n      <CancelTokenSaleModal\n        {...props}\n        disclosure={disclosure}\n        sync={props.sync}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { useDispatch, useSelector } from '../../../reducer';\nimport { buyTokenAction } from '../../../reducer/async/actions';\nimport { Nft } from '../../../lib/nfts/decoders';\nimport FormModal, { BaseModalProps, BaseModalButtonProps } from './FormModal';\nimport tz from '../assets/tezos-sym.svg'\n\ninterface BuyTokenModalProps extends BaseModalProps {\n  token: Nft;\n}\n\nexport function BuyTokenModal(props: BuyTokenModalProps) {\n  const dispatch = useDispatch();\n  const initialRef = React.useRef(null);\n  return (\n    <FormModal\n      disclosure={props.disclosure}\n      sync={props.sync}\n      method=\"buyToken\"\n      dispatchThunk={() =>\n        dispatch(\n          buyTokenAction({\n            contract: props.token.sale?.saleToken.address || '',\n            tokenId: props.token.sale?.saleToken.tokenId || 0,\n            tokenSeller: props.token.sale?.seller || '',\n            salePrice: props.token.sale?.price || 0,\n            saleId: props.token.sale?.saleId || 0,\n            saleType: props.token.sale?.type || ''\n          })\n        )\n      }\n      initialRef={initialRef}\n      pendingMessage=\"Purchasing token...\"\n      completeMessage=\"Token purchased\"\n      body={onSubmit => (\n        <>\n          <ModalHeader>Checkout</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text>\n              You are about to purchase\n              <Box as=\"span\" fontWeight=\"bold\">\n                {' '}\n                {props.token.title} (<img src={tz} alt=\"\" width={10} height=\"auto\" style={{display: 'inline-block'}}/> {props.token.sale?.price})\n              </Box>\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"primaryAction\"\n              onClick={() => onSubmit()}\n              isFullWidth={true}\n            >\n              Buy now\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    />\n  );\n}\n\ninterface BuyTokenButtonProps extends BaseModalButtonProps {\n  token: Nft;\n}\n\nexport function BuyTokenButton(props: BuyTokenButtonProps) {\n  const disclosure = useDisclosure();\n  const { status } = useSelector(s => s.status.buyToken)\n\n  return (\n    <>\n      <MinterButton variant=\"primaryAction\" onClick={disclosure.onOpen} disabled={status === 'in_transit'}>\n        Buy now\n      </MinterButton>\n\n      <BuyTokenModal {...props} disclosure={disclosure} sync={props.sync} />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Link,\n  Menu,\n  MenuList,\n  Modal,\n  ModalCloseButton,\n  ModalContent,\n  Text,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { ChevronLeft, HelpCircle, MoreHorizontal } from 'react-feather';\nimport { MinterButton, MinterMenuButton, MinterMenuItem } from '../../common';\nimport { TransferTokenModal } from '../../common/modals/TransferToken';\nimport { SellTokenButton } from '../../common/modals/SellToken';\nimport { CancelTokenSaleButton } from '../../common/modals/CancelTokenSale';\nimport { BuyTokenButton } from '../../common/modals/BuyToken';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery\n} from '../../../reducer/async/queries';\nimport { TokenMedia } from '../../common/TokenMedia';\nimport lk from '../../common/assets/link-icon.svg'\nimport tz from '../../common/assets/tezos-sym.svg'\nimport { Maximize2 } from 'react-feather';\n\nfunction NotFound() {\n  return (\n    <Flex flex=\"1\" width=\"100%\" justify=\"center\">\n      <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n        <Flex\n          px={32}\n          py={16}\n          bg=\"gray.100\"\n          textAlign=\"center\"\n          align=\"center\"\n          borderRadius=\"5px\"\n          flexDir=\"column\"\n          fontSize=\"xl\"\n          borderColor=\"gray.200\"\n          borderWidth=\"5px\"\n          mt={36}\n          color=\"gray.300\"\n        >\n          <HelpCircle size=\"100px\" />\n          <Heading size=\"xl\" fontWeight=\"normal\" pt={8} color=\"gray.400\">\n            Token not found\n          </Heading>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\ninterface TokenDetailProps {\n  contractAddress: string;\n  tokenId: number;\n}\n\nfunction TokenDetail({ contractAddress, tokenId }: TokenDetailProps) {\n  const { system, collections: state } = useSelector(s => s);\n  const disclosure = useDisclosure();\n  const dispatch = useDispatch();\n  const collection = state.collections[contractAddress];\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const collectionUndefined = collection === undefined;\n\n  useEffect(() => {\n    if (collectionUndefined) {\n      dispatch(getNftAssetContractQuery(contractAddress));\n    } else {\n      dispatch(getContractNftsQuery(contractAddress));\n    }\n  }, [contractAddress, tokenId, collectionUndefined, dispatch]);\n\n  if (!collection?.tokens) {\n    return null;\n  }\n\n  const token = collection.tokens.find(token => token.id === tokenId);\n  if (!token) {\n    return <NotFound />;\n  }\n\n  const isOwner =\n    system.tzPublicKey &&\n    (system.tzPublicKey === token.owner ||\n      system.tzPublicKey === token.sale?.seller);\n\n  return (\n    <Flex flexDir=\"column\" bg=\"brand.brightGray\" flexGrow={1}>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        size=\"full\"\n        scrollBehavior=\"inside\"\n      >\n        <ModalContent\n          height=\"100vh\"\n          maxHeight=\"unset\"\n          width=\"100vw\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          flexWrap=\"nowrap\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          position=\"relative\"\n          backgroundColor=\"#111111fc\"\n          zIndex=\"2000\"\n          margin=\"0 !important\"\n          borderRadius=\"0\"\n        >\n          <TokenMedia\n            key={`${token.address}-${token.id}`}\n            config={system.config}\n            {...token}\n            metadata={token?.metadata}\n            maxW=\"95vw\"\n            maxH=\"95vh\"\n            objectFit=\"scale-down\"\n          />\n          <ModalCloseButton\n            position=\"absolute\"\n            right=\"0px !important\"\n            display=\"block !important\"\n            fontSize=\"18px\"\n            top=\"0px !important\"\n            borderLeft=\"2px solid #aaa\"\n            color=\"white\"\n            borderTop=\"2px solid #aaa\"\n            width=\"4rem\"\n            height=\"4rem\"\n            borderRight=\"none\"\n            borderBottom=\"none\"\n            borderBottomEndRadius=\"0\"\n            borderTopStartRadius=\"0\"\n            borderTopEndRadius=\"0\"\n            border=\"0\"\n          />\n        </ModalContent>\n      </Modal>\n      <Flex justifyContent=\"flex-start\" width=\"4rem\">\n        <MinterButton\n          variant=\"primaryActionInverted\"\n          onClick={e => {\n            e.preventDefault();\n            window.history.back();\n          }}\n        >\n          <Box color=\"currentcolor\">\n            <ChevronLeft size={24} strokeWidth=\"3\" />\n          </Box>\n        </MinterButton>\n      </Flex>\n      <Flex\n        px={[8, 16]}\n        pt={[10, 0]}\n        pb={[5, 0]}\n        width={['100%']}\n        maxHeight={[\"30vh\", \"60vh\", \"70vh\"]}\n        height={[\"100%\"]}\n        justifyContent=\"center\"\n      >\n        <TokenMedia\n          key={`${token.address}-${token.id}`}\n          config={system.config}\n          {...token}\n          metadata={token?.metadata}\n          maxW=\"100%\"\n          maxH=\"100%\"\n          objectFit=\"scale-down\"\n          cursor=\"pointer\"\n          onClick={onOpen}\n        />\n      </Flex>\n      <Flex width=\"99vw\" height=\"auto\" justifyContent=\"flex-end\" marginBottom={[3, 2]} zIndex=\"50\">\n        <Button onClick={onOpen}>\n          <Maximize2 size={16} strokeWidth=\"3\" />\n        </Button>\n      </Flex>\n      <Flex width={['100%']} bg=\"white\" flexDir=\"column\" flexGrow={1}>\n        <Flex align=\"center\" justify=\"space-evenly\" width={['100']} mt=\"4\">\n        </Flex>\n        <Flex\n          width={['90%', '90%', '70%']}\n          mx=\"auto\"\n          flexDir=\"column\"\n          px={[4, 16]}\n          flex=\"1\"\n        >\n          <Flex\n            flexDir=\"column\"\n            w=\"100%\"\n            bg=\"white\"\n            py={6}\n            mb={10}\n            pos=\"relative\"\n          >\n            <Heading textAlign=\"left\" color=\"brand.black\" width={[\"100%\", \"100%\", \"80%\"]} fontSize={[\"10vw\", \"3vw\"]} display=\"inline-block\">\n              {token.title}\n            </Heading>\n            <Text\n              fontSize=\"md\"\n              color=\"brand.neutralGray\"\n              fontWeight=\"bold\"\n              mt={[2, 4]}\n              width={['100%', '100%', '60%']}\n            >\n              {token.description || 'No description provided'}\n            </Text>\n            <Accordion allowToggle mt={4}>\n              <AccordionItem border=\"none\">\n                <AccordionButton p={0}>\n                  <Text color=\"brand.neutralGray\">Token Info</Text>\n                  <AccordionIcon />\n                </AccordionButton>\n                <AccordionPanel pb={4}>\n                  <Flex mt={[4, 8]}>\n                    <Text color=\"brand.neutralGray\">Minter:</Text>\n                    <Text color=\"brand.darkGray\" fontWeight=\"bold\" ml={[1]} whiteSpace=\"nowrap\" overflow=\"hidden\">\n                      <Link display=\"block\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\" href={`/creator/${token?.metadata?.minter}`}>{\n                        token?.metadata?.minter}&nbsp;<sup><img src={lk} alt=\"\" width=\"auto\" height=\"auto\" style={{ display: 'inline-block' }} /></sup></Link>\n                    </Text>\n                  </Flex>\n                  <Flex mt={[4, 8]}>\n                    <Text color=\"brand.neutralGray\">Collection:</Text>\n                    <Text color=\"brand.darkGray\" fontWeight=\"bold\" ml={[1]} whiteSpace=\"nowrap\" overflow=\"hidden\">\n                      <Link display=\"block\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\" href={`/collection/${contractAddress}`}>\n                        {state.selectedCollection ? state.collections[state.selectedCollection]?.metadata.name \n                          : collection?.metadata.name ? collection?.metadata.name \n                          : contractAddress\n                        }&nbsp;\n                        <sup><img src={lk} alt=\"\" width=\"auto\" height=\"auto\" style={{ display: 'inline-block' }} /></sup></Link>\n                    </Text>\n                  </Flex>\n                  {token?.metadata?.attributes?.map(({ name, value }) => (\n                    <Flex key={name + value} mt={[4, 8]}>\n                      <Text color=\"brand.neutralGray\">{name}:</Text>\n                      <Text display=\"block\" color=\"brand.darkGray\" fontWeight=\"bold\" ml={[1]} whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"wrap\">\n                        {value}\n                      </Text>\n                    </Flex>\n                  ))}\n                </AccordionPanel>\n              </AccordionItem>\n            </Accordion>\n            <Flex display={['flex']} justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\" flexDir={['column', 'row']} flexWrap=\"wrap\" marginTop={2}>\n              <Flex justifyContent={[\"flex-start\"]} alignItems=\"center\" width=\"100%\" marginTop={4}>\n                {token.sale ? (\n                  isOwner ? (\n                    <>\n                      <Text color=\"brand.black\" fontSize=\"xl\" fontWeight=\"700\" marginRight={8}>\n                        {token.sale.price} <img src={tz} alt=\"\" width={10} height=\"auto\" style={{ display: 'inline-block' }} />\n                      </Text>\n                      <Box marginRight={8}>\n                        <CancelTokenSaleButton\n                          contract={token.sale.saleToken.address}\n                          tokenId={token.sale.saleToken.tokenId}\n                          saleId={token.sale.saleId}\n                          saleType={token.sale.type}\n                        />\n                      </Box>\n                    </>\n                  ) : (\n                    <>\n                      <Text color=\"black\" fontSize={['md', 'md', 'lg']} mr={1} fontWeight=\"700\" marginRight={8}>\n                        {token.sale.price.toFixed(2)} <img src={tz} alt=\"\" width={10} height=\"auto\" style={{ display: 'inline-block' }} />\n                      </Text>\n                      <Box>\n                        <BuyTokenButton token={token} />\n                      </Box>\n                    </>\n                  )\n                ) : isOwner ? (\n                  <Box marginRight={8}>\n                    <SellTokenButton contract={contractAddress} tokenId={tokenId} />\n                  </Box>\n                ) : (\n                  <></>\n                )}\n                {isOwner ? (\n                  <Menu>\n                    <MinterMenuButton variant=\"primary\">\n                      <MoreHorizontal color=\"#25282B\" />\n                    </MinterMenuButton>\n                    <MenuList\n                      borderColor=\"brand.lightBlue\"\n                      borderRadius=\"2px\"\n                      p={0}\n                      minWidth={[100]}\n                    >\n                      {token.sale ? (\n                        <></>\n                      ) : (\n                        <MinterMenuItem\n                          w={[100]}\n                          variant=\"primary\"\n                          onClick={disclosure.onOpen}\n                        >\n                          Transfer\n                        </MinterMenuItem>\n                      )}\n                    </MenuList>\n                    <TransferTokenModal\n                      contractAddress={contractAddress}\n                      tokenId={tokenId}\n                      disclosure={disclosure}\n                    />\n                  </Menu>\n                ) : (\n                  <></>\n                )}\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex >\n  );\n}\n\nexport default TokenDetail;\n","import React from 'react';\nimport { Token } from '../../../reducer/slices/collections';\nimport { useLocation } from 'wouter';\nimport { IpfsGatewayConfig } from '../../../lib/util/ipfs';\nimport {\n  Box,\n  Flex,\n  Text,\n  Heading\n} from '@chakra-ui/react';\nimport { MinterButton } from '../../common';\nimport { TokenMedia } from '../../common/TokenMedia';\nimport tz from '../../common/assets/tezos-sym.svg';\n\ninterface FeaturedTokenProps extends Token {\n  config: IpfsGatewayConfig;\n}\n\nexport default function FeaturedToken(props: FeaturedTokenProps) {\n  const [, setLocation] = useLocation();\n  return (\n    <Flex flexDir=\"row\" flexWrap=\"wrap\" mb={8} width=\"100%\" justifyContent=\"center\">\n      <Flex maxHeight={['45vh', '65vh']} justifyContent=\"center\" width={['85vw', '65vw', '45vw']}>\n        <TokenMedia\n          maxW=\"100%\"\n          maxH=\"50vh\"\n          objectFit=\"scale-down\"\n          class=\"featured\"\n          {...props}\n        />\n      </Flex>\n      <Box marginLeft=\"0 !important\">\n        <Flex flexDir=\"column\" h=\"100%\" w={['100%', '35vw']} justifyContent=\"center\" alignItems=\"center\">\n          <Heading size=\"md\" mt={4} fontSize=\"2.5rem\">\n            {props.title}\n          </Heading>\n          <br/>\n          <Text fontSize=\"lg\">\n            Current Price:{' '}\n            <Text as=\"span\" fontWeight=\"600\">\n              {props.sale?.price} <img src={tz} alt=\"\" width={10} height=\"auto\" style={{ display: 'inline-block' }} />\n              </Text>\n          </Text>\n          <br/>\n          <MinterButton\n            size=\"md\"\n            variant=\"primaryAction\"\n            w=\"150px\"\n            onClick={e => {\n              e.preventDefault();\n              setLocation(`/collection/${props.address}/token/${props.id}`, {\n                replace: false\n              });\n            }}\n          >\n            <Text>View</Text>\n          </MinterButton>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\n\n// Based on https://github.com/olistic/react-use-visibility#readme MIT License\nfunction isElementNearViewport(\n  element: HTMLElement,\n  allowedDistanceToViewport = 0\n) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    height,\n    width\n  } = element.getBoundingClientRect();\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const topCheck = top + height;\n  const leftCheck = left + width;\n  const bottomCheck = bottom - height;\n  const rightCheck = right - width;\n\n  return (\n    topCheck >= -allowedDistanceToViewport &&\n    leftCheck >= -allowedDistanceToViewport &&\n    bottomCheck <= windowHeight + allowedDistanceToViewport &&\n    rightCheck <= windowWidth + allowedDistanceToViewport\n  );\n}\n\n/** Simple Cross Browser Visibility Trigger */\nexport const useVisibilityTrigger = (\n  elementRef: { current: undefined | null | HTMLElement },\n  onVisible: () => void,\n  allowedDistanceToViewport = 0\n) => {\n  const hasTriggered = useRef(false);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (hasTriggered.current) {\n        return;\n      }\n      if (!elementRef.current) {\n        return;\n      }\n\n      if (\n        !isElementNearViewport(elementRef.current, allowedDistanceToViewport)\n      ) {\n        return;\n      }\n\n      hasTriggered.current = true;\n      onVisible();\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, [allowedDistanceToViewport, elementRef, onVisible]);\n\n  return {\n    reset: () => {\n      hasTriggered.current = false;\n    }\n  };\n};\n\nexport const VisibilityTrigger = ({\n  onVisible,\n  allowedDistanceToViewport\n}: {\n  onVisible: () => void;\n  allowedDistanceToViewport?: number;\n}) => {\n  const divRef = useRef(null as null | HTMLDivElement);\n  useVisibilityTrigger(divRef, onVisible, allowedDistanceToViewport ?? 0);\n\n  return <div ref={divRef} />;\n};\n","import React, { useEffect } from 'react';\nimport { Text, Flex, Heading, SimpleGrid, Spinner, Box } from '@chakra-ui/react';\nimport { Wind } from 'react-feather';\nimport { useSelector, useDispatch } from '../../../reducer';\nimport {\n  getMarketplaceNftsQuery,\n  loadMoreMarketplaceNftsQuery\n} from '../../../reducer/async/queries';\nimport TokenCard from '../../common/TokenCard';\nimport FeaturedToken from './FeaturedToken';\nimport { VisibilityTrigger } from '../../common/VisibilityTrigger';\n\nexport default function Catalog() {\n  const { system, marketplace: state } = useSelector(s => s);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(state.marketplace.address));\n  }, [state.marketplace.address, dispatch]);\n\n  const loadMore = () => {\n    dispatch(loadMoreMarketplaceNftsQuery({}));\n  };\n\n  let tokens =\n    state.marketplace.tokens?.filter(x => x.token).map(x => x.token!) ?? [];\n\n  return (\n    <Flex\n      w=\"100vw\"\n      h=\"100%\"\n      bg=\"brand.brightGray\"\n      px={10}\n      pt={6}\n      overflowY=\"scroll\"\n      justify=\"start\"\n      flexDir=\"column\"\n    >\n      {state.marketplace.loaded && tokens.length > 0 ? (\n        <Flex width=\"calc(100vw - 5rem)\" justifyContent=\"center\" alignItems=\"center\">\n          <FeaturedToken config={system.config} {...tokens[0]} />\n        </Flex>\n      ) : null}\n      <Flex\n        flex=\"1\"\n        w=\"100%\"\n        flexDir=\"column\"\n      >\n        {!state.marketplace.loaded ? (\n          <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n            <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n            <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n              Loading...\n              </Heading>\n          </Flex>\n        ) : tokens.length === 0 ? (\n          <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n            <Flex\n              px={20}\n              py={10}\n              bg=\"gray.200\"\n              textAlign=\"center\"\n              align=\"center\"\n              borderRadius=\"5px\"\n              flexDir=\"column\"\n              fontSize=\"xl\"\n              color=\"gray.400\"\n              mt={28}\n            >\n              <Wind />\n              <Text fontWeight=\"600\" pt={5}>\n                No tokens to display in this marketplace\n                </Text>\n            </Flex>\n          </Flex>\n        ) : (\n          <>\n            <SimpleGrid\n              columns={{ sm: 1, md: 2, lg: 3, xl: 4 }}\n              gap={7}\n              pb={8}\n            >\n              <>\n                {tokens.slice(1).map(token => {\n                  return (\n                    <Box display=\"grid\" transition=\"250ms padding\" padding={1} _hover={{padding: 0}}>\n                      <TokenCard\n                        key={`${token.address}-${token.id}`}\n                        config={system.config}\n                        {...token}\n                      />\n                    </Box>\n                  );\n                })}\n                <VisibilityTrigger\n                  key={state.marketplace.tokens?.length + ':' + tokens.length}\n                  onVisible={loadMore}\n                  allowedDistanceToViewport={600}\n                />\n              </>\n            </SimpleGrid>\n          </>\n        )}\n      </Flex>\n    </Flex>\n  );\n}\n","import React, { useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport {\n  Box,\n  Flex,\n  Image,\n  Link,\n  Text,\n  Menu,\n  MenuButton,\n  MenuList,\n  useDisclosure,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerBody,\n  Heading\n} from '@chakra-ui/react';\nimport { Plus, Menu as HamburgerIcon } from 'react-feather';\nimport { RiStore2Line } from 'react-icons/ri';\nimport { MdCollections } from 'react-icons/md';\nimport headerLogo from './assets/header-logo.svg';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { connectWallet, disconnectWallet } from '../../reducer/async/wallet';\nimport { MinterButton } from '.';\nimport logo from './assets/splash-logo.svg';\nimport wallet_icon from './assets/wallet.svg';\n\ninterface MobileHeaderLinkProps {\n  to: string;\n  children: React.ReactNode;\n  onClick?: () => void;\n}\n\nfunction MobileHeaderLink(props: MobileHeaderLinkProps) {\n  const [location, setLocation] = useLocation();\n  const selected = location === props.to;\n  return (\n    <Link\n      href={props.to}\n      onClick={e => {\n        e.preventDefault();\n        setLocation(props.to);\n        if (props.onClick) {\n          props.onClick();\n        }\n      }}\n      textDecor=\"none\"\n    >\n      <Heading\n        fontWeight={selected ? '600' : 'normal'}\n        color=\"brand.background\"\n        mb={4}\n        pl={selected ? 4 : 0}\n        borderLeft={selected ? '5px solid' : 'none'}\n        borderColor=\"brand.blue\"\n      >\n        {props.children}\n      </Heading>\n    </Link>\n  );\n}\n\ninterface DesktopHeaderLinkProps {\n  to: string;\n  children: React.ReactNode;\n}\n\nfunction DesktopHeaderLink(props: DesktopHeaderLinkProps) {\n  const [location, setLocation] = useLocation();\n  const selected = location === props.to;\n  return (\n    <Link\n      href={props.to}\n      onClick={e => {\n        e.preventDefault();\n        setLocation(props.to);\n      }}\n      textDecor=\"none\"\n      borderRadius=\"10px\"\n      alignItems=\"center\"\n      fontWeight=\"600\"\n      px={3}\n      py={2}\n      ml={4}\n      bg={selected ? 'gray.700' : 'none'}\n      color={selected ? 'gray.400' : 'gray.200'}\n      display=\"flex\"\n      transition=\"none\"\n      _hover={{\n        textDecor: 'none',\n        bg: 'gray.700',\n        color: selected ? 'gray.400' : 'gray.100'\n      }}\n    >\n      {props.children}\n    </Link>\n  );\n}\n\nfunction WalletInfo(props: { tzPublicKey: string }) {\n  return (\n    <Flex flexDir=\"row\" align=\"center\" my={4}>\n      <Box borderRadius=\"100%\" width={10} height={10} bg=\"brand.darkGray\" p={1}>\n        <Image\n          src={`https://services.tzkt.io/v1/avatars2/${props.tzPublicKey}`}\n        />\n      </Box>\n      <Text fontFamily=\"mono\" ml={2}>\n        {props.tzPublicKey}\n      </Text>\n    </Flex>\n  );\n}\n\nfunction WalletDisplay() {\n  const [, setLocation] = useLocation();\n  const system = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {system.status === 'WalletConnected' ? (\n        <Menu placement=\"bottom-end\" offset={[4, 24]}>\n          <MenuButton\n            padding={2}\n            _hover={{\n              textDecoration: 'none',\n              background: '#2D3748',\n              color: '#EDF2F7'\n            }}\n          >\n            <Image\n              src={wallet_icon}\n              width={4}\n              height=\"auto\"\n              style={{ filter: 'invert(1)' }}\n            />\n          </MenuButton>\n          <MenuList color=\"brand.black\">\n            <Flex flexDir=\"column\" px={4} py={2}>\n              <Text fontSize={16} fontWeight=\"600\">\n                Network: {system.config.network}\n              </Text>\n              <WalletInfo tzPublicKey={system.tzPublicKey} />\n              <MinterButton\n                alignSelf=\"flex-start\"\n                variant=\"cancelAction\"\n                onClick={async () => {\n                  await dispatch(disconnectWallet());\n                  setLocation('/');\n                }}\n              >\n                Disconnect\n              </MinterButton>\n            </Flex>\n          </MenuList>\n        </Menu>\n      ) : (\n        <MinterButton\n          variant=\"secondaryAction\"\n          onClick={e => {\n            e.preventDefault();\n            dispatch(connectWallet());\n          }}\n        >\n          Connect Wallet\n          <Image src={wallet_icon} width=\"auto\" height=\"40%\" paddingLeft={3} />\n        </MinterButton>\n      )}\n    </>\n  );\n}\n\nfunction NavItems() {\n  const system = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  const [, setLocation] = useLocation();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = useRef(null);\n\n  return (\n    <>\n      {/* Mobile */}\n      <Flex\n        flex=\"1\"\n        justify=\"flex-end\"\n        display={{\n          base: 'flex',\n          md: 'none'\n        }}\n      >\n        <Box\n          color=\"brand.lightGray\"\n          ref={btnRef}\n          cursor=\"pointer\"\n          onClick={onOpen}\n        >\n          <HamburgerIcon />\n        </Box>\n        <Drawer\n          isOpen={isOpen}\n          onClose={onClose}\n          placement=\"right\"\n          finalFocusRef={btnRef}\n        >\n          <DrawerOverlay>\n            <DrawerContent>\n              <DrawerCloseButton />\n              <DrawerBody mt={12}>\n                <Flex\n                  flexDir=\"column\"\n                  justifyContent=\"space-between\"\n                  height=\"100%\"\n                >\n                  <Flex flexDir=\"column\">\n                    <MobileHeaderLink to=\"/marketplace\" onClick={onClose}>\n                      Marketplace\n                    </MobileHeaderLink>\n                    <MobileHeaderLink to=\"/collections\" onClick={onClose}>\n                      Collections\n                    </MobileHeaderLink>\n                    {system.status === 'WalletConnected' ? (\n                      <MobileHeaderLink to=\"/create\" onClick={onClose}>\n                        New Asset\n                      </MobileHeaderLink>\n                    ) : null}\n                  </Flex>\n                  {system.status === 'WalletConnected' ? (\n                    <MinterButton\n                      variant=\"cancelAction\"\n                      onClick={async () => {\n                        await dispatch(disconnectWallet());\n                        setLocation('/');\n                      }}\n                      mb={4}\n                    >\n                      Disconnect Wallet\n                    </MinterButton>\n                  ) : (\n                    <MinterButton\n                      variant=\"secondaryAction\"\n                      onClick={e => {\n                        e.preventDefault();\n                        dispatch(connectWallet());\n                      }}\n                      mb={4}\n                    >\n                      Connect Wallet\n                      <Image\n                        src={wallet_icon}\n                        width=\"auto\"\n                        height=\"40%\"\n                        paddingLeft={3}\n                      />\n                    </MinterButton>\n                  )}\n                </Flex>\n              </DrawerBody>\n            </DrawerContent>\n          </DrawerOverlay>\n        </Drawer>\n      </Flex>\n      {/* Desktop */}\n      <Flex\n        flex=\"1\"\n        justify=\"flex-end\"\n        display={{\n          base: 'none',\n          md: 'flex'\n        }}\n      >\n        <DesktopHeaderLink to=\"/marketplace\">\n          <Box color=\"brand.turquoise\">\n            <RiStore2Line size={16} />\n          </Box>\n          <Text ml={2}>Marketplace</Text>\n        </DesktopHeaderLink>\n        {system.status === 'WalletConnected' ? (\n          <>\n            <DesktopHeaderLink to=\"/collections\">\n              <Box color=\"brand.turquoise\">\n                <MdCollections size={16} />\n              </Box>\n              <Text ml={2}>Collections</Text>\n            </DesktopHeaderLink>\n            <DesktopHeaderLink to=\"/create\">\n              <Box color=\"brand.blue\">\n                <Plus size={16} strokeWidth=\"3\" />\n              </Box>\n              <Text ml={2}>New Asset</Text>\n            </DesktopHeaderLink>\n          </>\n        ) : null}\n        <Flex\n          alignItems=\"center\"\n          color=\"brand.gray\"\n          paddingLeft={4}\n          marginLeft={4}\n          borderLeft=\"2px solid\"\n          borderColor=\"brand.darkGray\"\n        >\n          <WalletDisplay />\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nexport function Header() {\n  const [, setLocation] = useLocation();\n\n  return (\n    <Flex\n      width=\"100%\"\n      bg=\"brand.black\"\n      paddingX={4}\n      paddingY={3}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Image\n        display={{\n          base: 'none',\n          md: 'block'\n        }}\n        maxH=\"28px\"\n        marginTop=\"4px\"\n        src={logo}\n        onClick={e => {\n          e.preventDefault();\n          setLocation('/marketplace');\n        }}\n        cursor=\"pointer\"\n      />\n      <Image\n        display={{\n          base: 'block',\n          md: 'none'\n        }}\n        maxW=\"38px\"\n        src={headerLogo}\n        onClick={e => {\n          e.preventDefault();\n          setLocation('/marketplace');\n        }}\n        cursor=\"pointer\"\n      />\n      <NavItems />\n    </Flex>\n  );\n}\n\nexport default Header;\n","import { useToast } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from '../../reducer';\nimport {\n  deliverNotification,\n  readNotification\n} from '../../reducer/slices/notificationsActions';\nimport _ from 'lodash';\nimport { Notification } from '../../reducer/slices/notifications';\n\nfunction notificationStatus(notification: Notification) {\n  switch (notification.status) {\n    case 'pending':\n      return 'info';\n    case 'success':\n      return 'success';\n    case 'error':\n      return 'error';\n    default:\n      return 'info';\n  }\n}\n\nexport default function Notifications() {\n  const toast = useToast();\n  const dispatch = useDispatch();\n  const notifications = useSelector(\n    state =>\n      state.notifications.filter(({ read, delivered }) => !read && !delivered),\n    _.isEqual\n  );\n\n  useEffect(() => {\n    for (let notification of notifications) {\n      dispatch(deliverNotification(notification.requestId));\n      toast({\n        title: notification.title,\n        description: notification.description,\n        status: notificationStatus(notification),\n        duration: null,\n        isClosable: true,\n        position: 'bottom-right',\n        onCloseComplete() {\n          dispatch(readNotification(notification.requestId));\n        }\n      });\n    }\n  }, [notifications, dispatch, toast]);\n\n  return <></>;\n}\n","import React, { useEffect } from 'react';\nimport {\n  Flex,\n  Heading,\n  SimpleGrid,\n  Spinner,\n  Text,\n  Image,\n  Box,\n  Link\n} from '@chakra-ui/react';\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\nimport { ChevronLeft, Wind } from 'react-feather';\nimport { useDispatch, useSelector } from '../../reducer';\nimport {\n  getContractNftsQuery,\n  getNftAssetContractQuery\n} from '../../reducer/async/queries';\nimport TokenCard from '../common/TokenCard';\nimport { Collection } from '../../reducer/slices/collections';\nimport { MinterButton } from '../common';\nimport lk from '../common/assets/link-icon.svg'\n\ninterface CreatorDisplay404Props {\n  ownedOnly: boolean;\n}\n\nfunction CreatorDisplay404(props: CreatorDisplay404Props) {\n  return (\n    <Flex w=\"100%\" flex=\"1\" flexDir=\"column\" align=\"center\">\n      <Flex\n        px={20}\n        py={10}\n        bg=\"gray.200\"\n        textAlign=\"center\"\n        align=\"center\"\n        borderRadius=\"5px\"\n        flexDir=\"column\"\n        fontSize=\"xl\"\n        color=\"gray.400\"\n        mt={28}\n      >\n        <Wind />\n        <Text fontWeight=\"600\" pt={5}>\n          {props.ownedOnly ? 'No owned tokens to display' : 'No tokens to display'}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}\n\ninterface CreatorDisplayProps {\n  minter: string;\n  collections: { [key: string]: Collection };\n  ownedOnly?: boolean;\n}\n\nexport default function CreatorDisplay({\n  minter,\n  collections,\n  ownedOnly = true\n}: CreatorDisplayProps) {\n  const { config } = useSelector(s => s.system);\n  const dispatch = useDispatch();\n  let selectedCollection = Object.keys(collections)[0];\n\n  useEffect(() => {\n    if (selectedCollection) {\n      dispatch(getNftAssetContractQuery(selectedCollection)).then(() =>\n        dispatch(getContractNftsQuery(selectedCollection))\n      );\n    }\n  }, [dispatch, selectedCollection]);\n\n  if (!selectedCollection) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  const collection = collections[selectedCollection];\n  if (!collection) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  if (!collection.loaded) {\n    return (\n      <Flex flexDir=\"column\" align=\"center\" flex=\"1\" pt={20}>\n        <Spinner size=\"xl\" mb={6} color=\"gray.300\" />\n        <Heading size=\"lg\" textAlign=\"center\" color=\"gray.500\">\n          Loading...\n        </Heading>\n      </Flex>\n    );\n  }\n\n  if (collection.tokens === null) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  const tokens = collection.tokens;\n\n  if (tokens.length === 0) {\n    return (\n      <CreatorDisplay404 ownedOnly={ownedOnly} />\n    );\n  }\n\n  return (\n    <Flex \n      flexDir=\"column\" \n      h=\"100%\"\n      w=\"100%\"\n      flex=\"1\"\n      bg=\"brand.brightGray\"\n      borderLeftWidth=\"1px\"\n      borderLeftColor=\"brand.lightBlue\"\n      overflowY=\"scroll\"\n      justify=\"start\"\n    >\n      <Flex flexDir=\"row\">\n        <Flex justifyContent=\"flex-start\" width=\"4rem\">\n          <MinterButton\n            variant=\"primaryActionInverted\"\n            onClick={e => {\n              e.preventDefault();\n              window.history.back();\n            }}\n          >\n            <Box color=\"currentcolor\">\n              <ChevronLeft size={24} strokeWidth=\"3\" />\n            </Box>\n          </MinterButton>\n        </Flex>\n        <Flex align=\"center\" overflow=\"hidden\">\n          <Image width=\"5rem\"\n            src={`https://services.tzkt.io/v1/avatars2/${collection.address}`}\n          />\n          <Link display=\"block\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\" href={`https://${(config.network + '.').replace('mainnet.', '')}tzkt.io/${minter}`}>\n            <Heading fontSize=\"1.5rem\" overflow=\"hidden\" textOverflow=\"ellipsis\" overflowWrap=\"normal\">{minter}&nbsp;<sup><img src={lk} alt=\"\" width=\"auto\" height=\"auto\" style={{ display: 'inline-block' }} /></sup></Heading>\n          </Link>\n        </Flex>\n      </Flex>\n\n      <Flex\n        flexDir=\"column\"\n        h=\"100%\"\n        w=\"100%\"\n        px={{ base: 6, md: 10 }}\n        flex=\"1\"\n      >\n        <Tabs>\n          <TabList>\n            <Tab>Minted</Tab>\n            <Tab>For Sale</Tab>\n          </TabList>\n\n          <TabPanels>\n\n            <TabPanel>\n              <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} pb={8}>\n                {tokens\n                  .filter(\n                    ({ owner, metadata }) =>\n                      owner === minter &&\n                      (metadata?.creators?.find(creator => creator === owner) ||\n                        metadata?.minter === owner)\n                  )\n                  .map(token => {\n                    return (\n                      <TokenCard\n                        key={collection.address + token.id}\n                        address={collection.address}\n                        config={config}\n                        {...token}\n                      />\n                    );\n                  })}\n              </SimpleGrid>\n            </TabPanel>\n\n            <TabPanel>\n              <SimpleGrid columns={{ sm: 1, md: 2, lg: 3, xl: 4 }} gap={8} pb={8}>\n                {tokens\n                  .filter(({ sale }) => sale?.seller === minter)\n                  .map(token => {\n                    return (\n                      <TokenCard\n                        key={collection.address + token.id}\n                        address={collection.address}\n                        config={config}\n                        {...token}\n                      />\n                    );\n                  })}\n              </SimpleGrid>\n            </TabPanel>\n\n          </TabPanels>\n        </Tabs>\n      </Flex>\n    </Flex>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport CreatorDisplay from './CreatorDisplay';\nimport { useSelector, useDispatch } from '../../reducer';\nimport {\n  getMarketplaceNftsQuery\n} from '../../reducer/async/queries';\nimport { Collection } from '../../reducer/slices/collections';\n\nexport default function Creator({ minter }: { minter: string }) {\n  const system = useSelector(s => s.system);\n  const collections = useSelector(s => s.collections);\n  const { marketplace } = useSelector(s => s.marketplace);\n  const dispatch = useDispatch();\n\n  // Don't get assets from other contracts for now\n  // useEffect(() => {\n  //     dispatch(getAssetContractsQuery(minter));\n  // }, [system.status, dispatch, minter, collections.globalCollection]);\n\n  useEffect(() => {\n    dispatch(getMarketplaceNftsQuery(marketplace.address));\n  }, [marketplace.address, dispatch]);\n\n  const creatorsCollections = {} as { [key: string]: Collection };\n\n  if(!!marketplace.tokens) {\n    marketplace.tokens\n    .filter(\n      token =>\n        token?.token?.owner === (minter ?? system.tzPublicKey)\n    )\n    .map(token => {\n      creatorsCollections[token?.tokenSale?.value?.sale_data?.sale_token?.fa2_address] = collections.collections[token?.tokenSale?.value?.sale_data?.sale_token?.fa2_address];\n      return null;\n    });\n  }\n  Object.keys(collections.collections)\n    .filter(\n      key =>\n        collections.collections[key].creator.address ===\n        (minter ?? system.tzPublicKey)\n    )\n    .map(addr => {\n      creatorsCollections[addr] = collections.collections[addr];\n      return null;\n    });\n\n  return (\n    <Flex\n      flex=\"1\"\n      w=\"100%\"\n      minHeight=\"0\"\n      flexDir={{\n        base: 'column',\n        md: 'row'\n      }}\n    >\n      <CreatorDisplay minter={minter} collections={creatorsCollections} />\n    </Flex>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'wouter';\nimport CreateNonFungiblePage from '../CreateNonFungiblePage';\nimport CollectionsCatalog from '../Collections/Catalog';\nimport CollectionDisplay from '../Collections/Catalog/CollectionDisplay';\nimport CollectionsTokenDetail from '../Collections/TokenDetail';\nimport MarketplaceCatalog from '../Marketplace/Catalog';\nimport Header from '../common/Header';\nimport { Flex } from '@chakra-ui/react';\nimport Notifications from '../common/Notifications';\nimport { useSelector, useDispatch } from '../../reducer';\nimport { reconnectWallet } from '../../reducer/async/wallet';\nimport Creator from '../Creator';\n// import { getMarketplaceNftsQuery } from '../../reducer/async/queries';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const state = useSelector(s => s);\n\n  let walletReconnectAttempted = state.system.walletReconnectAttempted;\n\n  // // This causes excessive resource consumption as *all* marketplace data\n  // // loads when the app is mounted, even if the user has not landed or will\n  // // not land on the `/marketplace` view\n  //\n  // useEffect(() => {\n  //   dispatch(getMarketplaceNftsQuery(state.marketplace.marketplace.address));\n  // }, [state.marketplace.marketplace.address, dispatch]);\n\n  useEffect(() => {\n    if (!walletReconnectAttempted) {\n      dispatch(reconnectWallet());\n    }\n  }, [walletReconnectAttempted, dispatch]);\n\n  return (\n    <Flex pos=\"absolute\" w=\"100%\" h=\"100%\">\n      <Flex justifyContent=\"space-between\" width=\"100%\" flexDir=\"column\">\n        <Header />\n        <Switch>\n          <Route path=\"/\">\n            <MarketplaceCatalog />\n          </Route>\n          <Route path=\"/create\">\n            <CreateNonFungiblePage />\n          </Route>\n          <Route path=\"/collections\">\n            <CollectionsCatalog />\n          </Route>\n          <Route path=\"/marketplace\">\n            <MarketplaceCatalog />\n          </Route>\n          <Route path=\"/creator/:minter\">\n            {({ minter }) => <Creator minter={minter} />}\n          </Route>\n          <Route path=\"/collection/:contractAddress\">\n            {({ contractAddress }) => (\n              <CollectionDisplay address={contractAddress} ownedOnly={false} />\n            )}\n          </Route>\n          <Route path=\"/collection/:contractAddress/token/:tokenId\">\n            {({ contractAddress, tokenId }) => (\n              <CollectionsTokenDetail\n                contractAddress={contractAddress}\n                tokenId={parseInt(tokenId)}\n              />\n            )}\n          </Route>\n        </Switch>\n        <Notifications />\n      </Flex>\n    </Flex>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer';\n\nconst Button = {\n  variants: {\n    primaryAction: {\n      bg: 'brand.blue',\n      borderColor: 'brand.blue',\n      borderRadius: '8rem',\n      color: 'white',\n      transition: 'none',\n      _active: {\n        opacity: '0.5',\n        bg: 'brand.blue'\n      },\n      _hover: {\n        opacity: '0.8'\n      }\n    },\n    primaryActionInactive: {\n      bg: 'brand.blue',\n      borderColor: 'brand.blue',\n      borderRadius: '8rem',\n      color: 'white',\n      opacity: '0.3',\n      transition: 'none',\n      _active: {\n        bg: 'brand.blue'\n      }\n    },\n    primaryActionLined: {\n      bg: 'transparent',\n      borderColor: 'brand.blue',\n      borderRadius: '8rem',\n      borderWidth: '1px',\n      color: 'brand.blue',\n      transition: 'none',\n      _active: {\n        opacity: '0.5'\n      },\n      _hover: {\n        // bg: 'white',\n        // color: 'brand.blue',\n        opacity: '0.8'\n      }\n    },\n    primaryActionInverted: {\n      bg: 'transparent',\n      borderColor: 'brand.blue',\n      borderRadius: '8rem',\n      color: 'brand.blue',\n      transition: 'none',\n      _active: {\n        opacity: '0.5'\n      },\n      _hover: {\n        bg: 'brand.blue',\n        color: 'white'\n      }\n    },\n    secondaryAction: {\n      bg: 'brand.turquoise',\n      color: 'brand.background',\n      borderColor: 'brand.turquoise',\n      borderRadius: '8rem',\n      borderWidth: '1px',\n      transition: 'none',\n      _active: {\n        opacity: '0.5',\n        bg: 'brand.turquoise'\n      },\n      _hover: {\n        bg: 'brand.turquoise',\n        color: 'brand.background',\n        opacity: '0.8'\n      }\n    },\n    secondaryActionLined: {\n      bg: 'none',\n      borderColor: 'brand.turquoise',\n      borderRadius: '8rem',\n      borderWidth: '1px',\n      color: 'brand.turquoise',\n      transition: 'none',\n      _active: {\n        opacity: '0.8',\n        bg: 'brand.turquoise'\n      },\n      _hover: {\n        bg: 'brand.turquoise',\n        color: 'brand.background'\n      }\n    },\n    cancelAction: {\n      bg: 'none',\n      borderColor: 'brand.red',\n      borderRadius: '8rem',\n      borderWidth: '1px',\n      color: 'brand.red',\n      transition: 'none',\n      _active: {\n        opacity: '0.8',\n        bg: 'brand.red'\n      },\n      _hover: {\n        bg: 'brand.red',\n        color: 'white'\n      }\n    },\n    tertiaryAction: {\n      bg: 'gray.200',\n      color: 'gray.500',\n      borderRadius: '8rem',\n      _hover: {\n        bg: 'gray.100',\n        color: 'gray.400'\n      },\n      _active: {\n        bg: 'gray.100',\n        color: 'gray.400'\n      }\n    }\n  }\n};\n\nconst Link = {\n  variants: {\n    primaryAction: {\n      alignItems: 'center',\n      bg: 'brand.blue',\n      borderColor: 'brand.blue',\n      borderRadius: '2px',\n      color: 'white',\n      display: 'inline-flex',\n      fontSize: '1rem',\n      fontWeight: '600',\n      height: 10,\n      justifyContent: 'center',\n      lineHeight: '1.2',\n      paddingX: 4,\n      transition: 'none',\n      _hover: {\n        bg: 'white',\n        color: 'brand.blue',\n        textDecoration: 'none'\n      }\n    },\n    primaryActionInactive: {\n      alignItems: 'center',\n      bg: 'gray.600',\n      borderRadius: '2px',\n      color: 'gray.400',\n      display: 'inline-flex',\n      fontSize: '1rem',\n      fontWeight: '600',\n      height: 10,\n      justifyContent: 'center',\n      lineHeight: '1.2',\n      paddingX: 4,\n      transition: 'none',\n      _hover: {\n        color: 'gray.400',\n        textDecoration: 'none'\n      }\n    }\n  }\n};\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      'html, body': {\n        height: '100%'\n      }\n    }\n  },\n  colors: {\n    brand: {\n      black: '#1D2227',\n      background: '#1C2228',\n      darkGray: '#3D464F',\n      neutralGray: '#556677',\n      gray: '#AEBBC9',\n      lightGray: '#ABBBCB',\n      brightGray: '#F2F4F7',\n      blue: '#005DFF',\n      lightBlue: '#D3DEF5',\n      turquoise: '#00FFBE',\n      red: '#FF4161'\n    }\n  },\n  components: {\n    Button,\n    Link,\n    Input: {\n      variants: {\n        outline: {\n          field: {\n            borderRadius: '1px',\n            _focus: {\n              boxShadow: '0px 0px 0px 4px rgba(15, 97, 255, 0.1)'\n            }\n          }\n        }\n      }\n    },\n    Textarea: {\n      variants: {\n        outline: {\n          borderRadius: '1px',\n          _focus: {\n            boxShadow: '0px 0px 0px 4px rgba(15, 97, 255, 0.1)'\n          }\n        }\n      }\n    },\n    MenuButton: {\n      variants: {\n        primary: {\n          color: 'gray.300',\n          _hover: { color: 'brand.blue' },\n          _expanded: { color: 'brand.blue' },\n          _focus: { color: 'brand.blue' }\n        }\n      }\n    },\n    MenuItem: {\n      variants: {\n        primary: {\n          _focus: {\n            bg: 'brand.lightBlue',\n            color: 'brand.blue'\n          }\n        }\n      }\n    }\n  },\n  fonts: {\n    body: \"'Roboto', sans-serif\",\n    heading: \"'Roboto', sans-serif\",\n    mono: \"'Roboto Mono', monospace\"\n  },\n  fontWeights: {\n    normal: 400,\n    bold: 700\n  }\n});\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tezos-sym.b5be31f6.svg\";"],"sourceRoot":""}